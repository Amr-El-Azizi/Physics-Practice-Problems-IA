/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my.Main;

/**
 *
 * @author Amr
 */

import java.awt.CardLayout;
import java.awt.Component;
import java.io.File;
import java.io.IOException;
import java.net.URI;
import my.QuestionDatabase.QuestionDatabase;
import my.Question.Question;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;
import my.FileWriter.FileWriter;
import my.FilesUtil.FilesUtil;

public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    //My Var Declarations
    public QuestionDatabase Database = new QuestionDatabase();
    public Question temp;
    public Question[] tempArr;
    public Question Q1;
    public Question Q2;
    public Question Q3;
    public Question Q4;
    public Question Q5;
    public Question Q6;
    public Question Q7;
    public Question Q8;
    public Question Q9;
    public Question Q10;
    public Question QuizQ1;
    public Question QuizQ2;
    public Question QuizQ3;
    public Question QuizQ4;
    public Question QuizQ5;
    public Question QuizQ6;
    public Question QuizQ7;
    public Question QuizQ8;
    public Question QuizQ9;
    public Question QuizQ10;
    public Question QuizQ11;
    public Question QuizQ12;
    public Question QuizQ13;
    public Question QuizQ14;
    public Question QuizQ15;
    public String CT;
    public ArrayList<Question> TestQs = new ArrayList();
    public FileWriter writer = new FileWriter();
    //They end here
    
    
    
    public Main() {
        initComponents();
        //Visibility
        ResultOverflow.setVisible(false);
        CurrentQB.setVisible(false);
        AnswerVar.setVisible(false);
        UnitsVar.setVisible(false);
        NoQuery.setVisible(false);
        NoQuery2.setVisible(false);
        CurrentTestB.setVisible(false);
        CriteriaCheck.setVisible(false);
        SavedQuestionAnswerVar.setVisible(false);
        SavedQuestionUnitsVar.setVisible(false);
        FavQTypeAns.setVisible(false);
        FavQTypeUnits.setVisible(false);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        PanCard = new javax.swing.JPanel();
        Main = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        RandomQB = new javax.swing.JButton();
        SearchB = new javax.swing.JButton();
        TakeaTestB = new javax.swing.JButton();
        TopicListB = new javax.swing.JButton();
        SavedQB = new javax.swing.JButton();
        SavedTestsB = new javax.swing.JButton();
        FavoriteQTypeB = new javax.swing.JButton();
        CurrentQB = new javax.swing.JButton();
        CurrentTestB = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton33 = new javax.swing.JButton();
        FavoriteQTypes = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jComboBox5 = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        FavouriteQTypeText = new javax.swing.JTextArea();
        jLabel15 = new javax.swing.JLabel();
        FavQTypeAnsVar = new javax.swing.JTextField();
        FavQTypeAns = new javax.swing.JTextField();
        jButton14 = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        FavQTypeUnitsVar = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        FavQTypeUnits = new javax.swing.JTextField();
        jButton54 = new javax.swing.JButton();
        SavedQ = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        SavedQuestionViewer = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        SavedQuestionAnswer = new javax.swing.JTextField();
        SavedQuestionAnswerVar = new javax.swing.JTextField();
        SavedQuestionUnits = new javax.swing.JTextField();
        SavedQuestionUnitsVar = new javax.swing.JTextField();
        jButton22 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton27 = new javax.swing.JButton();
        jLabel33 = new javax.swing.JLabel();
        jButton18 = new javax.swing.JButton();
        SavedT = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jPanel22 = new javax.swing.JPanel();
        jTextField11 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextArea7 = new javax.swing.JTextArea();
        jButton19 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        Search = new javax.swing.JPanel();
        jPanel24 = new javax.swing.JPanel();
        AdvSearchBox1 = new javax.swing.JTextField();
        AdvSearchBox2 = new javax.swing.JTextField();
        AdvSearchBox3 = new javax.swing.JTextField();
        AdvSearchBox4 = new javax.swing.JTextField();
        SearchCB1 = new javax.swing.JComboBox();
        SearchCB2 = new javax.swing.JComboBox();
        SearchCB3 = new javax.swing.JComboBox();
        jButton21 = new javax.swing.JButton();
        jPanel25 = new javax.swing.JPanel();
        SearchB1 = new javax.swing.JButton();
        SearchBox = new javax.swing.JTextField();
        NoQuery = new javax.swing.JTextField();
        jButton23 = new javax.swing.JButton();
        Stats = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        jPanel28 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        QSolved = new javax.swing.JTextField();
        TCompleted = new javax.swing.JTextField();
        MostVisited = new javax.swing.JTextField();
        jButton45 = new javax.swing.JButton();
        jPanel29 = new javax.swing.JPanel();
        jTextField21 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jTextField22 = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        KQ = new javax.swing.JTextField();
        FQ = new javax.swing.JTextField();
        EQ = new javax.swing.JTextField();
        CQ = new javax.swing.JTextField();
        GQ = new javax.swing.JTextField();
        GT = new javax.swing.JTextField();
        ET = new javax.swing.JTextField();
        FT = new javax.swing.JTextField();
        CMT = new javax.swing.JTextField();
        KT = new javax.swing.JTextField();
        MQ = new javax.swing.JTextField();
        jLabel89 = new javax.swing.JLabel();
        MT = new javax.swing.JTextField();
        jLabel90 = new javax.swing.JLabel();
        jButton24 = new javax.swing.JButton();
        TopicL = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        TopicList = new javax.swing.JTree();
        jButton25 = new javax.swing.JButton();
        MakeT = new javax.swing.JPanel();
        jPanel32 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        KinematicsRB1 = new javax.swing.JRadioButton();
        ForcesRB1 = new javax.swing.JRadioButton();
        MomentumRB1 = new javax.swing.JRadioButton();
        EnergyRB1 = new javax.swing.JRadioButton();
        CircularMotionRB1 = new javax.swing.JRadioButton();
        GravityRB1 = new javax.swing.JRadioButton();
        StartTestB = new javax.swing.JButton();
        jLabel34 = new javax.swing.JLabel();
        TLS = new javax.swing.JRadioButton();
        TLM = new javax.swing.JRadioButton();
        TLL = new javax.swing.JRadioButton();
        CriteriaCheck = new javax.swing.JTextField();
        PerQ = new javax.swing.JRadioButton();
        jLabel36 = new javax.swing.JLabel();
        jButton29 = new javax.swing.JButton();
        SearchResults = new javax.swing.JPanel();
        SearchBox2 = new javax.swing.JTextField();
        SearchB2 = new javax.swing.JButton();
        jButton35 = new javax.swing.JButton();
        R1 = new javax.swing.JTextField();
        RB1 = new javax.swing.JButton();
        R2 = new javax.swing.JTextField();
        RB2 = new javax.swing.JButton();
        R3 = new javax.swing.JTextField();
        RB3 = new javax.swing.JButton();
        R4 = new javax.swing.JTextField();
        RB4 = new javax.swing.JButton();
        RB5 = new javax.swing.JButton();
        R5 = new javax.swing.JTextField();
        RB6 = new javax.swing.JButton();
        R6 = new javax.swing.JTextField();
        RB7 = new javax.swing.JButton();
        R7 = new javax.swing.JTextField();
        R8 = new javax.swing.JTextField();
        RB8 = new javax.swing.JButton();
        RB9 = new javax.swing.JButton();
        R9 = new javax.swing.JTextField();
        RB10 = new javax.swing.JButton();
        R10 = new javax.swing.JTextField();
        ResultOverflow = new javax.swing.JTextField();
        NoQuery2 = new javax.swing.JTextField();
        Question = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Qfield = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        Qanswer = new javax.swing.JTextField();
        AnswerVar = new javax.swing.JTextField();
        jButton30 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        CheckAns = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        Units = new javax.swing.JTextField();
        UnitsVar = new javax.swing.JTextField();
        jButton16 = new javax.swing.JButton();
        Quiz = new javax.swing.JPanel();
        Quiz1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        QuizAnswer1 = new javax.swing.JTextField();
        QuizUnits1 = new javax.swing.JTextField();
        QuizAnswerVar1 = new javax.swing.JTextField();
        QuizUnitsVar1 = new javax.swing.JTextField();
        QuizUnitsVar2 = new javax.swing.JTextField();
        QuizAnswerVar2 = new javax.swing.JTextField();
        QuizAnswer2 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        Quiz2 = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        QuizUnits2 = new javax.swing.JTextField();
        QuizUnitsVar3 = new javax.swing.JTextField();
        QuizAnswerVar3 = new javax.swing.JTextField();
        QuizAnswer3 = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        Quiz3 = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        QuizUnits3 = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        QuizUnitsVar4 = new javax.swing.JTextField();
        QuizAnswerVar4 = new javax.swing.JTextField();
        QuizAnswer4 = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        Quiz4 = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        QuizUnits4 = new javax.swing.JTextField();
        QuizAnswer5 = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        QuizUnits5 = new javax.swing.JTextField();
        QuizUnitsVar5 = new javax.swing.JTextField();
        jLabel48 = new javax.swing.JLabel();
        QuizAnswerVar5 = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        Quiz5 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        QuizAnsB1 = new javax.swing.JButton();
        QuizAnsB2 = new javax.swing.JButton();
        QuizAnsB3 = new javax.swing.JButton();
        QuizAnsB4 = new javax.swing.JButton();
        QuizAnsB5 = new javax.swing.JButton();
        QuestA = new javax.swing.JPanel();
        Quiz6 = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        QuizAnswer6 = new javax.swing.JTextField();
        QuizUnits6 = new javax.swing.JTextField();
        QuizAnswerVar6 = new javax.swing.JTextField();
        QuizUnitsVar6 = new javax.swing.JTextField();
        QuizUnitsVar7 = new javax.swing.JTextField();
        QuizAnswerVar7 = new javax.swing.JTextField();
        QuizAnswer7 = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        Quiz7 = new javax.swing.JTextField();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        QuizUnits7 = new javax.swing.JTextField();
        QuizUnitsVar8 = new javax.swing.JTextField();
        QuizAnswerVar8 = new javax.swing.JTextField();
        QuizAnswer8 = new javax.swing.JTextField();
        jLabel56 = new javax.swing.JLabel();
        Quiz8 = new javax.swing.JTextField();
        jLabel57 = new javax.swing.JLabel();
        QuizUnits8 = new javax.swing.JTextField();
        jLabel58 = new javax.swing.JLabel();
        QuizUnitsVar9 = new javax.swing.JTextField();
        QuizAnswerVar9 = new javax.swing.JTextField();
        QuizAnswer9 = new javax.swing.JTextField();
        jLabel59 = new javax.swing.JLabel();
        Quiz9 = new javax.swing.JTextField();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        QuizUnits9 = new javax.swing.JTextField();
        QuizAnswer10 = new javax.swing.JTextField();
        jLabel62 = new javax.swing.JLabel();
        QuizUnits10 = new javax.swing.JTextField();
        QuizUnitsVar10 = new javax.swing.JTextField();
        jLabel63 = new javax.swing.JLabel();
        QuizAnswerVar10 = new javax.swing.JTextField();
        jLabel64 = new javax.swing.JLabel();
        Quiz10 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        QuizAnsB6 = new javax.swing.JButton();
        QuizAnsB7 = new javax.swing.JButton();
        QuizAnsB8 = new javax.swing.JButton();
        QuizAnsB9 = new javax.swing.JButton();
        QuizAnsB10 = new javax.swing.JButton();
        QuestB = new javax.swing.JPanel();
        Quiz11 = new javax.swing.JTextField();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        QuizAnswer11 = new javax.swing.JTextField();
        QuizUnits11 = new javax.swing.JTextField();
        QuizAnswerVar11 = new javax.swing.JTextField();
        QuizUnitsVar11 = new javax.swing.JTextField();
        QuizUnitsVar12 = new javax.swing.JTextField();
        QuizAnswerVar12 = new javax.swing.JTextField();
        QuizAnswer12 = new javax.swing.JTextField();
        jLabel68 = new javax.swing.JLabel();
        Quiz12 = new javax.swing.JTextField();
        jLabel69 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        QuizUnits12 = new javax.swing.JTextField();
        QuizUnitsVar13 = new javax.swing.JTextField();
        QuizAnswerVar13 = new javax.swing.JTextField();
        QuizAnswer13 = new javax.swing.JTextField();
        jLabel71 = new javax.swing.JLabel();
        Quiz13 = new javax.swing.JTextField();
        jLabel72 = new javax.swing.JLabel();
        QuizUnits13 = new javax.swing.JTextField();
        jLabel73 = new javax.swing.JLabel();
        QuizUnitsVar14 = new javax.swing.JTextField();
        QuizAnswerVar14 = new javax.swing.JTextField();
        QuizAnswer14 = new javax.swing.JTextField();
        jLabel74 = new javax.swing.JLabel();
        Quiz14 = new javax.swing.JTextField();
        jLabel75 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        QuizUnits14 = new javax.swing.JTextField();
        QuizAnswer15 = new javax.swing.JTextField();
        jLabel77 = new javax.swing.JLabel();
        QuizUnits15 = new javax.swing.JTextField();
        QuizUnitsVar15 = new javax.swing.JTextField();
        jLabel78 = new javax.swing.JLabel();
        QuizAnswerVar15 = new javax.swing.JTextField();
        jLabel79 = new javax.swing.JLabel();
        Quiz15 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        QuizAnsB11 = new javax.swing.JButton();
        QuizAnsB12 = new javax.swing.JButton();
        QuizAnsB13 = new javax.swing.JButton();
        QuizAnsB14 = new javax.swing.JButton();
        QuizAnsB15 = new javax.swing.JButton();
        Quizlets = new javax.swing.JPanel();
        jButton32 = new javax.swing.JButton();
        jButton34 = new javax.swing.JButton();
        jButton36 = new javax.swing.JButton();
        jButton37 = new javax.swing.JButton();
        jButton38 = new javax.swing.JButton();
        jButton44 = new javax.swing.JButton();
        Resources = new javax.swing.JPanel();
        jLabel85 = new javax.swing.JLabel();
        jLabel86 = new javax.swing.JLabel();
        jButton39 = new javax.swing.JButton();
        jButton40 = new javax.swing.JButton();
        jButton41 = new javax.swing.JButton();
        jLabel87 = new javax.swing.JLabel();
        jButton42 = new javax.swing.JButton();
        jLabel88 = new javax.swing.JLabel();
        jButton43 = new javax.swing.JButton();
        TestA = new javax.swing.JPanel();
        Quiz16 = new javax.swing.JTextField();
        jLabel91 = new javax.swing.JLabel();
        jLabel92 = new javax.swing.JLabel();
        jLabel93 = new javax.swing.JLabel();
        QuizAnswer16 = new javax.swing.JTextField();
        QuizUnits16 = new javax.swing.JTextField();
        QuizAnswerVar16 = new javax.swing.JTextField();
        QuizUnitsVar16 = new javax.swing.JTextField();
        QuizUnitsVar17 = new javax.swing.JTextField();
        QuizAnswerVar17 = new javax.swing.JTextField();
        QuizAnswer17 = new javax.swing.JTextField();
        jLabel94 = new javax.swing.JLabel();
        Quiz17 = new javax.swing.JTextField();
        jLabel95 = new javax.swing.JLabel();
        jLabel96 = new javax.swing.JLabel();
        QuizUnits17 = new javax.swing.JTextField();
        QuizUnitsVar18 = new javax.swing.JTextField();
        QuizAnswerVar18 = new javax.swing.JTextField();
        QuizAnswer18 = new javax.swing.JTextField();
        jLabel97 = new javax.swing.JLabel();
        Quiz18 = new javax.swing.JTextField();
        jLabel98 = new javax.swing.JLabel();
        QuizUnits18 = new javax.swing.JTextField();
        jLabel99 = new javax.swing.JLabel();
        QuizUnitsVar19 = new javax.swing.JTextField();
        QuizAnswerVar19 = new javax.swing.JTextField();
        QuizAnswer19 = new javax.swing.JTextField();
        jLabel100 = new javax.swing.JLabel();
        Quiz19 = new javax.swing.JTextField();
        jLabel101 = new javax.swing.JLabel();
        jLabel102 = new javax.swing.JLabel();
        QuizUnits19 = new javax.swing.JTextField();
        QuizAnswer20 = new javax.swing.JTextField();
        jLabel103 = new javax.swing.JLabel();
        QuizUnits20 = new javax.swing.JTextField();
        QuizUnitsVar20 = new javax.swing.JTextField();
        jLabel104 = new javax.swing.JLabel();
        QuizAnswerVar20 = new javax.swing.JTextField();
        jLabel105 = new javax.swing.JLabel();
        Quiz20 = new javax.swing.JTextField();
        jButton46 = new javax.swing.JButton();
        jButton47 = new javax.swing.JButton();
        QuizAnsB16 = new javax.swing.JButton();
        QuizAnsB17 = new javax.swing.JButton();
        QuizAnsB18 = new javax.swing.JButton();
        QuizAnsB19 = new javax.swing.JButton();
        QuizAnsB20 = new javax.swing.JButton();
        TestB = new javax.swing.JPanel();
        Quiz21 = new javax.swing.JTextField();
        jLabel106 = new javax.swing.JLabel();
        jLabel107 = new javax.swing.JLabel();
        jLabel108 = new javax.swing.JLabel();
        QuizAnswer21 = new javax.swing.JTextField();
        QuizUnits21 = new javax.swing.JTextField();
        QuizAnswerVar21 = new javax.swing.JTextField();
        QuizUnitsVar21 = new javax.swing.JTextField();
        QuizUnitsVar22 = new javax.swing.JTextField();
        QuizAnswerVar22 = new javax.swing.JTextField();
        QuizAnswer22 = new javax.swing.JTextField();
        jLabel109 = new javax.swing.JLabel();
        Quiz22 = new javax.swing.JTextField();
        jLabel110 = new javax.swing.JLabel();
        jLabel111 = new javax.swing.JLabel();
        QuizUnits22 = new javax.swing.JTextField();
        QuizUnitsVar23 = new javax.swing.JTextField();
        QuizAnswerVar23 = new javax.swing.JTextField();
        QuizAnswer23 = new javax.swing.JTextField();
        jLabel112 = new javax.swing.JLabel();
        Quiz23 = new javax.swing.JTextField();
        jLabel113 = new javax.swing.JLabel();
        QuizUnits23 = new javax.swing.JTextField();
        jLabel114 = new javax.swing.JLabel();
        QuizUnitsVar24 = new javax.swing.JTextField();
        QuizAnswerVar24 = new javax.swing.JTextField();
        QuizAnswer24 = new javax.swing.JTextField();
        jLabel115 = new javax.swing.JLabel();
        Quiz24 = new javax.swing.JTextField();
        jLabel116 = new javax.swing.JLabel();
        jLabel117 = new javax.swing.JLabel();
        QuizUnits24 = new javax.swing.JTextField();
        QuizAnswer25 = new javax.swing.JTextField();
        jLabel118 = new javax.swing.JLabel();
        QuizUnits25 = new javax.swing.JTextField();
        QuizUnitsVar25 = new javax.swing.JTextField();
        jLabel119 = new javax.swing.JLabel();
        QuizAnswerVar25 = new javax.swing.JTextField();
        jLabel120 = new javax.swing.JLabel();
        Quiz25 = new javax.swing.JTextField();
        jButton48 = new javax.swing.JButton();
        jButton49 = new javax.swing.JButton();
        jButton50 = new javax.swing.JButton();
        jLabel122 = new javax.swing.JLabel();
        QuizAnsB21 = new javax.swing.JButton();
        QuizAnsB22 = new javax.swing.JButton();
        QuizAnsB23 = new javax.swing.JButton();
        QuizAnsB24 = new javax.swing.JButton();
        QuizAnsB25 = new javax.swing.JButton();
        TestC = new javax.swing.JPanel();
        Quiz26 = new javax.swing.JTextField();
        jLabel121 = new javax.swing.JLabel();
        jLabel123 = new javax.swing.JLabel();
        QuizAnswer26 = new javax.swing.JTextField();
        QuizUnits26 = new javax.swing.JTextField();
        QuizAnswerVar26 = new javax.swing.JTextField();
        QuizUnitsVar26 = new javax.swing.JTextField();
        QuizUnitsVar27 = new javax.swing.JTextField();
        QuizAnswerVar27 = new javax.swing.JTextField();
        QuizAnswer27 = new javax.swing.JTextField();
        jLabel124 = new javax.swing.JLabel();
        Quiz27 = new javax.swing.JTextField();
        jLabel125 = new javax.swing.JLabel();
        jLabel126 = new javax.swing.JLabel();
        QuizUnits27 = new javax.swing.JTextField();
        QuizUnitsVar28 = new javax.swing.JTextField();
        QuizAnswerVar28 = new javax.swing.JTextField();
        QuizAnswer28 = new javax.swing.JTextField();
        jLabel127 = new javax.swing.JLabel();
        Quiz28 = new javax.swing.JTextField();
        jLabel128 = new javax.swing.JLabel();
        QuizUnits28 = new javax.swing.JTextField();
        jLabel129 = new javax.swing.JLabel();
        QuizUnitsVar29 = new javax.swing.JTextField();
        QuizAnswerVar29 = new javax.swing.JTextField();
        QuizAnswer29 = new javax.swing.JTextField();
        jLabel130 = new javax.swing.JLabel();
        Quiz29 = new javax.swing.JTextField();
        jLabel131 = new javax.swing.JLabel();
        jLabel132 = new javax.swing.JLabel();
        QuizUnits29 = new javax.swing.JTextField();
        QuizAnswer30 = new javax.swing.JTextField();
        jLabel133 = new javax.swing.JLabel();
        QuizUnits30 = new javax.swing.JTextField();
        QuizUnitsVar30 = new javax.swing.JTextField();
        jLabel134 = new javax.swing.JLabel();
        QuizAnswerVar30 = new javax.swing.JTextField();
        jLabel135 = new javax.swing.JLabel();
        Quiz30 = new javax.swing.JTextField();
        jButton51 = new javax.swing.JButton();
        jButton52 = new javax.swing.JButton();
        jButton53 = new javax.swing.JButton();
        QuizAnsB26 = new javax.swing.JButton();
        QuizAnsB27 = new javax.swing.JButton();
        QuizAnsB28 = new javax.swing.JButton();
        QuizAnsB29 = new javax.swing.JButton();
        QuizAnsB30 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        PanCard.setLayout(new java.awt.CardLayout());

        Main.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "IB CompSci IA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 3, 36))); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Questions", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18), new java.awt.Color(255, 0, 0))); // NOI18N

        RandomQB.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        RandomQB.setText("Random Question");
        RandomQB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RandomQBActionPerformed(evt);
            }
        });

        SearchB.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        SearchB.setText("Search");
        SearchB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBActionPerformed(evt);
            }
        });

        TakeaTestB.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        TakeaTestB.setText("Take a Test");
        TakeaTestB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TakeaTestBActionPerformed(evt);
            }
        });

        TopicListB.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        TopicListB.setText("Topic List");
        TopicListB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TopicListBMouseClicked(evt);
            }
        });
        TopicListB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TopicListBActionPerformed(evt);
            }
        });

        SavedQB.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        SavedQB.setText("Saved Questions");
        SavedQB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SavedQBActionPerformed(evt);
            }
        });

        SavedTestsB.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        SavedTestsB.setText("Saved Tests");
        SavedTestsB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SavedTestsBActionPerformed(evt);
            }
        });

        FavoriteQTypeB.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        FavoriteQTypeB.setText("Favorite Question Types");
        FavoriteQTypeB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FavoriteQTypeBActionPerformed(evt);
            }
        });

        CurrentQB.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        CurrentQB.setText("Current Question");
        CurrentQB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CurrentQBActionPerformed(evt);
            }
        });

        CurrentTestB.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        CurrentTestB.setText("Current Test");
        CurrentTestB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CurrentTestBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RandomQB)
                    .addComponent(SearchB)
                    .addComponent(TopicListB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FavoriteQTypeB)
                    .addComponent(SavedQB)
                    .addComponent(CurrentQB, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TakeaTestB)
                            .addComponent(SavedTestsB, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(CurrentTestB, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {CurrentQB, FavoriteQTypeB, RandomQB, SavedQB, SavedTestsB, SearchB, TakeaTestB, TopicListB});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SavedQB)
                    .addComponent(TakeaTestB)
                    .addComponent(TopicListB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SavedTestsB)
                    .addComponent(FavoriteQTypeB)
                    .addComponent(SearchB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RandomQB)
                    .addComponent(CurrentQB)
                    .addComponent(CurrentTestB)))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Resources", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18), new java.awt.Color(255, 0, 0))); // NOI18N

        jButton9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton9.setText("Options");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton10.setText("Statistics");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton11.setText("Practice IB Style Question Banks");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton33.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton33.setText("Quizlets");
        jButton33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton33ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton11)
                    .addComponent(jButton33, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton10, jButton11, jButton33, jButton9});

        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton11)
                    .addComponent(jButton9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton33)
                    .addComponent(jButton10))
                .addGap(29, 29, 29))
        );

        javax.swing.GroupLayout MainLayout = new javax.swing.GroupLayout(Main);
        Main.setLayout(MainLayout);
        MainLayout.setHorizontalGroup(
            MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        MainLayout.setVerticalGroup(
            MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PanCard.add(Main, "Main Interface");

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Favorite Question Types", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18), new java.awt.Color(0, 0, 255))); // NOI18N

        jComboBox5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel13.setText("Question Type:");

        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel14.setText("Question:");

        FavouriteQTypeText.setColumns(20);
        FavouriteQTypeText.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        FavouriteQTypeText.setRows(5);
        jScrollPane5.setViewportView(FavouriteQTypeText);

        jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel15.setText("Your Answer:");

        FavQTypeAnsVar.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        FavQTypeAns.setEditable(false);
        FavQTypeAns.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        FavQTypeAns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FavQTypeAnsActionPerformed(evt);
            }
        });

        jButton14.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton14.setText("Check Answer");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton28.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton28.setText("New Question");
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });

        jButton15.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton15.setText("Back");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        FavQTypeUnitsVar.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel35.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel35.setText("Units:");

        FavQTypeUnits.setEditable(false);
        FavQTypeUnits.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        FavQTypeUnits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FavQTypeUnitsActionPerformed(evt);
            }
        });

        jButton54.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton54.setText("Delete Type");
        jButton54.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton54ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel35)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FavQTypeUnitsVar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FavQTypeUnits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton15))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addComponent(FavQTypeAnsVar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(FavQTypeAns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton54)))
                .addContainerGap())
        );

        jPanel12Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton28, jButton54});

        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(jButton28))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton54)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FavQTypeAnsVar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FavQTypeAns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton15)
                    .addComponent(FavQTypeUnitsVar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35)
                    .addComponent(FavQTypeUnits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton14))
                .addContainerGap())
        );

        javax.swing.GroupLayout FavoriteQTypesLayout = new javax.swing.GroupLayout(FavoriteQTypes);
        FavoriteQTypes.setLayout(FavoriteQTypesLayout);
        FavoriteQTypesLayout.setHorizontalGroup(
            FavoriteQTypesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FavoriteQTypesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        FavoriteQTypesLayout.setVerticalGroup(
            FavoriteQTypesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FavoriteQTypesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PanCard.add(FavoriteQTypes, "Favorite Question Types");

        SavedQ.setName(""); // NOI18N

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Saved Questions", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18), new java.awt.Color(0, 0, 255))); // NOI18N

        jComboBox1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setText("Question List:");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Question:");

        SavedQuestionViewer.setEditable(false);
        SavedQuestionViewer.setColumns(20);
        SavedQuestionViewer.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        SavedQuestionViewer.setRows(5);
        jScrollPane6.setViewportView(SavedQuestionViewer);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Your Answer:");

        SavedQuestionAnswer.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        SavedQuestionAnswerVar.setEditable(false);
        SavedQuestionAnswerVar.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        SavedQuestionAnswerVar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SavedQuestionAnswerVarActionPerformed(evt);
            }
        });

        SavedQuestionUnits.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        SavedQuestionUnitsVar.setEditable(false);
        SavedQuestionUnitsVar.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        SavedQuestionUnitsVar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SavedQuestionUnitsVarActionPerformed(evt);
            }
        });

        jButton22.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton22.setText("Check Answer");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        jButton13.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton13.setText("Open Question");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton27.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton27.setText("Delete Question");
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel33.setText("Units:");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addComponent(jLabel33)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(SavedQuestionUnits, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(SavedQuestionAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addComponent(SavedQuestionAnswerVar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(SavedQuestionUnitsVar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jButton13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SavedQuestionAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SavedQuestionAnswerVar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SavedQuestionUnits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SavedQuestionUnitsVar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton22)
                    .addComponent(jLabel33)))
        );

        jButton18.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton18.setText("Back");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SavedQLayout = new javax.swing.GroupLayout(SavedQ);
        SavedQ.setLayout(SavedQLayout);
        SavedQLayout.setHorizontalGroup(
            SavedQLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 603, Short.MAX_VALUE)
            .addGroup(SavedQLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(SavedQLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(SavedQLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SavedQLayout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(jButton18)))
                    .addContainerGap()))
        );
        SavedQLayout.setVerticalGroup(
            SavedQLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 679, Short.MAX_VALUE)
            .addGroup(SavedQLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(SavedQLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton18)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        PanCard.add(SavedQ, "Saved Questions");

        jPanel21.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Saved Tests", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18), new java.awt.Color(0, 0, 255))); // NOI18N

        jComboBox3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText("Test List:");

        jPanel22.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Test Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 16))); // NOI18N

        jTextField11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTextField11.setText("Number");

        jLabel16.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel16.setText("Length:");

        jLabel17.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel17.setText("Units:");

        jTextArea7.setColumns(20);
        jTextArea7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTextArea7.setRows(5);
        jScrollPane7.setViewportView(jTextArea7);

        jButton19.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton19.setText("Go To Test");

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton19)
                .addContainerGap())
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(104, 104, 104)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane7))
                .addGap(11, 11, 11)
                .addComponent(jButton19)
                .addContainerGap())
        );

        jButton20.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton20.setText("Back");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox3, 0, 496, Short.MAX_VALUE))
                    .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton20)
                .addGap(18, 18, 18))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton20))
        );

        javax.swing.GroupLayout SavedTLayout = new javax.swing.GroupLayout(SavedT);
        SavedT.setLayout(SavedTLayout);
        SavedTLayout.setHorizontalGroup(
            SavedTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SavedTLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        SavedTLayout.setVerticalGroup(
            SavedTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SavedTLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PanCard.add(SavedT, "Saved Tests");

        Search.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18), new java.awt.Color(0, 0, 225))); // NOI18N

        jPanel24.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Advanced Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18))); // NOI18N

        AdvSearchBox1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        AdvSearchBox1.setText("Enter search query here");
        AdvSearchBox1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        AdvSearchBox2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        AdvSearchBox2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        AdvSearchBox3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        AdvSearchBox3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        AdvSearchBox4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        AdvSearchBox4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        SearchCB1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        SearchCB1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AND", "OR" }));

        SearchCB2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        SearchCB2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AND", "OR" }));

        SearchCB3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        SearchCB3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AND", "OR" }));

        jButton21.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton21.setText("Search");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AdvSearchBox1)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SearchCB1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SearchCB2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SearchCB3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AdvSearchBox4, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
                            .addComponent(AdvSearchBox3)
                            .addComponent(AdvSearchBox2)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel24Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton21)))
                .addContainerGap())
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AdvSearchBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(SearchCB1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(AdvSearchBox2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(SearchCB2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(AdvSearchBox3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(SearchCB3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(AdvSearchBox4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton21)
                .addGap(40, 40, 40))
        );

        jPanel25.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Basic Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18))); // NOI18N

        SearchB1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        SearchB1.setText("Search");
        SearchB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchB1ActionPerformed(evt);
            }
        });

        SearchBox.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        SearchBox.setText("Enter search query here");

        NoQuery.setEditable(false);
        NoQuery.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SearchBox, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE)
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addComponent(NoQuery)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SearchB1)))
                .addContainerGap())
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel25Layout.createSequentialGroup()
                .addComponent(SearchBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchB1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(NoQuery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jButton23.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton23.setText("Back");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SearchLayout = new javax.swing.GroupLayout(Search);
        Search.setLayout(SearchLayout);
        SearchLayout.setHorizontalGroup(
            SearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SearchLayout.createSequentialGroup()
                .addContainerGap(522, Short.MAX_VALUE)
                .addComponent(jButton23)
                .addContainerGap())
            .addGroup(SearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(SearchLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(SearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        SearchLayout.setVerticalGroup(
            SearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SearchLayout.createSequentialGroup()
                .addContainerGap(605, Short.MAX_VALUE)
                .addComponent(jButton23)
                .addGap(20, 20, 20))
            .addGroup(SearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(SearchLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(352, Short.MAX_VALUE)))
        );

        PanCard.add(Search, "Search");

        jPanel27.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.MatteBorder(null), "Statistics", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18))); // NOI18N

        jPanel28.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "General", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 16), new java.awt.Color(102, 255, 153))); // NOI18N

        jLabel19.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel19.setText("Most Visited Unit:");

        jLabel20.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel20.setText("Tests Completed:");

        jLabel21.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel21.setText("Questions Solved:");

        QSolved.setEditable(false);
        QSolved.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        TCompleted.setEditable(false);
        TCompleted.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        MostVisited.setEditable(false);
        MostVisited.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jButton45.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton45.setText("Clear");
        jButton45.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton45ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel28Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MostVisited))
                    .addGroup(jPanel28Layout.createSequentialGroup()
                        .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel28Layout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(QSolved, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel28Layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TCompleted, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel28Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton45))
        );

        jPanel28Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel19, jLabel20, jLabel21});

        jPanel28Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {QSolved, TCompleted});

        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(QSolved))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(TCompleted))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(MostVisited))
                .addGap(320, 320, 320)
                .addComponent(jButton45)
                .addGap(118, 118, 118))
        );

        jPanel29.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Specific", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 16), new java.awt.Color(102, 255, 153))); // NOI18N

        jTextField21.setEditable(false);
        jTextField21.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTextField21.setText("Questions solved by Unit:");

        jLabel22.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel22.setText("Kinematics:");

        jLabel23.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel23.setText("Circular Motion:");

        jLabel24.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel24.setText("Forces:");

        jLabel25.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel25.setText("Gravity:");

        jLabel26.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel26.setText("Energy:");

        jTextField22.setEditable(false);
        jTextField22.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTextField22.setText("Tests completed by Unit:");

        jLabel27.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel27.setText("Gravity:");

        jLabel28.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel28.setText("Kinematics:");

        jLabel29.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel29.setText("Forces:");

        jLabel30.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel30.setText("Energy:");

        jLabel31.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel31.setText("Circular Motion:");

        KQ.setEditable(false);
        KQ.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        FQ.setEditable(false);
        FQ.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        EQ.setEditable(false);
        EQ.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        CQ.setEditable(false);
        CQ.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        GQ.setEditable(false);
        GQ.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        GT.setEditable(false);
        GT.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        ET.setEditable(false);
        ET.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        FT.setEditable(false);
        FT.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        CMT.setEditable(false);
        CMT.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        KT.setEditable(false);
        KT.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        MQ.setEditable(false);
        MQ.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel89.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel89.setText("Momentum:");

        MT.setEditable(false);
        MT.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel90.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel90.setText("Momentum:");

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField21, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                    .addComponent(jTextField22)
                    .addGroup(jPanel29Layout.createSequentialGroup()
                        .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel29Layout.createSequentialGroup()
                                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel29)
                                            .addComponent(jLabel28))
                                        .addComponent(jLabel90))
                                    .addComponent(jLabel30)
                                    .addComponent(jLabel31)
                                    .addComponent(jLabel27))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(KT)
                                    .addComponent(GT)
                                    .addComponent(FT)
                                    .addComponent(ET)
                                    .addComponent(CMT)
                                    .addComponent(MT)))
                            .addGroup(jPanel29Layout.createSequentialGroup()
                                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel23)
                                    .addComponent(jLabel25)
                                    .addComponent(jLabel26)
                                    .addComponent(jLabel24)
                                    .addComponent(jLabel22)
                                    .addComponent(jLabel89))
                                .addGap(10, 10, 10)
                                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(KQ)
                                    .addComponent(GQ)
                                    .addComponent(CQ)
                                    .addComponent(EQ)
                                    .addComponent(FQ)
                                    .addComponent(MQ))))
                        .addGap(19, 19, 19)))
                .addContainerGap())
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addComponent(jTextField21, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(KQ))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(FQ))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel89)
                    .addComponent(MQ))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(EQ))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(CQ))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(GQ))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField22, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(KT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FT)
                    .addComponent(jLabel29))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MT)
                    .addComponent(jLabel90))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ET)
                    .addComponent(jLabel30))
                .addGap(4, 4, 4)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CMT)
                    .addComponent(jLabel31))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GT)
                    .addComponent(jLabel27))
                .addGap(35, 35, 35))
        );

        jButton24.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton24.setText("Back");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addComponent(jPanel28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jButton24)
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel28, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel29, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton24))
        );

        javax.swing.GroupLayout StatsLayout = new javax.swing.GroupLayout(Stats);
        Stats.setLayout(StatsLayout);
        StatsLayout.setHorizontalGroup(
            StatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        StatsLayout.setVerticalGroup(
            StatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StatsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        PanCard.add(Stats, "Statistics");

        TopicList.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Topic List");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Kinematics");
        javax.swing.tree.DefaultMutableTreeNode treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Basics");
        javax.swing.tree.DefaultMutableTreeNode treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Velocity and Displacement");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Acceleration");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Graph Conversion");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Velocity and Displacement");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("All Three");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Projectile Motion");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Horizontal Motion");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Drop the ball");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Toss the ball");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("2D Projective Motion");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Launching an object off of a surface");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Launching objects at an angle");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Forces");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Basic Principles");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Vectors");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Newton's First Law");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Friction");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Flat Surface");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Angle of Repose");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Newton's Second Law");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Acceleration and Mass");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Mass and Force");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Force and Acceleration");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Angled Forces");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Up and Down Elevators");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Momentum");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Basic Impulse and Momentum");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Conservation of Momentum");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Elastic and Inelastic Collisions");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Newtons Second Law in terms of momentum");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("2D Conservation of Momentum");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Newton's Third Law");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Identifying Force Pairs");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Trick Question");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Energy");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Force multipliers");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Pullies");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Inclined Planes");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Work");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Trick Questions");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Basic Calculations");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Energy");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Spring Potential");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Kinetic");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Gravitational Potential");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Conservation of Energy");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Inelastic and Elastic Collisions");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Power");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Effeciency");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Circular Motion");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Tangential Velocity");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Basic Calculations");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Maximum Velocity");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Minimum Velocity");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Centripital Force");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Angular Velocity");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Gravity");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Gravity Equation");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Trick2g");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("The Hanging Monkey");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Acceleration at the top");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Angle or repose");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        TopicList.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        TopicList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TopicListMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(TopicList);

        jButton25.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton25.setText("Back");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TopicLLayout = new javax.swing.GroupLayout(TopicL);
        TopicL.setLayout(TopicLLayout);
        TopicLLayout.setHorizontalGroup(
            TopicLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TopicLLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TopicLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TopicLLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton25)))
                .addContainerGap())
        );
        TopicLLayout.setVerticalGroup(
            TopicLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TopicLLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton25)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PanCard.add(TopicL, "Topic List");

        MakeT.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Make A Test", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18), new java.awt.Color(0, 204, 0))); // NOI18N

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Settings", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 16))); // NOI18N

        jLabel32.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel32.setText("Units:");

        KinematicsRB1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        KinematicsRB1.setText("Kinematics");

        ForcesRB1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        ForcesRB1.setText("Forces");

        MomentumRB1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        MomentumRB1.setText("Momentum");

        EnergyRB1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        EnergyRB1.setText("Energy");

        CircularMotionRB1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        CircularMotionRB1.setText("Circular Motion");

        GravityRB1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        GravityRB1.setText("Gravity");

        StartTestB.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        StartTestB.setText("Start Test");
        StartTestB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartTestBActionPerformed(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel34.setText("Test Length:");

        buttonGroup2.add(TLS);
        TLS.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        TLS.setText("Quiz");

        buttonGroup2.add(TLM);
        TLM.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        TLM.setText("Quest");

        buttonGroup2.add(TLL);
        TLL.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        TLL.setText("Test");

        CriteriaCheck.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        CriteriaCheck.setText("Select All Criteria please");

        PerQ.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        PerQ.setText("Per Question");

        jLabel36.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel36.setText("Answer Availability:");

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel32Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel32Layout.createSequentialGroup()
                        .addComponent(CriteriaCheck, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(StartTestB))
                    .addGroup(jPanel32Layout.createSequentialGroup()
                        .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel34)
                            .addComponent(jLabel32)
                            .addComponent(jLabel36)
                            .addGroup(jPanel32Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel32Layout.createSequentialGroup()
                                        .addComponent(TLS)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(TLM)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(TLL))
                                    .addGroup(jPanel32Layout.createSequentialGroup()
                                        .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(EnergyRB1)
                                            .addComponent(KinematicsRB1))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ForcesRB1)
                                            .addComponent(CircularMotionRB1))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(MomentumRB1)
                                            .addComponent(GravityRB1)))
                                    .addComponent(PerQ))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel32Layout.createSequentialGroup()
                .addComponent(jLabel32)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(KinematicsRB1)
                    .addComponent(ForcesRB1)
                    .addComponent(MomentumRB1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EnergyRB1)
                    .addComponent(CircularMotionRB1)
                    .addComponent(GravityRB1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel36)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PerQ)
                .addGap(4, 4, 4)
                .addComponent(jLabel34)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TLS)
                    .addComponent(TLM)
                    .addComponent(TLL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CriteriaCheck, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StartTestB))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton29.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton29.setText("Back");
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MakeTLayout = new javax.swing.GroupLayout(MakeT);
        MakeT.setLayout(MakeTLayout);
        MakeTLayout.setHorizontalGroup(
            MakeTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MakeTLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MakeTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton29, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        MakeTLayout.setVerticalGroup(
            MakeTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MakeTLayout.createSequentialGroup()
                .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton29)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PanCard.add(MakeT, "Make A Test");

        SearchResults.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Search Results", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18))); // NOI18N

        SearchBox2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        SearchBox2.setToolTipText("");

        SearchB2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        SearchB2.setText("Search");
        SearchB2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchB2ActionPerformed(evt);
            }
        });

        jButton35.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton35.setText("Back");
        jButton35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton35ActionPerformed(evt);
            }
        });

        R1.setEditable(false);
        R1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        RB1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        RB1.setText("Go To Question");
        RB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB1ActionPerformed(evt);
            }
        });

        R2.setEditable(false);
        R2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        RB2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        RB2.setText("Go To Question");
        RB2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB2ActionPerformed(evt);
            }
        });

        R3.setEditable(false);
        R3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        RB3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        RB3.setText("Go To Question");
        RB3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB3ActionPerformed(evt);
            }
        });

        R4.setEditable(false);
        R4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        RB4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        RB4.setText("Go To Question");
        RB4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB4ActionPerformed(evt);
            }
        });

        RB5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        RB5.setText("Go To Question");
        RB5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB5ActionPerformed(evt);
            }
        });

        R5.setEditable(false);
        R5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        RB6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        RB6.setText("Go To Question");
        RB6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB6ActionPerformed(evt);
            }
        });

        R6.setEditable(false);
        R6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        RB7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        RB7.setText("Go To Question");
        RB7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB7ActionPerformed(evt);
            }
        });

        R7.setEditable(false);
        R7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        R8.setEditable(false);
        R8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        RB8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        RB8.setText("Go To Question");
        RB8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB8ActionPerformed(evt);
            }
        });

        RB9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        RB9.setText("Go To Question");
        RB9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB9ActionPerformed(evt);
            }
        });

        R9.setEditable(false);
        R9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        RB10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        RB10.setText("Go To Question");
        RB10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB10ActionPerformed(evt);
            }
        });

        R10.setEditable(false);
        R10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        ResultOverflow.setEditable(false);
        ResultOverflow.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        NoQuery2.setEditable(false);
        NoQuery2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        javax.swing.GroupLayout SearchResultsLayout = new javax.swing.GroupLayout(SearchResults);
        SearchResults.setLayout(SearchResultsLayout);
        SearchResultsLayout.setHorizontalGroup(
            SearchResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchResultsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SearchResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SearchBox2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SearchResultsLayout.createSequentialGroup()
                        .addComponent(R1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RB1))
                    .addGroup(SearchResultsLayout.createSequentialGroup()
                        .addComponent(R2, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RB2))
                    .addGroup(SearchResultsLayout.createSequentialGroup()
                        .addComponent(R3, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RB3))
                    .addGroup(SearchResultsLayout.createSequentialGroup()
                        .addComponent(R4, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RB4))
                    .addGroup(SearchResultsLayout.createSequentialGroup()
                        .addComponent(R5, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RB5))
                    .addGroup(SearchResultsLayout.createSequentialGroup()
                        .addComponent(R6, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RB6))
                    .addGroup(SearchResultsLayout.createSequentialGroup()
                        .addComponent(R7, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RB7))
                    .addGroup(SearchResultsLayout.createSequentialGroup()
                        .addComponent(R8, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RB8))
                    .addGroup(SearchResultsLayout.createSequentialGroup()
                        .addComponent(R9, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RB9))
                    .addGroup(SearchResultsLayout.createSequentialGroup()
                        .addComponent(R10, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RB10))
                    .addComponent(ResultOverflow)
                    .addGroup(SearchResultsLayout.createSequentialGroup()
                        .addComponent(NoQuery2)
                        .addGap(8, 8, 8)
                        .addComponent(SearchB2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SearchResultsLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton35, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        SearchResultsLayout.setVerticalGroup(
            SearchResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchResultsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SearchBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SearchResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchB2)
                    .addComponent(NoQuery2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ResultOverflow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SearchResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(R1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RB1))
                .addGap(6, 6, 6)
                .addGroup(SearchResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(R2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RB2))
                .addGap(6, 6, 6)
                .addGroup(SearchResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(R3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RB3))
                .addGap(6, 6, 6)
                .addGroup(SearchResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(R4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RB4))
                .addGap(6, 6, 6)
                .addGroup(SearchResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(R5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RB5))
                .addGap(6, 6, 6)
                .addGroup(SearchResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(R6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RB6))
                .addGap(6, 6, 6)
                .addGroup(SearchResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(R7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RB7))
                .addGap(6, 6, 6)
                .addGroup(SearchResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(R8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RB8))
                .addGap(6, 6, 6)
                .addGroup(SearchResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(R9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RB9))
                .addGap(6, 6, 6)
                .addGroup(SearchResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(R10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RB10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton35))
        );

        PanCard.add(SearchResults, "Search Results");

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Question", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18))); // NOI18N

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel8.setText("Question:");

        Qfield.setEditable(false);
        Qfield.setColumns(20);
        Qfield.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Qfield.setRows(5);
        jScrollPane3.setViewportView(Qfield);

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel9.setText("Your Answer:");

        Qanswer.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        AnswerVar.setEditable(false);
        AnswerVar.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jButton30.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton30.setText("Bookmark Question Type");
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton1.setText("See Answer and Explanation");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton31.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton31.setText("Save Question");
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });

        CheckAns.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        CheckAns.setText("Check Answer");
        CheckAns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckAnsActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Units:");

        Units.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        UnitsVar.setEditable(false);
        UnitsVar.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane3)
                .addGap(10, 10, 10))
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Units, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Qanswer, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AnswerVar, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                            .addComponent(UnitsVar)))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jButton31)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton30, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(CheckAns, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel14Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {CheckAns, jButton1, jButton30, jButton31});

        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addComponent(jLabel8)
                .addGap(1, 1, 1)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Qanswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AnswerVar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CheckAns))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(Units, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(UnitsVar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton30)
                    .addComponent(jButton31)))
        );

        jButton16.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton16.setText("Back");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout QuestionLayout = new javax.swing.GroupLayout(Question);
        Question.setLayout(QuestionLayout);
        QuestionLayout.setHorizontalGroup(
            QuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, QuestionLayout.createSequentialGroup()
                .addContainerGap(532, Short.MAX_VALUE)
                .addComponent(jButton16)
                .addContainerGap())
            .addGroup(QuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(QuestionLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        QuestionLayout.setVerticalGroup(
            QuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(QuestionLayout.createSequentialGroup()
                .addGap(310, 310, 310)
                .addComponent(jButton16)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(QuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(QuestionLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(376, Short.MAX_VALUE)))
        );

        PanCard.add(Question, "Questions");

        Quiz.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Quiz", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18))); // NOI18N

        Quiz1.setEditable(false);
        Quiz1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Question 1:");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel10.setText("Answer:");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel11.setText("Units:");

        QuizAnswer1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizUnits1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswerVar1.setEditable(false);
        QuizAnswerVar1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizUnitsVar1.setEditable(false);
        QuizUnitsVar1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizUnitsVar2.setEditable(false);
        QuizUnitsVar2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswerVar2.setEditable(false);
        QuizAnswerVar2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswer2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel12.setText("Answer:");

        Quiz2.setEditable(false);
        Quiz2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel39.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel39.setText("Question 2:");

        jLabel40.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel40.setText("Units:");

        QuizUnits2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizUnitsVar3.setEditable(false);
        QuizUnitsVar3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswerVar3.setEditable(false);
        QuizAnswerVar3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswer3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel41.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel41.setText("Answer:");

        Quiz3.setEditable(false);
        Quiz3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel42.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel42.setText("Question 3:");

        QuizUnits3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel43.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel43.setText("Units:");

        QuizUnitsVar4.setEditable(false);
        QuizUnitsVar4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswerVar4.setEditable(false);
        QuizAnswerVar4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswer4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel44.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel44.setText("Answer:");

        Quiz4.setEditable(false);
        Quiz4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel45.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel45.setText("Question 4:");

        jLabel46.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel46.setText("Units:");

        QuizUnits4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswer5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel47.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel47.setText("Question 5:");

        QuizUnits5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizUnitsVar5.setEditable(false);
        QuizUnitsVar5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel48.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel48.setText("Units:");

        QuizAnswerVar5.setEditable(false);
        QuizAnswerVar5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel49.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel49.setText("Answer:");

        Quiz5.setEditable(false);
        Quiz5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jButton2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton2.setText("Check Answers");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        QuizAnsB1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        QuizAnsB1.setText("Check Answer");
        QuizAnsB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuizAnsB1ActionPerformed(evt);
            }
        });

        QuizAnsB2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        QuizAnsB2.setText("Check Answer");
        QuizAnsB2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuizAnsB2ActionPerformed(evt);
            }
        });

        QuizAnsB3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        QuizAnsB3.setText("Check Answer");
        QuizAnsB3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuizAnsB3ActionPerformed(evt);
            }
        });

        QuizAnsB4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        QuizAnsB4.setText("Check Answer");
        QuizAnsB4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuizAnsB4ActionPerformed(evt);
            }
        });

        QuizAnsB5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        QuizAnsB5.setText("Check Answer");
        QuizAnsB5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuizAnsB5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout QuizLayout = new javax.swing.GroupLayout(Quiz);
        Quiz.setLayout(QuizLayout);
        QuizLayout.setHorizontalGroup(
            QuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, QuizLayout.createSequentialGroup()
                .addGroup(QuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel10)
                    .addComponent(jLabel41)
                    .addComponent(jLabel44)
                    .addComponent(jLabel49))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(QuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(QuizAnswerVar2)
                    .addComponent(QuizAnswerVar1)
                    .addComponent(QuizAnswer1)
                    .addComponent(QuizAnswer2)
                    .addComponent(QuizAnswerVar3)
                    .addComponent(QuizAnswer3)
                    .addComponent(QuizAnswerVar4)
                    .addComponent(QuizAnswer4)
                    .addComponent(QuizAnswer5)
                    .addComponent(QuizAnswerVar5))
                .addGap(18, 18, 18)
                .addGroup(QuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, QuizLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(QuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(QuizUnitsVar1)
                            .addComponent(QuizUnits1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, QuizLayout.createSequentialGroup()
                        .addGroup(QuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel40)
                            .addComponent(jLabel43)
                            .addComponent(jLabel46)
                            .addComponent(jLabel48))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(QuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(QuizUnitsVar2)
                            .addComponent(QuizUnits2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QuizUnitsVar3)
                            .addComponent(QuizUnits3, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QuizUnitsVar4)
                            .addComponent(QuizUnits4, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QuizUnits5, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QuizUnitsVar5, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, QuizLayout.createSequentialGroup()
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2))
            .addGroup(QuizLayout.createSequentialGroup()
                .addGroup(QuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Quiz1)
                    .addComponent(jLabel5)
                    .addComponent(jLabel39)
                    .addComponent(Quiz2)
                    .addComponent(Quiz3, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
                    .addComponent(jLabel42)
                    .addComponent(Quiz4)
                    .addComponent(jLabel45)
                    .addComponent(Quiz5)
                    .addComponent(jLabel47))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(QuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(QuizAnsB1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB3, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB4, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB5, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        QuizLayout.setVerticalGroup(
            QuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(QuizLayout.createSequentialGroup()
                .addComponent(jLabel5)
                .addGap(5, 5, 5)
                .addGroup(QuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Quiz1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(QuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(QuizAnswer1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnits1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(QuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuizAnswerVar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnitsVar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel39)
                .addGap(4, 4, 4)
                .addGroup(QuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Quiz2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(QuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel40)
                    .addComponent(QuizAnswer2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnits2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(QuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuizAnswerVar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnitsVar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel42)
                .addGap(4, 4, 4)
                .addGroup(QuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Quiz3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(QuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(jLabel43)
                    .addComponent(QuizAnswer3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnits3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(QuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuizAnswerVar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnitsVar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel45)
                .addGap(4, 4, 4)
                .addGroup(QuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Quiz4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(QuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel44)
                    .addComponent(jLabel46)
                    .addComponent(QuizAnswer4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnits4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(QuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuizAnswerVar4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnitsVar4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel47)
                .addGap(4, 4, 4)
                .addGroup(QuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Quiz5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(QuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel49)
                    .addComponent(jLabel48)
                    .addComponent(QuizAnswer5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnits5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(QuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuizAnswerVar5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnitsVar5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(QuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)))
        );

        PanCard.add(Quiz, "Quiz Form");

        QuestA.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Quest Part A", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18))); // NOI18N

        Quiz6.setEditable(false);
        Quiz6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel50.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel50.setText("Question 1:");

        jLabel51.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel51.setText("Answer:");

        jLabel52.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel52.setText("Units:");

        QuizAnswer6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizUnits6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswerVar6.setEditable(false);
        QuizAnswerVar6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizUnitsVar6.setEditable(false);
        QuizUnitsVar6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizUnitsVar7.setEditable(false);
        QuizUnitsVar7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswerVar7.setEditable(false);
        QuizAnswerVar7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswer7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel53.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel53.setText("Answer:");

        Quiz7.setEditable(false);
        Quiz7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel54.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel54.setText("Question 2:");

        jLabel55.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel55.setText("Units:");

        QuizUnits7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizUnitsVar8.setEditable(false);
        QuizUnitsVar8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswerVar8.setEditable(false);
        QuizAnswerVar8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswer8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel56.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel56.setText("Answer:");

        Quiz8.setEditable(false);
        Quiz8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel57.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel57.setText("Question 3:");

        QuizUnits8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel58.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel58.setText("Units:");

        QuizUnitsVar9.setEditable(false);
        QuizUnitsVar9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswerVar9.setEditable(false);
        QuizAnswerVar9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswer9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel59.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel59.setText("Answer:");

        Quiz9.setEditable(false);
        Quiz9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel60.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel60.setText("Question 4:");

        jLabel61.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel61.setText("Units:");

        QuizUnits9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswer10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel62.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel62.setText("Question 5:");

        QuizUnits10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizUnitsVar10.setEditable(false);
        QuizUnitsVar10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel63.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel63.setText("Units:");

        QuizAnswerVar10.setEditable(false);
        QuizAnswerVar10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel64.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel64.setText("Answer:");

        Quiz10.setEditable(false);
        Quiz10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jButton5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton5.setText("Back");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton8.setText("Next Page");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        QuizAnsB6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        QuizAnsB6.setText("Check Answer");
        QuizAnsB6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuizAnsB6ActionPerformed(evt);
            }
        });

        QuizAnsB7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        QuizAnsB7.setText("Check Answer");
        QuizAnsB7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuizAnsB7ActionPerformed(evt);
            }
        });

        QuizAnsB8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        QuizAnsB8.setText("Check Answer");
        QuizAnsB8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuizAnsB8ActionPerformed(evt);
            }
        });

        QuizAnsB9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        QuizAnsB9.setText("Check Answer");
        QuizAnsB9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuizAnsB9ActionPerformed(evt);
            }
        });

        QuizAnsB10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        QuizAnsB10.setText("Check Answer");
        QuizAnsB10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuizAnsB10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout QuestALayout = new javax.swing.GroupLayout(QuestA);
        QuestA.setLayout(QuestALayout);
        QuestALayout.setHorizontalGroup(
            QuestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, QuestALayout.createSequentialGroup()
                .addGroup(QuestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel53)
                    .addComponent(jLabel51)
                    .addComponent(jLabel56)
                    .addComponent(jLabel59)
                    .addComponent(jLabel64))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(QuestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(QuizAnswerVar7)
                    .addComponent(QuizAnswerVar6)
                    .addComponent(QuizAnswer6)
                    .addComponent(QuizAnswer7)
                    .addComponent(QuizAnswerVar8)
                    .addComponent(QuizAnswer8)
                    .addComponent(QuizAnswerVar9)
                    .addComponent(QuizAnswer9)
                    .addComponent(QuizAnswer10)
                    .addComponent(QuizAnswerVar10))
                .addGap(18, 18, 18)
                .addGroup(QuestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, QuestALayout.createSequentialGroup()
                        .addGroup(QuestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel55)
                            .addComponent(jLabel58)
                            .addComponent(jLabel61)
                            .addComponent(jLabel63))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(QuestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(QuizUnitsVar7)
                            .addComponent(QuizUnits7, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QuizUnitsVar8)
                            .addComponent(QuizUnits8, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QuizUnitsVar9)
                            .addComponent(QuizUnits9, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QuizUnits10, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QuizUnitsVar10, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, QuestALayout.createSequentialGroup()
                        .addComponent(jLabel52)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(QuestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(QuizAnsB6, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(QuestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(QuizUnitsVar6)
                                .addComponent(QuizUnits6, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, QuestALayout.createSequentialGroup()
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton8))
            .addGroup(QuestALayout.createSequentialGroup()
                .addGroup(QuestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Quiz6)
                    .addComponent(jLabel50)
                    .addComponent(jLabel54)
                    .addComponent(Quiz7)
                    .addComponent(Quiz8, javax.swing.GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE)
                    .addComponent(jLabel57)
                    .addComponent(Quiz9)
                    .addComponent(jLabel60)
                    .addComponent(Quiz10)
                    .addComponent(jLabel62))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(QuestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(QuizAnsB7, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB8, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB9, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB10, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        QuestALayout.setVerticalGroup(
            QuestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(QuestALayout.createSequentialGroup()
                .addComponent(jLabel50)
                .addGap(4, 4, 4)
                .addGroup(QuestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Quiz6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(QuestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel51)
                    .addComponent(jLabel52)
                    .addComponent(QuizAnswer6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnits6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(QuestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuizAnswerVar6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnitsVar6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel54)
                .addGap(4, 4, 4)
                .addGroup(QuestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Quiz7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(QuestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel53)
                    .addComponent(jLabel55)
                    .addComponent(QuizAnswer7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnits7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(QuestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuizAnswerVar7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnitsVar7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel57)
                .addGap(4, 4, 4)
                .addGroup(QuestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Quiz8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(QuestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel56)
                    .addComponent(jLabel58)
                    .addComponent(QuizAnswer8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnits8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(QuestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuizAnswerVar8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnitsVar8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel60)
                .addGap(4, 4, 4)
                .addGroup(QuestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Quiz9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(QuestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel59)
                    .addComponent(jLabel61)
                    .addComponent(QuizAnswer9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnits9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(QuestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuizAnswerVar9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnitsVar9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel62)
                .addGap(4, 4, 4)
                .addGroup(QuestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Quiz10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(QuestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel64)
                    .addComponent(jLabel63)
                    .addComponent(QuizAnswer10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnits10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(QuestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuizAnswerVar10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnitsVar10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(QuestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton8)))
        );

        PanCard.add(QuestA, "Quest Form A");

        QuestB.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Quest Part B", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18))); // NOI18N

        Quiz11.setEditable(false);
        Quiz11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel65.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel65.setText("Question 6:");

        jLabel66.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel66.setText("Answer:");

        jLabel67.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel67.setText("Units:");

        QuizAnswer11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizUnits11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswerVar11.setEditable(false);
        QuizAnswerVar11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizUnitsVar11.setEditable(false);
        QuizUnitsVar11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizUnitsVar12.setEditable(false);
        QuizUnitsVar12.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswerVar12.setEditable(false);
        QuizAnswerVar12.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswer12.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel68.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel68.setText("Answer:");

        Quiz12.setEditable(false);
        Quiz12.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel69.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel69.setText("Question 7:");

        jLabel70.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel70.setText("Units:");

        QuizUnits12.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizUnitsVar13.setEditable(false);
        QuizUnitsVar13.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswerVar13.setEditable(false);
        QuizAnswerVar13.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswer13.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel71.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel71.setText("Answer:");

        Quiz13.setEditable(false);
        Quiz13.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel72.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel72.setText("Question 8:");

        QuizUnits13.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel73.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel73.setText("Units:");

        QuizUnitsVar14.setEditable(false);
        QuizUnitsVar14.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswerVar14.setEditable(false);
        QuizAnswerVar14.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswer14.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel74.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel74.setText("Answer:");

        Quiz14.setEditable(false);
        Quiz14.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel75.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel75.setText("Question 9:");

        jLabel76.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel76.setText("Units:");

        QuizUnits14.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswer15.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel77.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel77.setText("Question 10:");

        QuizUnits15.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizUnitsVar15.setEditable(false);
        QuizUnitsVar15.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel78.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel78.setText("Units:");

        QuizAnswerVar15.setEditable(false);
        QuizAnswerVar15.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel79.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel79.setText("Answer:");

        Quiz15.setEditable(false);
        Quiz15.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jButton6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton6.setText("Check Answers");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton7.setText("Back");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton4.setText("Previous Page");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        QuizAnsB11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        QuizAnsB11.setText("Check Answer");
        QuizAnsB11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuizAnsB11ActionPerformed(evt);
            }
        });

        QuizAnsB12.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        QuizAnsB12.setText("Check Answer");
        QuizAnsB12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuizAnsB12ActionPerformed(evt);
            }
        });

        QuizAnsB13.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        QuizAnsB13.setText("Check Answer");
        QuizAnsB13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuizAnsB13ActionPerformed(evt);
            }
        });

        QuizAnsB14.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        QuizAnsB14.setText("Check Answer");
        QuizAnsB14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuizAnsB14ActionPerformed(evt);
            }
        });

        QuizAnsB15.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        QuizAnsB15.setText("Check Answer");
        QuizAnsB15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuizAnsB15ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout QuestBLayout = new javax.swing.GroupLayout(QuestB);
        QuestB.setLayout(QuestBLayout);
        QuestBLayout.setHorizontalGroup(
            QuestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, QuestBLayout.createSequentialGroup()
                .addGroup(QuestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel68)
                    .addComponent(jLabel66)
                    .addComponent(jLabel71)
                    .addComponent(jLabel74)
                    .addComponent(jLabel79))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(QuestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(QuizAnswerVar12)
                    .addComponent(QuizAnswerVar11)
                    .addComponent(QuizAnswer11)
                    .addComponent(QuizAnswer12)
                    .addComponent(QuizAnswerVar13)
                    .addComponent(QuizAnswer13)
                    .addComponent(QuizAnswerVar14)
                    .addComponent(QuizAnswer14)
                    .addComponent(QuizAnswer15)
                    .addComponent(QuizAnswerVar15))
                .addGap(18, 18, 18)
                .addGroup(QuestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, QuestBLayout.createSequentialGroup()
                        .addGroup(QuestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel70)
                            .addComponent(jLabel73)
                            .addComponent(jLabel76)
                            .addComponent(jLabel78))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(QuestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(QuizUnitsVar12)
                            .addComponent(QuizUnits12, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QuizUnitsVar13)
                            .addComponent(QuizUnits13, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QuizUnitsVar14)
                            .addComponent(QuizUnits14, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QuizUnits15, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QuizUnitsVar15, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, QuestBLayout.createSequentialGroup()
                        .addComponent(jLabel67)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(QuestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(QuizAnsB11, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(QuestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(QuizUnitsVar11)
                                .addComponent(QuizUnits11, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, QuestBLayout.createSequentialGroup()
                .addComponent(jButton7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6))
            .addGroup(QuestBLayout.createSequentialGroup()
                .addGroup(QuestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Quiz11)
                    .addComponent(jLabel65)
                    .addComponent(jLabel69)
                    .addComponent(Quiz12)
                    .addComponent(Quiz13, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE)
                    .addComponent(jLabel72)
                    .addComponent(Quiz14)
                    .addComponent(jLabel75)
                    .addComponent(Quiz15)
                    .addComponent(jLabel77))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(QuestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(QuizAnsB12, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB13, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB14, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB15, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        QuestBLayout.setVerticalGroup(
            QuestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(QuestBLayout.createSequentialGroup()
                .addComponent(jLabel65)
                .addGap(4, 4, 4)
                .addGroup(QuestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Quiz11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(QuestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel66)
                    .addComponent(jLabel67)
                    .addComponent(QuizAnswer11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnits11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(QuestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuizAnswerVar11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnitsVar11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel69)
                .addGap(4, 4, 4)
                .addGroup(QuestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Quiz12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(QuestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel68)
                    .addComponent(jLabel70)
                    .addComponent(QuizAnswer12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnits12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(QuestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuizAnswerVar12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnitsVar12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel72)
                .addGap(4, 4, 4)
                .addGroup(QuestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Quiz13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(QuestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel71)
                    .addComponent(jLabel73)
                    .addComponent(QuizAnswer13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnits13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(QuestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuizAnswerVar13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnitsVar13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel75)
                .addGap(4, 4, 4)
                .addGroup(QuestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Quiz14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(QuestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel74)
                    .addComponent(jLabel76)
                    .addComponent(QuizAnswer14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnits14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(QuestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuizAnswerVar14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnitsVar14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel77)
                .addGap(4, 4, 4)
                .addGroup(QuestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Quiz15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(QuestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel79)
                    .addComponent(jLabel78)
                    .addComponent(QuizAnswer15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnits15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(QuestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuizAnswerVar15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnitsVar15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(QuestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton7)
                    .addComponent(jButton4)))
        );

        PanCard.add(QuestB, "Quest Form B");

        jButton32.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton32.setText("Kinematics");

        jButton34.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton34.setText("Forces and Momentum");
        jButton34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton34ActionPerformed(evt);
            }
        });

        jButton36.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton36.setText("Momentum and Energy");
        jButton36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton36ActionPerformed(evt);
            }
        });

        jButton37.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton37.setText("Circular Motion");

        jButton38.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton38.setText("Gravity");

        jButton44.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton44.setText("Back");
        jButton44.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton44ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout QuizletsLayout = new javax.swing.GroupLayout(Quizlets);
        Quizlets.setLayout(QuizletsLayout);
        QuizletsLayout.setHorizontalGroup(
            QuizletsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(QuizletsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(QuizletsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton44)
                    .addGroup(QuizletsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton38)
                        .addComponent(jButton37)
                        .addComponent(jButton36)
                        .addComponent(jButton34)
                        .addComponent(jButton32, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        QuizletsLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton32, jButton34, jButton36, jButton37, jButton38});

        QuizletsLayout.setVerticalGroup(
            QuizletsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(QuizletsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton32, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton34)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton36)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton37)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton38)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton44)
                .addContainerGap())
        );

        QuizletsLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton32, jButton34, jButton36, jButton37, jButton38});

        PanCard.add(Quizlets, "Quizlets");

        jLabel85.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel85.setText("WSScience:");

        jLabel86.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel86.setText("Nothing Nerdy:");

        jButton39.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton39ActionPerformed(evt);
            }
        });

        jButton40.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton40ActionPerformed(evt);
            }
        });

        jButton41.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton41ActionPerformed(evt);
            }
        });

        jLabel87.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel87.setText("Mock Exams:");

        jButton42.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton42ActionPerformed(evt);
            }
        });

        jLabel88.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel88.setText("IB Store:");

        jButton43.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton43.setText("Back");
        jButton43.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton43ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ResourcesLayout = new javax.swing.GroupLayout(Resources);
        Resources.setLayout(ResourcesLayout);
        ResourcesLayout.setHorizontalGroup(
            ResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ResourcesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton43)
                    .addGroup(ResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(ResourcesLayout.createSequentialGroup()
                            .addComponent(jLabel88)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton42, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(ResourcesLayout.createSequentialGroup()
                            .addGroup(ResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(ResourcesLayout.createSequentialGroup()
                                    .addComponent(jLabel85)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton39, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(ResourcesLayout.createSequentialGroup()
                                    .addComponent(jLabel86)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton40, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel87)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton41, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ResourcesLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel85, jLabel86, jLabel88});

        ResourcesLayout.setVerticalGroup(
            ResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ResourcesLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(ResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel85)
                    .addComponent(jButton39))
                .addGroup(ResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ResourcesLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(ResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel86)
                            .addComponent(jButton40, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(ResourcesLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel87)
                            .addComponent(jButton41, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel88)
                    .addComponent(jButton42, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton43)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ResourcesLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton39, jButton40});

        PanCard.add(Resources, "Practice Qs");

        TestA.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Test Part A", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18))); // NOI18N

        Quiz16.setEditable(false);
        Quiz16.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel91.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel91.setText("Question 1:");

        jLabel92.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel92.setText("Answer:");

        jLabel93.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel93.setText("Units:");

        QuizAnswer16.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizUnits16.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswerVar16.setEditable(false);
        QuizAnswerVar16.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizUnitsVar16.setEditable(false);
        QuizUnitsVar16.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizUnitsVar17.setEditable(false);
        QuizUnitsVar17.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswerVar17.setEditable(false);
        QuizAnswerVar17.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswer17.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel94.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel94.setText("Answer:");

        Quiz17.setEditable(false);
        Quiz17.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel95.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel95.setText("Question 2:");

        jLabel96.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel96.setText("Units:");

        QuizUnits17.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizUnitsVar18.setEditable(false);
        QuizUnitsVar18.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswerVar18.setEditable(false);
        QuizAnswerVar18.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswer18.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel97.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel97.setText("Answer:");

        Quiz18.setEditable(false);
        Quiz18.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel98.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel98.setText("Question 3:");

        QuizUnits18.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel99.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel99.setText("Units:");

        QuizUnitsVar19.setEditable(false);
        QuizUnitsVar19.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswerVar19.setEditable(false);
        QuizAnswerVar19.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswer19.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel100.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel100.setText("Answer:");

        Quiz19.setEditable(false);
        Quiz19.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel101.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel101.setText("Question 4:");

        jLabel102.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel102.setText("Units:");

        QuizUnits19.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswer20.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel103.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel103.setText("Question 5:");

        QuizUnits20.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizUnitsVar20.setEditable(false);
        QuizUnitsVar20.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel104.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel104.setText("Units:");

        QuizAnswerVar20.setEditable(false);
        QuizAnswerVar20.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel105.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel105.setText("Answer:");

        Quiz20.setEditable(false);
        Quiz20.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jButton46.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton46.setText("Back");
        jButton46.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton46ActionPerformed(evt);
            }
        });

        jButton47.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton47.setText("Next Page");
        jButton47.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton47ActionPerformed(evt);
            }
        });

        QuizAnsB16.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        QuizAnsB16.setText("Check Answer");
        QuizAnsB16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuizAnsB16ActionPerformed(evt);
            }
        });

        QuizAnsB17.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        QuizAnsB17.setText("Check Answer");
        QuizAnsB17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuizAnsB17ActionPerformed(evt);
            }
        });

        QuizAnsB18.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        QuizAnsB18.setText("Check Answer");
        QuizAnsB18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuizAnsB18ActionPerformed(evt);
            }
        });

        QuizAnsB19.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        QuizAnsB19.setText("Check Answer");
        QuizAnsB19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuizAnsB19ActionPerformed(evt);
            }
        });

        QuizAnsB20.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        QuizAnsB20.setText("Check Answer");
        QuizAnsB20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuizAnsB20ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TestALayout = new javax.swing.GroupLayout(TestA);
        TestA.setLayout(TestALayout);
        TestALayout.setHorizontalGroup(
            TestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TestALayout.createSequentialGroup()
                .addGroup(TestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel94)
                    .addComponent(jLabel92)
                    .addComponent(jLabel97)
                    .addComponent(jLabel100)
                    .addComponent(jLabel105))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(QuizAnswerVar17)
                    .addComponent(QuizAnswerVar16)
                    .addComponent(QuizAnswer16)
                    .addComponent(QuizAnswer17)
                    .addComponent(QuizAnswerVar18)
                    .addComponent(QuizAnswer18)
                    .addComponent(QuizAnswerVar19)
                    .addComponent(QuizAnswer19)
                    .addComponent(QuizAnswer20)
                    .addComponent(QuizAnswerVar20))
                .addGap(18, 18, 18)
                .addGroup(TestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TestALayout.createSequentialGroup()
                        .addComponent(jLabel93)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(TestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(QuizUnitsVar16)
                            .addComponent(QuizUnits16, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TestALayout.createSequentialGroup()
                        .addGroup(TestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel96)
                            .addComponent(jLabel99)
                            .addComponent(jLabel102)
                            .addComponent(jLabel104))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(TestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(QuizUnitsVar17)
                            .addComponent(QuizUnits17, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QuizUnitsVar18)
                            .addComponent(QuizUnits18, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QuizUnitsVar19)
                            .addComponent(QuizUnits19, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QuizUnits20, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QuizUnitsVar20, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TestALayout.createSequentialGroup()
                .addComponent(jButton46)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton47))
            .addGroup(TestALayout.createSequentialGroup()
                .addGroup(TestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Quiz16)
                    .addComponent(jLabel91)
                    .addComponent(jLabel95)
                    .addComponent(Quiz17)
                    .addComponent(Quiz18, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE)
                    .addComponent(jLabel98)
                    .addComponent(Quiz19)
                    .addComponent(jLabel101)
                    .addComponent(Quiz20)
                    .addComponent(jLabel103))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(QuizAnsB16, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB17, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB18, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB19, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB20, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        TestALayout.setVerticalGroup(
            TestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TestALayout.createSequentialGroup()
                .addComponent(jLabel91)
                .addGap(4, 4, 4)
                .addGroup(TestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Quiz16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel92)
                    .addComponent(jLabel93)
                    .addComponent(QuizAnswer16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnits16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(TestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuizAnswerVar16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnitsVar16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel95)
                .addGap(4, 4, 4)
                .addGroup(TestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Quiz17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel94)
                    .addComponent(jLabel96)
                    .addComponent(QuizAnswer17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnits17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(TestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuizAnswerVar17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnitsVar17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel98)
                .addGap(4, 4, 4)
                .addGroup(TestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Quiz18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel97)
                    .addComponent(jLabel99)
                    .addComponent(QuizAnswer18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnits18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(TestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuizAnswerVar18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnitsVar18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel101)
                .addGap(4, 4, 4)
                .addGroup(TestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Quiz19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel100)
                    .addComponent(jLabel102)
                    .addComponent(QuizAnswer19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnits19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(TestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuizAnswerVar19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnitsVar19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel103)
                .addGap(4, 4, 4)
                .addGroup(TestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Quiz20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel105)
                    .addComponent(jLabel104)
                    .addComponent(QuizAnswer20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnits20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(TestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuizAnswerVar20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnitsVar20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(TestALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton46)
                    .addComponent(jButton47)))
        );

        PanCard.add(TestA, "Test Form A");

        TestB.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Test Part B", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18))); // NOI18N

        Quiz21.setEditable(false);
        Quiz21.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel106.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel106.setText("Question 6:");

        jLabel107.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel107.setText("Answer:");

        jLabel108.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel108.setText("Units:");

        QuizAnswer21.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizUnits21.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswerVar21.setEditable(false);
        QuizAnswerVar21.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizUnitsVar21.setEditable(false);
        QuizUnitsVar21.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizUnitsVar22.setEditable(false);
        QuizUnitsVar22.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswerVar22.setEditable(false);
        QuizAnswerVar22.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswer22.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel109.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel109.setText("Answer:");

        Quiz22.setEditable(false);
        Quiz22.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel110.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel110.setText("Question 7:");

        jLabel111.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel111.setText("Units:");

        QuizUnits22.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizUnitsVar23.setEditable(false);
        QuizUnitsVar23.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswerVar23.setEditable(false);
        QuizAnswerVar23.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswer23.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel112.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel112.setText("Answer:");

        Quiz23.setEditable(false);
        Quiz23.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel113.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel113.setText("Question 8:");

        QuizUnits23.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel114.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel114.setText("Units:");

        QuizUnitsVar24.setEditable(false);
        QuizUnitsVar24.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswerVar24.setEditable(false);
        QuizAnswerVar24.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswer24.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel115.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel115.setText("Answer:");

        Quiz24.setEditable(false);
        Quiz24.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel116.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel116.setText("Question 9:");

        jLabel117.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel117.setText("Units:");

        QuizUnits24.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswer25.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel118.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel118.setText("Question 10:");

        QuizUnits25.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizUnitsVar25.setEditable(false);
        QuizUnitsVar25.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel119.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel119.setText("Units:");

        QuizAnswerVar25.setEditable(false);
        QuizAnswerVar25.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel120.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel120.setText("Answer:");

        Quiz25.setEditable(false);
        Quiz25.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jButton48.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton48.setText("Next Page");
        jButton48.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton48ActionPerformed(evt);
            }
        });

        jButton49.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton49.setText("Back");
        jButton49.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton49ActionPerformed(evt);
            }
        });

        jButton50.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton50.setText("Previous Page");
        jButton50.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton50ActionPerformed(evt);
            }
        });

        jLabel122.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel122.setText("Answer:");

        QuizAnsB21.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        QuizAnsB21.setText("Check Answer");
        QuizAnsB21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuizAnsB21ActionPerformed(evt);
            }
        });

        QuizAnsB22.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        QuizAnsB22.setText("Check Answer");
        QuizAnsB22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuizAnsB22ActionPerformed(evt);
            }
        });

        QuizAnsB23.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        QuizAnsB23.setText("Check Answer");
        QuizAnsB23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuizAnsB23ActionPerformed(evt);
            }
        });

        QuizAnsB24.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        QuizAnsB24.setText("Check Answer");
        QuizAnsB24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuizAnsB24ActionPerformed(evt);
            }
        });

        QuizAnsB25.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        QuizAnsB25.setText("Check Answer");
        QuizAnsB25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuizAnsB25ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TestBLayout = new javax.swing.GroupLayout(TestB);
        TestB.setLayout(TestBLayout);
        TestBLayout.setHorizontalGroup(
            TestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TestBLayout.createSequentialGroup()
                .addGroup(TestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel109)
                    .addComponent(jLabel107)
                    .addComponent(jLabel112)
                    .addComponent(jLabel115)
                    .addComponent(jLabel120))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(QuizAnswerVar22)
                    .addComponent(QuizAnswerVar21)
                    .addComponent(QuizAnswer21)
                    .addComponent(QuizAnswer22)
                    .addComponent(QuizAnswerVar23)
                    .addComponent(QuizAnswer23)
                    .addComponent(QuizAnswerVar24)
                    .addComponent(QuizAnswer24)
                    .addComponent(QuizAnswer25)
                    .addComponent(QuizAnswerVar25))
                .addGap(18, 18, 18)
                .addGroup(TestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TestBLayout.createSequentialGroup()
                        .addGroup(TestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel111)
                            .addComponent(jLabel114)
                            .addComponent(jLabel117)
                            .addComponent(jLabel119))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(TestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(QuizUnitsVar22)
                            .addComponent(QuizUnits22, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QuizUnitsVar23)
                            .addComponent(QuizUnits23, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QuizUnitsVar24)
                            .addComponent(QuizUnits24, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QuizUnits25, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QuizUnitsVar25, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TestBLayout.createSequentialGroup()
                        .addComponent(jLabel108)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(TestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(QuizAnsB21, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(TestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(QuizUnitsVar21)
                                .addComponent(QuizUnits21, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TestBLayout.createSequentialGroup()
                .addComponent(jButton49)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton50)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton48))
            .addGroup(TestBLayout.createSequentialGroup()
                .addGroup(TestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Quiz21)
                    .addComponent(jLabel106)
                    .addComponent(jLabel110)
                    .addComponent(Quiz22)
                    .addComponent(Quiz23, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE)
                    .addComponent(jLabel113)
                    .addComponent(Quiz24)
                    .addComponent(jLabel116)
                    .addComponent(Quiz25)
                    .addComponent(jLabel118))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(QuizAnsB22, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB23, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB24, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB25, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(TestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(TestBLayout.createSequentialGroup()
                    .addGap(253, 253, 253)
                    .addComponent(jLabel122)
                    .addContainerGap(293, Short.MAX_VALUE)))
        );

        TestBLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton48, jButton50});

        TestBLayout.setVerticalGroup(
            TestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TestBLayout.createSequentialGroup()
                .addComponent(jLabel106)
                .addGap(4, 4, 4)
                .addGroup(TestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Quiz21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel107)
                    .addComponent(jLabel108)
                    .addComponent(QuizAnswer21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnits21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(TestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuizAnswerVar21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnitsVar21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel110)
                .addGap(4, 4, 4)
                .addGroup(TestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Quiz22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel109)
                    .addComponent(jLabel111)
                    .addComponent(QuizAnswer22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnits22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(TestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuizAnswerVar22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnitsVar22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel113)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Quiz23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel112)
                    .addComponent(jLabel114)
                    .addComponent(QuizAnswer23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnits23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(TestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuizAnswerVar23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnitsVar23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel116)
                .addGap(4, 4, 4)
                .addGroup(TestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Quiz24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel115)
                    .addComponent(jLabel117)
                    .addComponent(QuizAnswer24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnits24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(TestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuizAnswerVar24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnitsVar24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel118)
                .addGap(4, 4, 4)
                .addGroup(TestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Quiz25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel120)
                    .addComponent(jLabel119)
                    .addComponent(QuizAnswer25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnits25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(TestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuizAnswerVar25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnitsVar25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(TestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton48)
                    .addComponent(jButton49)
                    .addComponent(jButton50)))
            .addGroup(TestBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(TestBLayout.createSequentialGroup()
                    .addGap(313, 313, 313)
                    .addComponent(jLabel122)
                    .addContainerGap(320, Short.MAX_VALUE)))
        );

        PanCard.add(TestB, "Test Form B");

        TestC.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Test Part C", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18))); // NOI18N

        Quiz26.setEditable(false);
        Quiz26.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel121.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel121.setText("Question 11:");

        jLabel123.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel123.setText("Units:");

        QuizAnswer26.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizUnits26.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswerVar26.setEditable(false);
        QuizAnswerVar26.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizUnitsVar26.setEditable(false);
        QuizUnitsVar26.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizUnitsVar27.setEditable(false);
        QuizUnitsVar27.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswerVar27.setEditable(false);
        QuizAnswerVar27.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswer27.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel124.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel124.setText("Answer:");

        Quiz27.setEditable(false);
        Quiz27.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel125.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel125.setText("Question 12:");

        jLabel126.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel126.setText("Units:");

        QuizUnits27.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizUnitsVar28.setEditable(false);
        QuizUnitsVar28.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswerVar28.setEditable(false);
        QuizAnswerVar28.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswer28.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel127.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel127.setText("Answer:");

        Quiz28.setEditable(false);
        Quiz28.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel128.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel128.setText("Question 13:");

        QuizUnits28.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel129.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel129.setText("Units:");

        QuizUnitsVar29.setEditable(false);
        QuizUnitsVar29.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswerVar29.setEditable(false);
        QuizAnswerVar29.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswer29.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel130.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel130.setText("Answer:");

        Quiz29.setEditable(false);
        Quiz29.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel131.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel131.setText("Question 14:");

        jLabel132.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel132.setText("Units:");

        QuizUnits29.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizAnswer30.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel133.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel133.setText("Question 15:");

        QuizUnits30.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        QuizUnitsVar30.setEditable(false);
        QuizUnitsVar30.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel134.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel134.setText("Units:");

        QuizAnswerVar30.setEditable(false);
        QuizAnswerVar30.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel135.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel135.setText("Answer:");

        Quiz30.setEditable(false);
        Quiz30.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jButton51.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton51.setText("Back");
        jButton51.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton51ActionPerformed(evt);
            }
        });

        jButton52.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton52.setText("Previous Page");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });

        jButton53.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton53.setText("Check Answers");
        jButton53.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton53ActionPerformed(evt);
            }
        });

        QuizAnsB26.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        QuizAnsB26.setText("Check Answer");
        QuizAnsB26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuizAnsB26ActionPerformed(evt);
            }
        });

        QuizAnsB27.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        QuizAnsB27.setText("Check Answer");
        QuizAnsB27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuizAnsB27ActionPerformed(evt);
            }
        });

        QuizAnsB28.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        QuizAnsB28.setText("Check Answer");
        QuizAnsB28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuizAnsB28ActionPerformed(evt);
            }
        });

        QuizAnsB29.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        QuizAnsB29.setText("Check Answer");
        QuizAnsB29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuizAnsB29ActionPerformed(evt);
            }
        });

        QuizAnsB30.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        QuizAnsB30.setText("Check Answer");
        QuizAnsB30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuizAnsB30ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TestCLayout = new javax.swing.GroupLayout(TestC);
        TestC.setLayout(TestCLayout);
        TestCLayout.setHorizontalGroup(
            TestCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TestCLayout.createSequentialGroup()
                .addGroup(TestCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel124)
                    .addComponent(jLabel127)
                    .addComponent(jLabel130)
                    .addComponent(jLabel135))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TestCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(QuizAnswerVar27)
                    .addComponent(QuizAnswerVar26)
                    .addComponent(QuizAnswer26)
                    .addComponent(QuizAnswer27)
                    .addComponent(QuizAnswerVar28)
                    .addComponent(QuizAnswer28)
                    .addComponent(QuizAnswerVar29)
                    .addComponent(QuizAnswer29)
                    .addComponent(QuizAnswer30)
                    .addComponent(QuizAnswerVar30))
                .addGap(18, 18, 18)
                .addGroup(TestCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TestCLayout.createSequentialGroup()
                        .addComponent(jLabel123)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(TestCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(QuizUnitsVar26)
                            .addComponent(QuizUnits26, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TestCLayout.createSequentialGroup()
                        .addGroup(TestCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel126)
                            .addComponent(jLabel129)
                            .addComponent(jLabel132)
                            .addComponent(jLabel134))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(TestCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(QuizUnitsVar27)
                            .addComponent(QuizUnits27, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QuizUnitsVar28)
                            .addComponent(QuizUnits28, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QuizUnitsVar29)
                            .addComponent(QuizUnits29, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QuizUnits30, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QuizUnitsVar30, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TestCLayout.createSequentialGroup()
                .addComponent(jButton51)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton52)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton53))
            .addGroup(TestCLayout.createSequentialGroup()
                .addGroup(TestCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Quiz26)
                    .addComponent(jLabel121)
                    .addComponent(jLabel125)
                    .addComponent(Quiz27)
                    .addComponent(Quiz28, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE)
                    .addComponent(jLabel128)
                    .addComponent(Quiz29)
                    .addComponent(jLabel131)
                    .addComponent(Quiz30)
                    .addComponent(jLabel133))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TestCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(QuizAnsB26, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB27, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB28, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB29, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB30, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        TestCLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton52, jButton53});

        TestCLayout.setVerticalGroup(
            TestCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TestCLayout.createSequentialGroup()
                .addComponent(jLabel121)
                .addGap(4, 4, 4)
                .addGroup(TestCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Quiz26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB26))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TestCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel123)
                    .addComponent(QuizAnswer26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnits26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(TestCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuizAnswerVar26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnitsVar26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel125)
                .addGap(4, 4, 4)
                .addGroup(TestCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Quiz27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB27))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TestCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel124)
                    .addComponent(jLabel126)
                    .addComponent(QuizAnswer27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnits27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(TestCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuizAnswerVar27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnitsVar27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel128)
                .addGap(4, 4, 4)
                .addGroup(TestCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Quiz28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB28))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TestCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel127)
                    .addComponent(jLabel129)
                    .addComponent(QuizAnswer28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnits28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(TestCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuizAnswerVar28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnitsVar28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel131)
                .addGap(4, 4, 4)
                .addGroup(TestCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Quiz29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB29))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TestCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel130)
                    .addComponent(jLabel132)
                    .addComponent(QuizAnswer29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnits29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(TestCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuizAnswerVar29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnitsVar29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel133)
                .addGap(4, 4, 4)
                .addGroup(TestCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Quiz30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizAnsB30))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TestCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel135)
                    .addComponent(jLabel134)
                    .addComponent(QuizAnswer30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnits30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(TestCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuizAnswerVar30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuizUnitsVar30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(TestCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton51)
                    .addComponent(jButton52)
                    .addComponent(jButton53)))
        );

        PanCard.add(TestC, "Test Form C");
        TestC.getAccessibleContext().setAccessibleName("Test Part B");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanCard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(PanCard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RandomQBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RandomQBActionPerformed
        AnswerVar.setVisible(false);
        UnitsVar.setVisible(false);
        CardLayout card = (CardLayout)PanCard.getLayout();
        temp = Database.rQ();
        Qfield.setText(temp.questiontext);
        Qanswer.setText("");
        Units.setText("");
        card.show(PanCard, "Questions");
    }//GEN-LAST:event_RandomQBActionPerformed

    private void SearchBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBActionPerformed
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Search");
    }//GEN-LAST:event_SearchBActionPerformed

    private void TopicListBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TopicListBMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_TopicListBMouseClicked

    private void TopicListBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TopicListBActionPerformed
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Topic List");
    }//GEN-LAST:event_TopicListBActionPerformed

    private void SavedQBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SavedQBActionPerformed
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(writer.namebringer("Saved Questions")));
        SavedQuestionViewer.setText(writer.textgetter(0, "Saved Questions"));
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Saved Questions");
    }//GEN-LAST:event_SavedQBActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        writer.getstats();
        QSolved.setText(writer.stats.substring(2,3));
        TCompleted.setText(writer.stats.substring(5,6));
        KQ.setText(writer.stats.substring(8,9));
        FQ.setText(writer.stats.substring(11,12));
        MQ.setText(writer.stats.substring(14,15));
        EQ.setText(writer.stats.substring(17,18));
        CQ.setText(writer.stats.substring(20,21));
        GQ.setText(writer.stats.substring(23,24));
        KT.setText(writer.stats.substring(27,28));
        FT.setText(writer.stats.substring(31,32));
        MT.setText(writer.stats.substring(35,36));
        ET.setText(writer.stats.substring(39,40));
        CMT.setText(writer.stats.substring(43,44));
        GT.setText(writer.stats.substring(47,48));
        MostVisited.setText(writer.MV());
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Statistics");
    }//GEN-LAST:event_jButton10ActionPerformed

    private void FavQTypeAnsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FavQTypeAnsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FavQTypeAnsActionPerformed

    private void SavedQuestionAnswerVarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SavedQuestionAnswerVarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SavedQuestionAnswerVarActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
    }//GEN-LAST:event_jButton24ActionPerformed

    private void TopicListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TopicListMouseClicked

    }//GEN-LAST:event_TopicListMouseClicked

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
    }//GEN-LAST:event_jButton25ActionPerformed

    private void FavoriteQTypeBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FavoriteQTypeBActionPerformed
        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel(writer.namegetter("Favourite Questions")));    
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Favorite Question Types");
    }//GEN-LAST:event_FavoriteQTypeBActionPerformed

    private void TakeaTestBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TakeaTestBActionPerformed
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Make A Test");
    }//GEN-LAST:event_TakeaTestBActionPerformed

    private void SavedTestsBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SavedTestsBActionPerformed
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Saved Tests");
    }//GEN-LAST:event_SavedTestsBActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CurrentQB.setVisible(true);
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
    }//GEN-LAST:event_jButton29ActionPerformed

    private void CheckAnsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckAnsActionPerformed
        boolean answerc = false;
        boolean unitsc = false;
        AnswerVar.setVisible(true);
        UnitsVar.setVisible(true);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Questions");
        if(equal(temp.answer,Qanswer.getText()))
        {
            AnswerVar.setText("Correct");
            answerc = true;
        }
        else
        AnswerVar.setText("Incorrect");
        if(Units.getText().equals(temp.units))
        {
            UnitsVar.setText("Correct");
            unitsc = true;
        }
        else
        UnitsVar.setText("Incorrect");
        if(answerc && unitsc)
        {
            writer.tally("Q");
            writer.tally(Database.getUnit(temp.questionname));
        }
    }//GEN-LAST:event_CheckAnsActionPerformed

    private void CurrentQBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CurrentQBActionPerformed
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Questions");
    }//GEN-LAST:event_CurrentQBActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void SearchB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchB1ActionPerformed
        NoQuery.setVisible(false);
        ResultOverflow.setVisible(false);
        R1.setText("");
        R2.setText("");
        R3.setText("");
        R4.setText("");
        R5.setText("");
        R6.setText("");
        R7.setText("");
        R8.setText("");
        R9.setText("");
        R10.setText("");
        Q1 = emptyQ();
        Q2 = emptyQ();
        Q3 = emptyQ();
        Q4 = emptyQ();
        Q5 = emptyQ();
        Q6 = emptyQ();
        Q7 = emptyQ();
        Q8 = emptyQ();
        Q9 = emptyQ();
        Q10 = emptyQ();
        tempArr = Database.searcher();
        SearchBox2.setText(SearchBox.getText());
        if(SearchBox.getText().equals("") == false)
        {
            Search();
        }
        else
        {
            NoQuery.setText("Please enter a search criteria.");
            NoQuery.setVisible(true);
            CardLayout card = (CardLayout)PanCard.getLayout();
            card.show(PanCard, "Search Results");
            CardLayout card2 = (CardLayout)PanCard.getLayout();
            card2.show(PanCard, "Search");
            JOptionPane.showMessageDialog(NoQuery.getTopLevelAncestor(), "Please enter a search criteria", "Can't find the Vacumn", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_SearchB1ActionPerformed

    private void jButton35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton35ActionPerformed
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Search");
    }//GEN-LAST:event_jButton35ActionPerformed

    private void RB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB1ActionPerformed
        AnswerVar.setVisible(false);
        UnitsVar.setVisible(false);
        CardLayout card = (CardLayout)PanCard.getLayout();
        temp = Q1;
        Qfield.setText(temp.questiontext);
        Qanswer.setText("");
        Units.setText("");
        card.show(PanCard, "Questions");
    }//GEN-LAST:event_RB1ActionPerformed

    private void RB2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB2ActionPerformed
        AnswerVar.setVisible(false);
        UnitsVar.setVisible(false);
        CardLayout card = (CardLayout)PanCard.getLayout();
        temp = Q2;
        Qfield.setText(temp.questiontext);
        Qanswer.setText("");
        Units.setText("");
        card.show(PanCard, "Questions");
    }//GEN-LAST:event_RB2ActionPerformed

    private void RB3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB3ActionPerformed
        AnswerVar.setVisible(false);
        UnitsVar.setVisible(false);
        CardLayout card = (CardLayout)PanCard.getLayout();
        temp = Q3;
        Qfield.setText(temp.questiontext);
        Qanswer.setText("");
        Units.setText("");
        card.show(PanCard, "Questions");
    }//GEN-LAST:event_RB3ActionPerformed

    private void RB4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB4ActionPerformed
        AnswerVar.setVisible(false);
        UnitsVar.setVisible(false);
        CardLayout card = (CardLayout)PanCard.getLayout();
        temp = Q4;
        Qfield.setText(temp.questiontext);
        Qanswer.setText("");
        Units.setText("");
        card.show(PanCard, "Questions");
    }//GEN-LAST:event_RB4ActionPerformed

    private void RB5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB5ActionPerformed
        AnswerVar.setVisible(false);
        UnitsVar.setVisible(false);
        CardLayout card = (CardLayout)PanCard.getLayout();
        temp = Q5;
        Qfield.setText(temp.questiontext);
        Qanswer.setText("");
        Units.setText("");
        card.show(PanCard, "Questions");
    }//GEN-LAST:event_RB5ActionPerformed

    private void RB6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB6ActionPerformed
        AnswerVar.setVisible(false);
        UnitsVar.setVisible(false);
        CardLayout card = (CardLayout)PanCard.getLayout();
        temp = Q6;
        Qfield.setText(temp.questiontext);
        Qanswer.setText("");
        Units.setText("");
        card.show(PanCard, "Questions");
    }//GEN-LAST:event_RB6ActionPerformed

    private void RB7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB7ActionPerformed
        AnswerVar.setVisible(false);
        UnitsVar.setVisible(false);
        CardLayout card = (CardLayout)PanCard.getLayout();
        temp = Q7;
        Qfield.setText(temp.questiontext);
        Qanswer.setText("");
        Units.setText("");
        card.show(PanCard, "Questions");
    }//GEN-LAST:event_RB7ActionPerformed

    private void RB8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB8ActionPerformed
        AnswerVar.setVisible(false);
        UnitsVar.setVisible(false);
        CardLayout card = (CardLayout)PanCard.getLayout();
        temp = Q8;
        Qfield.setText(temp.questiontext);
        Qanswer.setText("");
        Units.setText("");
        card.show(PanCard, "Questions");
    }//GEN-LAST:event_RB8ActionPerformed

    private void RB9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB9ActionPerformed
        AnswerVar.setVisible(false);
        UnitsVar.setVisible(false);
        CardLayout card = (CardLayout)PanCard.getLayout();
        temp = Q9;
        Qfield.setText(temp.questiontext);
        Qanswer.setText("");
        Units.setText("");
        card.show(PanCard, "Questions");
    }//GEN-LAST:event_RB9ActionPerformed

    private void RB10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB10ActionPerformed
        AnswerVar.setVisible(false);
        UnitsVar.setVisible(false);
        CardLayout card = (CardLayout)PanCard.getLayout();
        temp = Q10;
        Qfield.setText(temp.questiontext);
        Qanswer.setText("");
        Units.setText("");
        card.show(PanCard, "Questions");
    }//GEN-LAST:event_RB10ActionPerformed

    private void SearchB2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchB2ActionPerformed
        NoQuery2.setVisible(false);
        ResultOverflow.setVisible(false);
        R1.setText("");
        R2.setText("");
        R3.setText("");
        R4.setText("");
        R5.setText("");
        R6.setText("");
        R7.setText("");
        R8.setText("");
        R9.setText("");
        R10.setText("");
        Q1 = emptyQ();
        Q2 = emptyQ();
        Q3 = emptyQ();
        Q4 = emptyQ();
        Q5 = emptyQ();
        Q6 = emptyQ();
        Q7 = emptyQ();
        Q8 = emptyQ();
        Q9 = emptyQ();
        Q10 = emptyQ();
        tempArr = Database.searcher();
        SearchBox.setText(SearchBox2.getText());
        if(SearchBox.getText().equals("") == false)
        {
            Search();
        }
        else
        {
            NoQuery2.setText("Please enter a search criteria");
            NoQuery2.setVisible(true);
            CardLayout card = (CardLayout)PanCard.getLayout();
            card.show(PanCard, "Search");
            CardLayout card2 = (CardLayout)PanCard.getLayout();
            card2.show(PanCard, "Search Results");
            JOptionPane.showMessageDialog(NoQuery.getTopLevelAncestor(), "Please enter a search criteria", "Can't find the Vacumn", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_SearchB2ActionPerformed

    private void CurrentTestBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CurrentTestBActionPerformed
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, CT);
    }//GEN-LAST:event_CurrentTestBActionPerformed

    private void StartTestBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartTestBActionPerformed
        
        CriteriaCheck.setVisible(false);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Make A Test");
        if(buttonGroup2.getSelection()==null || testcheck())
        {
            CriteriaCheck.setVisible(true);
            
            card.show(PanCard, "Main Interface");
            card2.show(PanCard, "Make A Test");
            JOptionPane.showMessageDialog(NoQuery.getTopLevelAncestor(), "Please Select all Criteria", "Missing Link", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(TLS.isSelected())
        {
            QuizMaker(PerQ.isSelected());
        }
        else if(TLM.isSelected())
        {
            QuestMaker(PerQ.isSelected());
        }
        else if(TLL.isSelected())
        {
            TestMaker(PerQ.isSelected());
        }
    }//GEN-LAST:event_StartTestBActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CurrentTestB.setVisible(true);
        CT = "Quest Form A";
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Quest Form B");
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        NoQuery.setVisible(false);
        ResultOverflow.setVisible(false);
        R1.setText("");
        R2.setText("");
        R3.setText("");
        R4.setText("");
        R5.setText("");
        R6.setText("");
        R7.setText("");
        R8.setText("");
        R9.setText("");
        R10.setText("");
        Q1 = emptyQ();
        Q2 = emptyQ();
        Q3 = emptyQ();
        Q4 = emptyQ();
        Q5 = emptyQ();
        Q6 = emptyQ();
        Q7 = emptyQ();
        Q8 = emptyQ();
        Q9 = emptyQ();
        Q10 = emptyQ();
        tempArr = Database.searcher();
        SearchBox2.setText(AdvSearchBox1.getText());
        if(AdvSearchBox1.getText().equals("") == false)
        {
            AdvSearch();
        }
        else
        {
            NoQuery.setText("Please enter a search criteria.");
            NoQuery.setVisible(true);
            CardLayout card = (CardLayout)PanCard.getLayout();
            card.show(PanCard, "Search Results");
            CardLayout card2 = (CardLayout)PanCard.getLayout();
            card2.show(PanCard, "Search");
            JOptionPane.showMessageDialog(NoQuery.getTopLevelAncestor(), "Please enter a search criteria", "Can't find the Vacumn", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        String tempname = JOptionPane.showInputDialog("Give the question a name:");
        temp.questionname = tempname;
        try
        {
            
            writer.addQuestion(temp, "Saved Questions");
        }
        catch (IOException ioe) {; }
    }//GEN-LAST:event_jButton31ActionPerformed

    private void SavedQuestionUnitsVarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SavedQuestionUnitsVarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SavedQuestionUnitsVarActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        SavedQuestionViewer.setText(writer.textgetter(jComboBox1.getSelectedIndex(), "Saved Questions"));
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        writer.delete(jComboBox1.getSelectedIndex() + 1, "Saved Questions");
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(writer.namebringer("Saved Questions")));
        SavedQuestionViewer.setText(writer.textgetter(0, "Saved Questions"));
    }//GEN-LAST:event_jButton27ActionPerformed

    private void jButton34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton34ActionPerformed
        try{
        java.awt.Desktop.getDesktop().browse(new URI ("http://quizlet.com/57940275/forces-and-momentum-flash-cards/"));}
        catch(Exception e)
        {;}
    }//GEN-LAST:event_jButton34ActionPerformed

    private void jButton36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton36ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton36ActionPerformed

    private void jButton33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton33ActionPerformed
        CardLayout card = (CardLayout)PanCard.getLayout();
            card.show(PanCard, "Quizlets");
    }//GEN-LAST:event_jButton33ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        CardLayout card = (CardLayout)PanCard.getLayout();
            card.show(PanCard, "Practice Qs");
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton40ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton40ActionPerformed
        try{
            java.awt.Desktop.getDesktop().browse(new URI ("http://nothingnerdy.wikispaces.com/IB+PHYSICS"));}
        catch(Exception e)
        {;}
    }//GEN-LAST:event_jButton40ActionPerformed

    private void jButton39ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton39ActionPerformed
        try{
            java.awt.Desktop.getDesktop().browse(new URI ("https://wsscience.wikispaces.com/IB+Physics+End+of+Year+Review"));}
        catch(Exception e)
        {;}
    }//GEN-LAST:event_jButton39ActionPerformed

    private void jButton41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton41ActionPerformed
        try{
            java.awt.Desktop.getDesktop().browse(new URI ("http://nothingnerdy.wikispaces.com/IB+PHYSICS+HL+PAST+PAPERS"));}
        catch(Exception e)
        {;}
    }//GEN-LAST:event_jButton41ActionPerformed

    private void jButton42ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton42ActionPerformed
        try{
            java.awt.Desktop.getDesktop().browse(new URI ("https://store.ibo.org/physics"));}
        catch(Exception e)
        {;}
    }//GEN-LAST:event_jButton42ActionPerformed

    private void jButton43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton43ActionPerformed
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
    }//GEN-LAST:event_jButton43ActionPerformed

    private void jButton44ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton44ActionPerformed
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
    }//GEN-LAST:event_jButton44ActionPerformed

    private void jButton45ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton45ActionPerformed
        writer.clearstats();
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        card.show(PanCard, "Statistics");
    }//GEN-LAST:event_jButton45ActionPerformed

    private void jButton46ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton46ActionPerformed
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CurrentTestB.setVisible(true);
        CT = "Test Form A";
    }//GEN-LAST:event_jButton46ActionPerformed

    private void jButton47ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton47ActionPerformed
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Test Form B");
    }//GEN-LAST:event_jButton47ActionPerformed

    private void jButton48ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton48ActionPerformed
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Test Form C");
    }//GEN-LAST:event_jButton48ActionPerformed

    private void jButton49ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton49ActionPerformed
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CurrentTestB.setVisible(true);
        CT = "Test Form A";
    }//GEN-LAST:event_jButton49ActionPerformed

    private void jButton50ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton50ActionPerformed
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Test Form A");
    }//GEN-LAST:event_jButton50ActionPerformed

    private void jButton51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton51ActionPerformed
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CurrentTestB.setVisible(true);
        CT = "Test Form A";
    }//GEN-LAST:event_jButton51ActionPerformed

    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Test Form B");
    }//GEN-LAST:event_jButton52ActionPerformed

    private void jButton53ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton53ActionPerformed
        QuizAnswerVar16.setVisible(true);
        QuizAnswerVar17.setVisible(true);
        QuizAnswerVar18.setVisible(true);
        QuizAnswerVar19.setVisible(true);
        QuizAnswerVar20.setVisible(true);
        QuizAnswerVar21.setVisible(true);
        QuizAnswerVar22.setVisible(true);
        QuizAnswerVar23.setVisible(true);
        QuizAnswerVar24.setVisible(true);
        QuizAnswerVar25.setVisible(true);
        QuizAnswerVar26.setVisible(true);
        QuizAnswerVar27.setVisible(true);
        QuizAnswerVar28.setVisible(true);
        QuizAnswerVar29.setVisible(true);
        QuizAnswerVar30.setVisible(true);
        QuizUnitsVar16.setVisible(true);
        QuizUnitsVar17.setVisible(true);
        QuizUnitsVar18.setVisible(true);
        QuizUnitsVar19.setVisible(true);
        QuizUnitsVar20.setVisible(true);
        QuizUnitsVar21.setVisible(true);
        QuizUnitsVar22.setVisible(true);
        QuizUnitsVar23.setVisible(true);
        QuizUnitsVar24.setVisible(true);
        QuizUnitsVar25.setVisible(true);
        QuizUnitsVar26.setVisible(true);
        QuizUnitsVar27.setVisible(true);
        QuizUnitsVar28.setVisible(true);
        QuizUnitsVar29.setVisible(true);
        QuizUnitsVar30.setVisible(true);
        int tally = 0;
        
        if(equal(QuizQ1.answer, QuizAnswer16.getText()))
        {
            QuizAnswerVar16.setText("Correct");
            tally ++;
        }
        else
            QuizAnswerVar16.setText("Incorrect");
        if(equal(QuizQ2.answer, QuizAnswer17.getText()))
        {
            QuizAnswerVar17.setText("Correct");
            tally ++;
        }
        else
            QuizAnswerVar17.setText("Incorrect");
        if(equal(QuizQ3.answer, QuizAnswer18.getText()))
        {
            QuizAnswerVar18.setText("Correct");
            tally ++;
        }
        else
            QuizAnswerVar18.setText("Incorrect");
        if(equal(QuizQ4.answer, QuizAnswer19.getText()))
        {
            QuizAnswerVar19.setText("Correct");
            tally ++;
        }
        else
            QuizAnswerVar19.setText("Incorrect");
        if(equal(QuizQ5.answer, QuizAnswer20.getText()))
        {
            QuizAnswerVar20.setText("Correct");
            tally ++;
        }
        else
            QuizAnswerVar20.setText("Incorrect");
        if(equal(QuizQ6.answer, QuizAnswer21.getText()))
        {
            QuizAnswerVar21.setText("Correct");
            tally ++;
        }
        else
            QuizAnswerVar21.setText("Incorrect");
        if(equal(QuizQ7.answer, QuizAnswer22.getText()))
        {
            QuizAnswerVar22.setText("Correct");
            tally ++;
        }
        else
            QuizAnswerVar22.setText("Incorrect");
        if(equal(QuizQ8.answer, QuizAnswer23.getText()))
        {
            QuizAnswerVar23.setText("Correct");
            tally ++;
        }
        else
            QuizAnswerVar23.setText("Incorrect");
        if(equal(QuizQ9.answer, QuizAnswer24.getText()))
        {
            QuizAnswerVar24.setText("Correct");
            tally ++;
        }
        else
            QuizAnswerVar24.setText("Incorrect");
        if(equal(QuizQ10.answer, QuizAnswer25.getText()))
        {
            QuizAnswerVar25.setText("Correct");
            tally ++;
        }
        else
            QuizAnswerVar25.setText("Incorrect");
        if(equal(QuizQ11.answer, QuizAnswer26.getText()))
        {
            QuizAnswerVar26.setText("Correct");
            tally ++;
        }
        else
            QuizAnswerVar26.setText("Incorrect");
        if(equal(QuizQ12.answer, QuizAnswer27.getText()))
        {
            QuizAnswerVar27.setText("Correct");
            tally ++;
        }
        else
            QuizAnswerVar27.setText("Incorrect");
        if(equal(QuizQ13.answer, QuizAnswer28.getText()))
        {
            QuizAnswerVar28.setText("Correct");
            tally ++;
        }
        else
            QuizAnswerVar28.setText("Incorrect");
        if(equal(QuizQ14.answer, QuizAnswer29.getText()))
        {
            QuizAnswerVar29.setText("Correct");
            tally ++;
        }
        else
            QuizAnswerVar29.setText("Incorrect");
        if(equal(QuizQ15.answer, QuizAnswer30.getText()))
        {
            QuizAnswerVar30.setText("Correct");
            tally ++;
        }
        else
            QuizAnswerVar30.setText("Incorrect");
        
        if(QuizQ1.units.equals(QuizUnits16.getText()))
        {
            QuizUnitsVar16.setText("Correct");
            tally ++;
        }
        else
            QuizUnitsVar16.setText("Incorrect");
        if(QuizQ2.units.equals(QuizUnits17.getText()))
        {
            QuizUnitsVar17.setText("Correct");
            tally ++;
        }
        else
            QuizUnitsVar17.setText("Incorrect");
        if(QuizQ3.units.equals(QuizUnits18.getText()))
        {
            QuizUnitsVar18.setText("Correct");
            tally ++;
        }
        else
            QuizUnitsVar18.setText("Incorrect");
        if(QuizQ4.units.equals(QuizUnits19.getText()))
        {
            QuizUnitsVar19.setText("Correct");
            tally ++;
        }
        else
            QuizUnitsVar19.setText("Incorrect");
        if(QuizQ5.units.equals(QuizUnits20.getText()))
        {
            QuizUnitsVar20.setText("Correct");
            tally ++;
        }
        else
            QuizUnitsVar20.setText("Incorrect");
        if(QuizQ6.units.equals(QuizUnits21.getText()))
        {
            QuizUnitsVar21.setText("Correct");
            tally ++;
        }
        else
            QuizUnitsVar21.setText("Incorrect");
        if(QuizQ7.units.equals(QuizUnits22.getText()))
        {
            QuizUnitsVar22.setText("Correct");
            tally ++;
        }
        else
            QuizUnitsVar22.setText("Incorrect");
        if(QuizQ8.units.equals(QuizUnits23.getText()))
        {
            QuizUnitsVar23.setText("Correct");
            tally ++;
        }
        else
            QuizUnitsVar23.setText("Incorrect");
        if(QuizQ9.units.equals(QuizUnits24.getText()))
        {
            QuizUnitsVar24.setText("Correct");
            tally ++;
        }
        else
            QuizUnitsVar24.setText("Incorrect");
        if(QuizQ10.units.equals(QuizUnits25.getText()))
        {
            QuizUnitsVar25.setText("Correct");
            tally ++;
        }
        else
            QuizUnitsVar25.setText("Incorrect");
        if(QuizQ11.units.equals(QuizUnits26.getText()))
        {
            QuizUnitsVar26.setText("Correct");
            tally ++;
        }
        else
            QuizUnitsVar26.setText("Incorrect");
        if(QuizQ12.units.equals(QuizUnits27.getText()))
        {
            QuizUnitsVar27.setText("Correct");
            tally ++;
        }
        else
            QuizUnitsVar27.setText("Incorrect");
        if(QuizQ13.units.equals(QuizUnits28.getText()))
        {
            QuizUnitsVar28.setText("Correct");
            tally ++;
        }
        else
            QuizUnitsVar28.setText("Incorrect");
        if(QuizQ14.units.equals(QuizUnits29.getText()))
        {
            QuizUnitsVar29.setText("Correct");
            tally ++;
        }
        else
            QuizUnitsVar29.setText("Incorrect");
        if(QuizQ15.units.equals(QuizUnits30.getText()))
        {
            QuizUnitsVar30.setText("Correct");
            tally ++;
        }
        else
            QuizUnitsVar30.setText("Incorrect");
        
        if(tally == 30)
        {
            writer.tally("T");
            if(KinematicsRB1.isSelected())
                writer.tally("KT");
            if(ForcesRB1.isSelected())
                writer.tally("FT");
        }
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Test Form A");
    }//GEN-LAST:event_jButton53ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CurrentTestB.setVisible(true);
        CT = "Quiz Form";
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        QuizAnswerVar1.setVisible(true);
        QuizAnswerVar2.setVisible(true);
        QuizAnswerVar3.setVisible(true);
        QuizAnswerVar4.setVisible(true);
        QuizAnswerVar5.setVisible(true);
        QuizUnitsVar1.setVisible(true);
        QuizUnitsVar2.setVisible(true);
        QuizUnitsVar3.setVisible(true);
        QuizUnitsVar4.setVisible(true);
        QuizUnitsVar5.setVisible(true);
        int tally = 0;
        if(equal(QuizQ1.answer, QuizAnswer1.getText()))
        {
            QuizAnswerVar1.setText("Correct");
            tally ++;
        }
        else
        QuizAnswerVar1.setText("Incorrect");
        if(equal(QuizQ2.answer, QuizAnswer2.getText()))
        {
            QuizAnswerVar2.setText("Correct");
            tally ++;
        }
        else
        QuizAnswerVar2.setText("Incorrect");
        if(equal(QuizQ3.answer, QuizAnswer3.getText()))
        {
            QuizAnswerVar3.setText("Correct");
            tally ++;
        }
        else
        QuizAnswerVar3.setText("Incorrect");
        if(equal(QuizQ4.answer, QuizAnswer4.getText()))
        {
            QuizAnswerVar4.setText("Correct");
            tally++;
        }
        else
        QuizAnswerVar4.setText("Incorrect");
        if(equal(QuizQ5.answer, QuizAnswer5.getText()))
        {
            QuizAnswerVar5.setText("Correct");
            tally++;
        }
        else
        QuizAnswerVar5.setText("Incorrect");

        if(QuizQ1.units.equals(QuizUnits1.getText()))
        {
            QuizUnitsVar1.setText("Correct");
            tally ++;
        }
        else
        QuizUnitsVar1.setText("Incorrect");
        if(QuizQ2.units.equals(QuizUnits2.getText()))
        {
            QuizUnitsVar2.setText("Correct");
            tally++;
        }
        else
        QuizUnitsVar2.setText("Incorrect");
        if(QuizQ3.units.equals(QuizUnits3.getText()))
        {
            QuizUnitsVar3.setText("Correct");
            tally++;
        }
        else
        QuizUnitsVar3.setText("Incorrect");
        if(QuizQ4.units.equals(QuizUnits4.getText()))
        {
            QuizUnitsVar4.setText("Correct");
            tally++;
        }
        else
        QuizUnitsVar4.setText("Incorrect");
        if(QuizQ5.units.equals(QuizUnits5.getText()))
        {
            QuizUnitsVar5.setText("Correct");
            tally++;
        }
        else
        QuizUnitsVar5.setText("Incorrect");
        if(tally == 10)
        {
            writer.tally("T");
            if(KinematicsRB1.isSelected())
                writer.tally("KT");
            if(ForcesRB1.isSelected())
                writer.tally("FT");
        }
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Quiz Form");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Quest Form A");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CurrentTestB.setVisible(true);
        CT = "Quest Form A";
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        QuizAnswerVar6.setVisible(true);
        QuizAnswerVar7.setVisible(true);
        QuizAnswerVar8.setVisible(true);
        QuizAnswerVar9.setVisible(true);
        QuizAnswerVar10.setVisible(true);
        QuizAnswerVar11.setVisible(true);
        QuizAnswerVar12.setVisible(true);
        QuizAnswerVar13.setVisible(true);
        QuizAnswerVar14.setVisible(true);
        QuizAnswerVar15.setVisible(true);
        QuizUnitsVar6.setVisible(true);
        QuizUnitsVar7.setVisible(true);
        QuizUnitsVar8.setVisible(true);
        QuizUnitsVar9.setVisible(true);
        QuizUnitsVar10.setVisible(true);
        QuizUnitsVar11.setVisible(true);
        QuizUnitsVar12.setVisible(true);
        QuizUnitsVar13.setVisible(true);
        QuizUnitsVar14.setVisible(true);
        QuizUnitsVar15.setVisible(true);
        int tally = 0;
        
        if(equal(QuizQ1.answer, QuizAnswer6.getText()))
        {
            QuizAnswerVar6.setText("Correct");
            tally++;
        }
        else
        QuizAnswerVar6.setText("Incorrect");
        if(equal(QuizQ2.answer, QuizAnswer7.getText()))
        {
            QuizAnswerVar7.setText("Correct");
            tally ++;
        }
        else
        QuizAnswerVar7.setText("Incorrect");
        if(equal(QuizQ3.answer, QuizAnswer8.getText()))
        {
            QuizAnswerVar8.setText("Correct");
            tally ++;
        }
        else
        QuizAnswerVar8.setText("Incorrect");
        if(equal(QuizQ4.answer, QuizAnswer9.getText()))
        {
            QuizAnswerVar9.setText("Correct");
            tally ++;
        }
        else
        QuizAnswerVar9.setText("Incorrect");
        if(equal(QuizQ5.answer, QuizAnswer10.getText()))
        {
            QuizAnswerVar10.setText("Correct");
            tally ++;
        }
        else
        QuizAnswerVar10.setText("Incorrect");
        if(equal(QuizQ6.answer, QuizAnswer11.getText()))
        {
            QuizAnswerVar11.setText("Correct");
            tally ++;
        }
        else
        QuizAnswerVar11.setText("Incorrect");
        if(equal(QuizQ7.answer, QuizAnswer12.getText()))
        {
            QuizAnswerVar12.setText("Correct");
            tally ++;
        }
        else
        QuizAnswerVar12.setText("Incorrect");
        if(equal(QuizQ8.answer, QuizAnswer13.getText()))
        {
            QuizAnswerVar13.setText("Correct");
            tally ++;
        }
        else
        QuizAnswerVar13.setText("Incorrect");
        if(equal(QuizQ9.answer, QuizAnswer14.getText()))
        {
            QuizAnswerVar14.setText("Correct");
            tally ++;
        }
        else
        QuizAnswerVar14.setText("Incorrect");
        if(equal(QuizQ10.answer, QuizAnswer15.getText()))
        {
            QuizAnswerVar15.setText("Correct");
            tally ++;
        }
        else
        QuizAnswerVar15.setText("Incorrect");

        if(QuizQ1.units.equals(QuizUnits6.getText()))
        {
            QuizUnitsVar6.setText("Correct");
            tally ++;
        }
        else
        QuizUnitsVar6.setText("Incorrect");
        if(QuizQ2.units.equals(QuizUnits7.getText()))
        {
            QuizUnitsVar7.setText("Correct");
            tally ++;
        }
        else
        QuizUnitsVar7.setText("Incorrect");
        if(QuizQ3.units.equals(QuizUnits8.getText()))
        {
            QuizUnitsVar8.setText("Correct");
            tally ++;
        }
        else
        QuizUnitsVar8.setText("Incorrect");
        if(QuizQ4.units.equals(QuizUnits9.getText()))
        {
            QuizUnitsVar9.setText("Correct");
            tally ++;
        }
        else
        QuizUnitsVar9.setText("Incorrect");
        if(QuizQ5.units.equals(QuizUnits10.getText()))
        {
            QuizUnitsVar10.setText("Correct");
            tally ++;
        }
        else
        QuizUnitsVar10.setText("Incorrect");
        if(QuizQ6.units.equals(QuizUnits11.getText()))
        {
            QuizUnitsVar11.setText("Correct");
            tally ++;
        }
        else
        QuizUnitsVar11.setText("Incorrect");
        if(QuizQ7.units.equals(QuizUnits12.getText()))
        {
            QuizUnitsVar12.setText("Correct");
            tally ++;
        }
        else
        QuizUnitsVar12.setText("Incorrect");
        if(QuizQ8.units.equals(QuizUnits13.getText()))
        {
            QuizUnitsVar13.setText("Correct");
            tally ++;
        }
        else
        QuizUnitsVar13.setText("Incorrect");
        if(QuizQ9.units.equals(QuizUnits14.getText()))
        {
            QuizUnitsVar14.setText("Correct");
            tally ++;
        }
        else
        QuizUnitsVar14.setText("Incorrect");
        if(QuizQ10.units.equals(QuizUnits15.getText()))
        {
            QuizUnitsVar15.setText("Correct");
            tally ++;
        }
        else
        QuizUnitsVar15.setText("Incorrect");
        
        if(tally == 20)
        {
            writer.tally("T");
            writer.tally("T");
            if(KinematicsRB1.isSelected())
                writer.tally("KT");
            if(ForcesRB1.isSelected())
                writer.tally("FT");
        }
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Quest Form A");
    }//GEN-LAST:event_jButton6ActionPerformed

    private void QuizAnsB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuizAnsB1ActionPerformed
        if(equal(QuizQ1.answer, QuizAnswer1.getText()))
        {
            QuizAnswerVar1.setText("Correct");
        }
        else
        QuizAnswerVar1.setText("Incorrect");
        if(QuizQ1.units.equals(QuizUnits1.getText()))
        {
            QuizUnitsVar1.setText("Correct");
        }
        else
        QuizUnitsVar1.setText("Incorrect");
        QuizAnswerVar1.setVisible(true);
        QuizUnitsVar1.setVisible(true);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Quiz Form");
    }//GEN-LAST:event_QuizAnsB1ActionPerformed

    private void QuizAnsB2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuizAnsB2ActionPerformed
        if(equal(QuizQ2.answer, QuizAnswer2.getText()))
        {
            QuizAnswerVar2.setText("Correct");
        }
        else
        QuizAnswerVar2.setText("Incorrect");
        if(QuizQ2.units.equals(QuizUnits2.getText()))
        {
            QuizUnitsVar2.setText("Correct");
        }
        else
        QuizUnitsVar2.setText("Incorrect");
        QuizAnswerVar2.setVisible(true);
        QuizUnitsVar2.setVisible(true);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Quiz Form");
    }//GEN-LAST:event_QuizAnsB2ActionPerformed

    private void QuizAnsB3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuizAnsB3ActionPerformed
        if(equal(QuizQ3.answer, QuizAnswer3.getText()))
        {
            QuizAnswerVar3.setText("Correct");
        }
        else
        QuizAnswerVar3.setText("Incorrect");
        if(QuizQ3.units.equals(QuizUnits3.getText()))
        {
            QuizUnitsVar3.setText("Correct");
        }
        else
        QuizUnitsVar3.setText("Incorrect");
        QuizAnswerVar3.setVisible(true);
        QuizUnitsVar3.setVisible(true);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Quiz Form");
    }//GEN-LAST:event_QuizAnsB3ActionPerformed

    private void QuizAnsB4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuizAnsB4ActionPerformed
        if(equal(QuizQ4.answer, QuizAnswer4.getText()))
        {
            QuizAnswerVar4.setText("Correct");
        }
        else
        QuizAnswerVar4.setText("Incorrect");
        if(QuizQ4.units.equals(QuizUnits4.getText()))
        {
            QuizUnitsVar4.setText("Correct");
        }
        else
        QuizUnitsVar4.setText("Incorrect");
        QuizAnswerVar4.setVisible(true);
        QuizUnitsVar4.setVisible(true);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Quiz Form");
    }//GEN-LAST:event_QuizAnsB4ActionPerformed

    private void QuizAnsB5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuizAnsB5ActionPerformed
        if(equal(QuizQ5.answer, QuizAnswer5.getText()))
        {
            QuizAnswerVar5.setText("Correct");
        }
        else
        QuizAnswerVar5.setText("Incorrect");
        if(QuizQ5.units.equals(QuizUnits5.getText()))
        {
            QuizUnitsVar5.setText("Correct");
        }
        else
        QuizUnitsVar5.setText("Incorrect");
        QuizAnswerVar5.setVisible(true);
        QuizUnitsVar5.setVisible(true);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Quiz Form");
    }//GEN-LAST:event_QuizAnsB5ActionPerformed

    private void QuizAnsB6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuizAnsB6ActionPerformed
        if(equal(QuizQ1.answer, QuizAnswer6.getText()))
        {
            QuizAnswerVar6.setText("Correct");
        }
        else
        QuizAnswerVar6.setText("Incorrect");
        if(QuizQ1.units.equals(QuizUnits6.getText()))
        {
            QuizUnitsVar6.setText("Correct");
        }
        else
        QuizUnitsVar6.setText("Incorrect");
        QuizAnswerVar6.setVisible(true);
        QuizUnitsVar6.setVisible(true);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Quest Form A");
    }//GEN-LAST:event_QuizAnsB6ActionPerformed

    private void QuizAnsB7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuizAnsB7ActionPerformed
        if(equal(QuizQ2.answer, QuizAnswer7.getText()))
        {
            QuizAnswerVar7.setText("Correct");
        }
        else
        QuizAnswerVar7.setText("Incorrect");
        if(QuizQ2.units.equals(QuizUnits7.getText()))
        {
            QuizUnitsVar7.setText("Correct");
        }
        else
        QuizUnitsVar7.setText("Incorrect");
        QuizAnswerVar7.setVisible(true);
        QuizUnitsVar7.setVisible(true);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Quest Form A");
    }//GEN-LAST:event_QuizAnsB7ActionPerformed

    private void QuizAnsB8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuizAnsB8ActionPerformed
        if(equal(QuizQ3.answer, QuizAnswer8.getText()))
        {
            QuizAnswerVar8.setText("Correct");
        }
        else
        QuizAnswerVar8.setText("Incorrect");
        if(QuizQ3.units.equals(QuizUnits8.getText()))
        {
            QuizUnitsVar8.setText("Correct");
        }
        else
        QuizUnitsVar8.setText("Incorrect");
        QuizAnswerVar8.setVisible(true);
        QuizUnitsVar8.setVisible(true);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Quest Form A");
    }//GEN-LAST:event_QuizAnsB8ActionPerformed

    private void QuizAnsB9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuizAnsB9ActionPerformed
        if(equal(QuizQ4.answer, QuizAnswer9.getText()))
        {
            QuizAnswerVar9.setText("Correct");
        }
        else
        QuizAnswerVar9.setText("Incorrect");
        if(QuizQ4.units.equals(QuizUnits9.getText()))
        {
            QuizUnitsVar9.setText("Correct");
        }
        else
        QuizUnitsVar9.setText("Incorrect");
        QuizAnswerVar9.setVisible(true);
        QuizUnitsVar9.setVisible(true);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Quest Form A");
    }//GEN-LAST:event_QuizAnsB9ActionPerformed

    private void QuizAnsB10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuizAnsB10ActionPerformed
        if(equal(QuizQ5.answer, QuizAnswer10.getText()))
        {
            QuizAnswerVar10.setText("Correct");
        }
        else
        QuizAnswerVar10.setText("Incorrect");
        if(QuizQ5.units.equals(QuizUnits10.getText()))
        {
            QuizUnitsVar10.setText("Correct");
        }
        else
        QuizUnitsVar10.setText("Incorrect");
        QuizAnswerVar10.setVisible(true);
        QuizUnitsVar10.setVisible(true);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Quest Form A");
    }//GEN-LAST:event_QuizAnsB10ActionPerformed

    private void QuizAnsB11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuizAnsB11ActionPerformed
        if(equal(QuizQ6.answer, QuizAnswer11.getText()))
        {
            QuizAnswerVar11.setText("Correct");
        }
        else
        QuizAnswerVar11.setText("Incorrect");
        if(QuizQ6.units.equals(QuizUnits11.getText()))
        {
            QuizUnitsVar11.setText("Correct");
        }
        else
        QuizUnitsVar11.setText("Incorrect");
        QuizAnswerVar11.setVisible(true);
        QuizUnitsVar11.setVisible(true);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Quest Form B");
    }//GEN-LAST:event_QuizAnsB11ActionPerformed

    private void QuizAnsB12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuizAnsB12ActionPerformed
        if(equal(QuizQ7.answer, QuizAnswer12.getText()))
        {
            QuizAnswerVar12.setText("Correct");
        }
        else
        QuizAnswerVar12.setText("Incorrect");
        if(QuizQ7.units.equals(QuizUnits12.getText()))
        {
            QuizUnitsVar12.setText("Correct");
        }
        else
        QuizUnitsVar12.setText("Incorrect");
        QuizAnswerVar12.setVisible(true);
        QuizUnitsVar12.setVisible(true);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Quest Form B");
    }//GEN-LAST:event_QuizAnsB12ActionPerformed

    private void QuizAnsB13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuizAnsB13ActionPerformed
        if(equal(QuizQ8.answer, QuizAnswer13.getText()))
        {
            QuizAnswerVar13.setText("Correct");
        }
        else
        QuizAnswerVar13.setText("Incorrect");
        if(QuizQ8.units.equals(QuizUnits13.getText()))
        {
            QuizUnitsVar13.setText("Correct");
        }
        else
        QuizUnitsVar13.setText("Incorrect");
        QuizAnswerVar13.setVisible(true);
        QuizUnitsVar13.setVisible(true);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Quest Form B");
    }//GEN-LAST:event_QuizAnsB13ActionPerformed

    private void QuizAnsB15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuizAnsB15ActionPerformed
        if(equal(QuizQ9.answer, QuizAnswer14.getText()))
        {
            QuizAnswerVar14.setText("Correct");
        }
        else
        QuizAnswerVar14.setText("Incorrect");
        if(QuizQ9.units.equals(QuizUnits14.getText()))
        {
            QuizUnitsVar14.setText("Correct");
        }
        else
        QuizUnitsVar14.setText("Incorrect");
        QuizAnswerVar14.setVisible(true);
        QuizUnitsVar14.setVisible(true);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Quest Form B");
    }//GEN-LAST:event_QuizAnsB15ActionPerformed

    private void QuizAnsB14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuizAnsB14ActionPerformed
        if(equal(QuizQ10.answer, QuizAnswer15.getText()))
        {
            QuizAnswerVar15.setText("Correct");
        }
        else
        QuizAnswerVar15.setText("Incorrect");
        if(QuizQ10.units.equals(QuizUnits15.getText()))
        {
            QuizUnitsVar15.setText("Correct");
        }
        else
        QuizUnitsVar15.setText("Incorrect");
        QuizAnswerVar15.setVisible(true);
        QuizUnitsVar15.setVisible(true);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Quest Form B");
    }//GEN-LAST:event_QuizAnsB14ActionPerformed

    private void QuizAnsB16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuizAnsB16ActionPerformed
        if(equal(QuizQ1.answer, QuizAnswer16.getText()))
        {
            QuizAnswerVar16.setText("Correct");
        }
        else
        QuizAnswerVar16.setText("Incorrect");
        if(QuizQ1.units.equals(QuizUnits16.getText()))
        {
            QuizUnitsVar16.setText("Correct");
        }
        else
        QuizUnitsVar16.setText("Incorrect");
        QuizAnswerVar16.setVisible(true);
        QuizUnitsVar16.setVisible(true);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Test Form A");
    }//GEN-LAST:event_QuizAnsB16ActionPerformed

    private void QuizAnsB17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuizAnsB17ActionPerformed
        if(equal(QuizQ2.answer, QuizAnswer17.getText()))
        {
            QuizAnswerVar17.setText("Correct");
        }
        else
        QuizAnswerVar17.setText("Incorrect");
        if(QuizQ2.units.equals(QuizUnits17.getText()))
        {
            QuizUnitsVar17.setText("Correct");
        }
        else
        QuizUnitsVar17.setText("Incorrect");
        QuizAnswerVar17.setVisible(true);
        QuizUnitsVar17.setVisible(true);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Test Form A");
    }//GEN-LAST:event_QuizAnsB17ActionPerformed

    private void QuizAnsB18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuizAnsB18ActionPerformed
        if(equal(QuizQ3.answer, QuizAnswer18.getText()))
        {
            QuizAnswerVar18.setText("Correct");
        }
        else
        QuizAnswerVar18.setText("Incorrect");
        if(QuizQ3.units.equals(QuizUnits18.getText()))
        {
            QuizUnitsVar18.setText("Correct");
        }
        else
        QuizUnitsVar18.setText("Incorrect");
        QuizAnswerVar18.setVisible(true);
        QuizUnitsVar18.setVisible(true);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Test Form A");
    }//GEN-LAST:event_QuizAnsB18ActionPerformed

    private void QuizAnsB19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuizAnsB19ActionPerformed
        if(equal(QuizQ4.answer, QuizAnswer19.getText()))
        {
            QuizAnswerVar19.setText("Correct");
        }
        else
        QuizAnswerVar19.setText("Incorrect");
        if(QuizQ4.units.equals(QuizUnits19.getText()))
        {
            QuizUnitsVar19.setText("Correct");
        }
        else
        QuizUnitsVar19.setText("Incorrect");
        QuizAnswerVar19.setVisible(true);
        QuizUnitsVar19.setVisible(true);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Test Form A");
    }//GEN-LAST:event_QuizAnsB19ActionPerformed

    private void QuizAnsB20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuizAnsB20ActionPerformed
        if(equal(QuizQ10.answer, QuizAnswer20.getText()))
        {
            QuizAnswerVar20.setText("Correct");
        }
        else
        QuizAnswerVar20.setText("Incorrect");
        if(QuizQ10.units.equals(QuizUnits20.getText()))
        {
            QuizUnitsVar20.setText("Correct");
        }
        else
        QuizUnitsVar20.setText("Incorrect");
        QuizAnswerVar20.setVisible(true);
        QuizUnitsVar20.setVisible(true);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Test Form A");
    }//GEN-LAST:event_QuizAnsB20ActionPerformed

    private void QuizAnsB21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuizAnsB21ActionPerformed
        if(equal(QuizQ6.answer, QuizAnswer21.getText()))
        {
            QuizAnswerVar21.setText("Correct");
        }
        else
        QuizAnswerVar21.setText("Incorrect");
        if(QuizQ6.units.equals(QuizUnits21.getText()))
        {
            QuizUnitsVar21.setText("Correct");
        }
        else
        QuizUnitsVar21.setText("Incorrect");
        QuizAnswerVar21.setVisible(true);
        QuizUnitsVar21.setVisible(true);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Test Form B");
    }//GEN-LAST:event_QuizAnsB21ActionPerformed

    private void QuizAnsB22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuizAnsB22ActionPerformed
        if(equal(QuizQ7.answer, QuizAnswer22.getText()))
        {
            QuizAnswerVar22.setText("Correct");
        }
        else
        QuizAnswerVar22.setText("Incorrect");
        if(QuizQ7.units.equals(QuizUnits22.getText()))
        {
            QuizUnitsVar22.setText("Correct");
        }
        else
        QuizUnitsVar22.setText("Incorrect");
        QuizAnswerVar22.setVisible(true);
        QuizUnitsVar22.setVisible(true);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Test Form B");
    }//GEN-LAST:event_QuizAnsB22ActionPerformed

    private void QuizAnsB23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuizAnsB23ActionPerformed
        if(equal(QuizQ8.answer, QuizAnswer23.getText()))
        {
            QuizAnswerVar8.setText("Correct");
        }
        else
        QuizAnswerVar23.setText("Incorrect");
        if(QuizQ8.units.equals(QuizUnits23.getText()))
        {
            QuizUnitsVar23.setText("Correct");
        }
        else
        QuizUnitsVar23.setText("Incorrect");
        QuizAnswerVar23.setVisible(true);
        QuizUnitsVar23.setVisible(true);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Test Form B");
    }//GEN-LAST:event_QuizAnsB23ActionPerformed

    private void QuizAnsB24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuizAnsB24ActionPerformed
        if(equal(QuizQ9.answer, QuizAnswer4.getText()))
        {
            QuizAnswerVar24.setText("Correct");
        }
        else
        QuizAnswerVar24.setText("Incorrect");
        if(QuizQ9.units.equals(QuizUnits24.getText()))
        {
            QuizUnitsVar24.setText("Correct");
        }
        else
        QuizUnitsVar24.setText("Incorrect");
        QuizAnswerVar24.setVisible(true);
        QuizUnitsVar24.setVisible(true);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Test Form B");
    }//GEN-LAST:event_QuizAnsB24ActionPerformed

    private void QuizAnsB25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuizAnsB25ActionPerformed
        if(equal(QuizQ10.answer, QuizAnswer25.getText()))
        {
            QuizAnswerVar25.setText("Correct");
        }
        else
        QuizAnswerVar25.setText("Incorrect");
        if(QuizQ10.units.equals(QuizUnits25.getText()))
        {
            QuizUnitsVar25.setText("Correct");
        }
        else
        QuizUnitsVar25.setText("Incorrect");
        QuizAnswerVar25.setVisible(true);
        QuizUnitsVar25.setVisible(true);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Test Form B");
    }//GEN-LAST:event_QuizAnsB25ActionPerformed

    private void QuizAnsB26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuizAnsB26ActionPerformed
        if(equal(QuizQ11.answer, QuizAnswer26.getText()))
        {
            QuizAnswerVar26.setText("Correct");
        }
        else
        QuizAnswerVar11.setText("Incorrect");
        if(QuizQ11.units.equals(QuizUnits26.getText()))
        {
            QuizUnitsVar26.setText("Correct");
        }
        else
        QuizUnitsVar26.setText("Incorrect");
        QuizAnswerVar26.setVisible(true);
        QuizUnitsVar26.setVisible(true);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Test Form C");
    }//GEN-LAST:event_QuizAnsB26ActionPerformed

    private void QuizAnsB27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuizAnsB27ActionPerformed
        if(equal(QuizQ12.answer, QuizAnswer27.getText()))
        {
            QuizAnswerVar27.setText("Correct");
        }
        else
        QuizAnswerVar27.setText("Incorrect");
        if(QuizQ12.units.equals(QuizUnits27.getText()))
        {
            QuizUnitsVar27.setText("Correct");
        }
        else
        QuizUnitsVar27.setText("Incorrect");
        QuizAnswerVar27.setVisible(true);
        QuizUnitsVar27.setVisible(true);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Test Form C");
    }//GEN-LAST:event_QuizAnsB27ActionPerformed

    private void QuizAnsB28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuizAnsB28ActionPerformed
        if(equal(QuizQ13.answer, QuizAnswer28.getText()))
        {
            QuizAnswerVar28.setText("Correct");
        }
        else
        QuizAnswerVar28.setText("Incorrect");
        if(QuizQ13.units.equals(QuizUnits28.getText()))
        {
            QuizUnitsVar28.setText("Correct");
        }
        else
        QuizUnitsVar28.setText("Incorrect");
        QuizAnswerVar28.setVisible(true);
        QuizUnitsVar28.setVisible(true);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Test Form C");
    }//GEN-LAST:event_QuizAnsB28ActionPerformed

    private void QuizAnsB29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuizAnsB29ActionPerformed
        if(equal(QuizQ14.answer, QuizAnswer29.getText()))
        {
            QuizAnswerVar29.setText("Correct");
        }
        else
        QuizAnswerVar29.setText("Incorrect");
        if(QuizQ14.units.equals(QuizUnits29.getText()))
        {
            QuizUnitsVar29.setText("Correct");
        }
        else
        QuizUnitsVar29.setText("Incorrect");
        QuizAnswerVar29.setVisible(true);
        QuizUnitsVar29.setVisible(true);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Test Form C");
    }//GEN-LAST:event_QuizAnsB29ActionPerformed

    private void QuizAnsB30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuizAnsB30ActionPerformed
        if(equal(QuizQ15.answer, QuizAnswer30.getText()))
        {
            QuizAnswerVar30.setText("Correct");
        }
        else
        QuizAnswerVar30.setText("Incorrect");
        if(QuizQ15.units.equals(QuizUnits30.getText()))
        {
            QuizUnitsVar30.setText("Correct");
        }
        else
        QuizUnitsVar30.setText("Incorrect");
        QuizAnswerVar30.setVisible(true);
        QuizUnitsVar30.setVisible(true);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Test Form C");
    }//GEN-LAST:event_QuizAnsB30ActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
    File file = new File("Favourite Questions");
        try  {
            boolean successfullyMadeFile = file.createNewFile();
            }
        catch (IOException ioe) {; }
        String fileDataStr = "";
        try{fileDataStr = FilesUtil.readTextFile("Favourite Questions");}
        catch(IOException ioe){;}
        try{
    	FilesUtil.writeToTextFile("Favourite Questions", fileDataStr + temp.questionname + "~");
        } catch (IOException ioe) {;}
    }//GEN-LAST:event_jButton30ActionPerformed

    private void FavQTypeUnitsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FavQTypeUnitsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FavQTypeUnitsActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
        FavQTypeAns.setVisible(false);
        FavQTypeUnits.setVisible(false);
        temp = Database.qtypegetter((String)jComboBox5.getSelectedItem());
        FavouriteQTypeText.setText(temp.questiontext);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Favorite Question Types");
    }//GEN-LAST:event_jButton28ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        boolean answerc = false;
        boolean unitsc = false;
        FavQTypeAns.setVisible(true);
        FavQTypeUnits.setVisible(true);
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Favorite Question Types");
        if(equal(temp.answer,FavQTypeAnsVar.getText()))
        {
            FavQTypeAns.setText("Correct");
            answerc = true;
        }
        else
        {
            FavQTypeAns.setText("Incorrect");
        }
        if(FavQTypeUnitsVar.getText().equals(temp.units))
        {
            FavQTypeUnits.setText("Correct");
            unitsc = true;
        }
        else
        {
            FavQTypeUnits.setText("Incorrect");
        }
        if(answerc && unitsc)
        {
            writer.tally("Q");
            writer.tally(Database.getUnit(temp.questionname));
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton54ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton54ActionPerformed
        writer.typedelete(jComboBox5.getSelectedIndex(), "Favourite Questions");
        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel(writer.namegetter("Favourite Questions")));    
        FavouriteQTypeText.setText("");
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Main Interface");
        CardLayout card2 = (CardLayout)PanCard.getLayout();
        card2.show(PanCard, "Favorite Question Types");
    }//GEN-LAST:event_jButton54ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AdvSearchBox1;
    private javax.swing.JTextField AdvSearchBox2;
    private javax.swing.JTextField AdvSearchBox3;
    private javax.swing.JTextField AdvSearchBox4;
    private javax.swing.JTextField AnswerVar;
    private javax.swing.JTextField CMT;
    private javax.swing.JTextField CQ;
    private javax.swing.JButton CheckAns;
    private javax.swing.JRadioButton CircularMotionRB1;
    private javax.swing.JTextField CriteriaCheck;
    private javax.swing.JButton CurrentQB;
    private javax.swing.JButton CurrentTestB;
    private javax.swing.JTextField EQ;
    private javax.swing.JTextField ET;
    private javax.swing.JRadioButton EnergyRB1;
    private javax.swing.JTextField FQ;
    private javax.swing.JTextField FT;
    private javax.swing.JTextField FavQTypeAns;
    private javax.swing.JTextField FavQTypeAnsVar;
    private javax.swing.JTextField FavQTypeUnits;
    private javax.swing.JTextField FavQTypeUnitsVar;
    private javax.swing.JButton FavoriteQTypeB;
    private javax.swing.JPanel FavoriteQTypes;
    private javax.swing.JTextArea FavouriteQTypeText;
    private javax.swing.JRadioButton ForcesRB1;
    private javax.swing.JTextField GQ;
    private javax.swing.JTextField GT;
    private javax.swing.JRadioButton GravityRB1;
    private javax.swing.JTextField KQ;
    private javax.swing.JTextField KT;
    private javax.swing.JRadioButton KinematicsRB1;
    private javax.swing.JTextField MQ;
    private javax.swing.JTextField MT;
    private javax.swing.JPanel Main;
    private javax.swing.JPanel MakeT;
    private javax.swing.JRadioButton MomentumRB1;
    private javax.swing.JTextField MostVisited;
    private javax.swing.JTextField NoQuery;
    private javax.swing.JTextField NoQuery2;
    private javax.swing.JPanel PanCard;
    private javax.swing.JRadioButton PerQ;
    private javax.swing.JTextField QSolved;
    private javax.swing.JTextField Qanswer;
    private javax.swing.JTextArea Qfield;
    private javax.swing.JPanel QuestA;
    private javax.swing.JPanel QuestB;
    private javax.swing.JPanel Question;
    private javax.swing.JPanel Quiz;
    private javax.swing.JTextField Quiz1;
    private javax.swing.JTextField Quiz10;
    private javax.swing.JTextField Quiz11;
    private javax.swing.JTextField Quiz12;
    private javax.swing.JTextField Quiz13;
    private javax.swing.JTextField Quiz14;
    private javax.swing.JTextField Quiz15;
    private javax.swing.JTextField Quiz16;
    private javax.swing.JTextField Quiz17;
    private javax.swing.JTextField Quiz18;
    private javax.swing.JTextField Quiz19;
    private javax.swing.JTextField Quiz2;
    private javax.swing.JTextField Quiz20;
    private javax.swing.JTextField Quiz21;
    private javax.swing.JTextField Quiz22;
    private javax.swing.JTextField Quiz23;
    private javax.swing.JTextField Quiz24;
    private javax.swing.JTextField Quiz25;
    private javax.swing.JTextField Quiz26;
    private javax.swing.JTextField Quiz27;
    private javax.swing.JTextField Quiz28;
    private javax.swing.JTextField Quiz29;
    private javax.swing.JTextField Quiz3;
    private javax.swing.JTextField Quiz30;
    private javax.swing.JTextField Quiz4;
    private javax.swing.JTextField Quiz5;
    private javax.swing.JTextField Quiz6;
    private javax.swing.JTextField Quiz7;
    private javax.swing.JTextField Quiz8;
    private javax.swing.JTextField Quiz9;
    private javax.swing.JButton QuizAnsB1;
    private javax.swing.JButton QuizAnsB10;
    private javax.swing.JButton QuizAnsB11;
    private javax.swing.JButton QuizAnsB12;
    private javax.swing.JButton QuizAnsB13;
    private javax.swing.JButton QuizAnsB14;
    private javax.swing.JButton QuizAnsB15;
    private javax.swing.JButton QuizAnsB16;
    private javax.swing.JButton QuizAnsB17;
    private javax.swing.JButton QuizAnsB18;
    private javax.swing.JButton QuizAnsB19;
    private javax.swing.JButton QuizAnsB2;
    private javax.swing.JButton QuizAnsB20;
    private javax.swing.JButton QuizAnsB21;
    private javax.swing.JButton QuizAnsB22;
    private javax.swing.JButton QuizAnsB23;
    private javax.swing.JButton QuizAnsB24;
    private javax.swing.JButton QuizAnsB25;
    private javax.swing.JButton QuizAnsB26;
    private javax.swing.JButton QuizAnsB27;
    private javax.swing.JButton QuizAnsB28;
    private javax.swing.JButton QuizAnsB29;
    private javax.swing.JButton QuizAnsB3;
    private javax.swing.JButton QuizAnsB30;
    private javax.swing.JButton QuizAnsB4;
    private javax.swing.JButton QuizAnsB5;
    private javax.swing.JButton QuizAnsB6;
    private javax.swing.JButton QuizAnsB7;
    private javax.swing.JButton QuizAnsB8;
    private javax.swing.JButton QuizAnsB9;
    private javax.swing.JTextField QuizAnswer1;
    private javax.swing.JTextField QuizAnswer10;
    private javax.swing.JTextField QuizAnswer11;
    private javax.swing.JTextField QuizAnswer12;
    private javax.swing.JTextField QuizAnswer13;
    private javax.swing.JTextField QuizAnswer14;
    private javax.swing.JTextField QuizAnswer15;
    private javax.swing.JTextField QuizAnswer16;
    private javax.swing.JTextField QuizAnswer17;
    private javax.swing.JTextField QuizAnswer18;
    private javax.swing.JTextField QuizAnswer19;
    private javax.swing.JTextField QuizAnswer2;
    private javax.swing.JTextField QuizAnswer20;
    private javax.swing.JTextField QuizAnswer21;
    private javax.swing.JTextField QuizAnswer22;
    private javax.swing.JTextField QuizAnswer23;
    private javax.swing.JTextField QuizAnswer24;
    private javax.swing.JTextField QuizAnswer25;
    private javax.swing.JTextField QuizAnswer26;
    private javax.swing.JTextField QuizAnswer27;
    private javax.swing.JTextField QuizAnswer28;
    private javax.swing.JTextField QuizAnswer29;
    private javax.swing.JTextField QuizAnswer3;
    private javax.swing.JTextField QuizAnswer30;
    private javax.swing.JTextField QuizAnswer4;
    private javax.swing.JTextField QuizAnswer5;
    private javax.swing.JTextField QuizAnswer6;
    private javax.swing.JTextField QuizAnswer7;
    private javax.swing.JTextField QuizAnswer8;
    private javax.swing.JTextField QuizAnswer9;
    private javax.swing.JTextField QuizAnswerVar1;
    private javax.swing.JTextField QuizAnswerVar10;
    private javax.swing.JTextField QuizAnswerVar11;
    private javax.swing.JTextField QuizAnswerVar12;
    private javax.swing.JTextField QuizAnswerVar13;
    private javax.swing.JTextField QuizAnswerVar14;
    private javax.swing.JTextField QuizAnswerVar15;
    private javax.swing.JTextField QuizAnswerVar16;
    private javax.swing.JTextField QuizAnswerVar17;
    private javax.swing.JTextField QuizAnswerVar18;
    private javax.swing.JTextField QuizAnswerVar19;
    private javax.swing.JTextField QuizAnswerVar2;
    private javax.swing.JTextField QuizAnswerVar20;
    private javax.swing.JTextField QuizAnswerVar21;
    private javax.swing.JTextField QuizAnswerVar22;
    private javax.swing.JTextField QuizAnswerVar23;
    private javax.swing.JTextField QuizAnswerVar24;
    private javax.swing.JTextField QuizAnswerVar25;
    private javax.swing.JTextField QuizAnswerVar26;
    private javax.swing.JTextField QuizAnswerVar27;
    private javax.swing.JTextField QuizAnswerVar28;
    private javax.swing.JTextField QuizAnswerVar29;
    private javax.swing.JTextField QuizAnswerVar3;
    private javax.swing.JTextField QuizAnswerVar30;
    private javax.swing.JTextField QuizAnswerVar4;
    private javax.swing.JTextField QuizAnswerVar5;
    private javax.swing.JTextField QuizAnswerVar6;
    private javax.swing.JTextField QuizAnswerVar7;
    private javax.swing.JTextField QuizAnswerVar8;
    private javax.swing.JTextField QuizAnswerVar9;
    private javax.swing.JTextField QuizUnits1;
    private javax.swing.JTextField QuizUnits10;
    private javax.swing.JTextField QuizUnits11;
    private javax.swing.JTextField QuizUnits12;
    private javax.swing.JTextField QuizUnits13;
    private javax.swing.JTextField QuizUnits14;
    private javax.swing.JTextField QuizUnits15;
    private javax.swing.JTextField QuizUnits16;
    private javax.swing.JTextField QuizUnits17;
    private javax.swing.JTextField QuizUnits18;
    private javax.swing.JTextField QuizUnits19;
    private javax.swing.JTextField QuizUnits2;
    private javax.swing.JTextField QuizUnits20;
    private javax.swing.JTextField QuizUnits21;
    private javax.swing.JTextField QuizUnits22;
    private javax.swing.JTextField QuizUnits23;
    private javax.swing.JTextField QuizUnits24;
    private javax.swing.JTextField QuizUnits25;
    private javax.swing.JTextField QuizUnits26;
    private javax.swing.JTextField QuizUnits27;
    private javax.swing.JTextField QuizUnits28;
    private javax.swing.JTextField QuizUnits29;
    private javax.swing.JTextField QuizUnits3;
    private javax.swing.JTextField QuizUnits30;
    private javax.swing.JTextField QuizUnits4;
    private javax.swing.JTextField QuizUnits5;
    private javax.swing.JTextField QuizUnits6;
    private javax.swing.JTextField QuizUnits7;
    private javax.swing.JTextField QuizUnits8;
    private javax.swing.JTextField QuizUnits9;
    private javax.swing.JTextField QuizUnitsVar1;
    private javax.swing.JTextField QuizUnitsVar10;
    private javax.swing.JTextField QuizUnitsVar11;
    private javax.swing.JTextField QuizUnitsVar12;
    private javax.swing.JTextField QuizUnitsVar13;
    private javax.swing.JTextField QuizUnitsVar14;
    private javax.swing.JTextField QuizUnitsVar15;
    private javax.swing.JTextField QuizUnitsVar16;
    private javax.swing.JTextField QuizUnitsVar17;
    private javax.swing.JTextField QuizUnitsVar18;
    private javax.swing.JTextField QuizUnitsVar19;
    private javax.swing.JTextField QuizUnitsVar2;
    private javax.swing.JTextField QuizUnitsVar20;
    private javax.swing.JTextField QuizUnitsVar21;
    private javax.swing.JTextField QuizUnitsVar22;
    private javax.swing.JTextField QuizUnitsVar23;
    private javax.swing.JTextField QuizUnitsVar24;
    private javax.swing.JTextField QuizUnitsVar25;
    private javax.swing.JTextField QuizUnitsVar26;
    private javax.swing.JTextField QuizUnitsVar27;
    private javax.swing.JTextField QuizUnitsVar28;
    private javax.swing.JTextField QuizUnitsVar29;
    private javax.swing.JTextField QuizUnitsVar3;
    private javax.swing.JTextField QuizUnitsVar30;
    private javax.swing.JTextField QuizUnitsVar4;
    private javax.swing.JTextField QuizUnitsVar5;
    private javax.swing.JTextField QuizUnitsVar6;
    private javax.swing.JTextField QuizUnitsVar7;
    private javax.swing.JTextField QuizUnitsVar8;
    private javax.swing.JTextField QuizUnitsVar9;
    private javax.swing.JPanel Quizlets;
    private javax.swing.JTextField R1;
    private javax.swing.JTextField R10;
    private javax.swing.JTextField R2;
    private javax.swing.JTextField R3;
    private javax.swing.JTextField R4;
    private javax.swing.JTextField R5;
    private javax.swing.JTextField R6;
    private javax.swing.JTextField R7;
    private javax.swing.JTextField R8;
    private javax.swing.JTextField R9;
    private javax.swing.JButton RB1;
    private javax.swing.JButton RB10;
    private javax.swing.JButton RB2;
    private javax.swing.JButton RB3;
    private javax.swing.JButton RB4;
    private javax.swing.JButton RB5;
    private javax.swing.JButton RB6;
    private javax.swing.JButton RB7;
    private javax.swing.JButton RB8;
    private javax.swing.JButton RB9;
    private javax.swing.JButton RandomQB;
    private javax.swing.JPanel Resources;
    private javax.swing.JTextField ResultOverflow;
    private javax.swing.JPanel SavedQ;
    private javax.swing.JButton SavedQB;
    private javax.swing.JTextField SavedQuestionAnswer;
    private javax.swing.JTextField SavedQuestionAnswerVar;
    private javax.swing.JTextField SavedQuestionUnits;
    private javax.swing.JTextField SavedQuestionUnitsVar;
    private javax.swing.JTextArea SavedQuestionViewer;
    private javax.swing.JPanel SavedT;
    private javax.swing.JButton SavedTestsB;
    private javax.swing.JPanel Search;
    private javax.swing.JButton SearchB;
    private javax.swing.JButton SearchB1;
    private javax.swing.JButton SearchB2;
    private javax.swing.JTextField SearchBox;
    private javax.swing.JTextField SearchBox2;
    private javax.swing.JComboBox SearchCB1;
    private javax.swing.JComboBox SearchCB2;
    private javax.swing.JComboBox SearchCB3;
    private javax.swing.JPanel SearchResults;
    private javax.swing.JButton StartTestB;
    private javax.swing.JPanel Stats;
    private javax.swing.JTextField TCompleted;
    private javax.swing.JRadioButton TLL;
    private javax.swing.JRadioButton TLM;
    private javax.swing.JRadioButton TLS;
    private javax.swing.JButton TakeaTestB;
    private javax.swing.JPanel TestA;
    private javax.swing.JPanel TestB;
    private javax.swing.JPanel TestC;
    private javax.swing.JPanel TopicL;
    private javax.swing.JTree TopicList;
    private javax.swing.JButton TopicListB;
    private javax.swing.JTextField Units;
    private javax.swing.JTextField UnitsVar;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton34;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton36;
    private javax.swing.JButton jButton37;
    private javax.swing.JButton jButton38;
    private javax.swing.JButton jButton39;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton40;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton43;
    private javax.swing.JButton jButton44;
    private javax.swing.JButton jButton45;
    private javax.swing.JButton jButton46;
    private javax.swing.JButton jButton47;
    private javax.swing.JButton jButton48;
    private javax.swing.JButton jButton49;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton50;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton53;
    private javax.swing.JButton jButton54;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel100;
    private javax.swing.JLabel jLabel101;
    private javax.swing.JLabel jLabel102;
    private javax.swing.JLabel jLabel103;
    private javax.swing.JLabel jLabel104;
    private javax.swing.JLabel jLabel105;
    private javax.swing.JLabel jLabel106;
    private javax.swing.JLabel jLabel107;
    private javax.swing.JLabel jLabel108;
    private javax.swing.JLabel jLabel109;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel110;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel113;
    private javax.swing.JLabel jLabel114;
    private javax.swing.JLabel jLabel115;
    private javax.swing.JLabel jLabel116;
    private javax.swing.JLabel jLabel117;
    private javax.swing.JLabel jLabel118;
    private javax.swing.JLabel jLabel119;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel120;
    private javax.swing.JLabel jLabel121;
    private javax.swing.JLabel jLabel122;
    private javax.swing.JLabel jLabel123;
    private javax.swing.JLabel jLabel124;
    private javax.swing.JLabel jLabel125;
    private javax.swing.JLabel jLabel126;
    private javax.swing.JLabel jLabel127;
    private javax.swing.JLabel jLabel128;
    private javax.swing.JLabel jLabel129;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel130;
    private javax.swing.JLabel jLabel131;
    private javax.swing.JLabel jLabel132;
    private javax.swing.JLabel jLabel133;
    private javax.swing.JLabel jLabel134;
    private javax.swing.JLabel jLabel135;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JLabel jLabel98;
    private javax.swing.JLabel jLabel99;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTextArea jTextArea7;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField22;
    // End of variables declaration//GEN-END:variables
//Methods
    public boolean equal(double x, String str)
    {
    //java.lang.NumberFormatException
    double y;
    try
    {
    y = Double.parseDouble(str);
    }
    catch(NumberFormatException e)
    {
        return false;
    }
    double a = Math.abs(x-y);
    double margin = 1;
    return a <= margin;
    }
    
    public void Search()
    {
        int x = 0;
        boolean a1 = true;
        boolean a2 = true;
        boolean a3 = true;
        boolean a4 = true;
        boolean a5 = true;
        boolean a6 = true;
        boolean a7 = true;
        boolean a8 = true;
        boolean a9 = true;
        boolean a10 = true;
        boolean d = true;
        boolean abc = false;
        outer: while(d)
        {
            if(x > tempArr.length-2)
            {
                d = false;
                x = 0;
            }
            inner1: for(int i = x; i < tempArr.length && a1; i ++)
            {
                x = i;
                if(d && SearchBox.getText().equalsIgnoreCase(tempArr[i].questionname))
                {
                    R1.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                    Q1 = tempArr[i];
                    a1 = false;
                    x++;
                    continue inner1;
                }
                
                if(d == false)
                {
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword1))
                        {
                            R1.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q1 = tempArr[i];
                            a1 = false;
                            x++;
                            continue inner1;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner1;
                    }
                    
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword2))
                        {
                            R1.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q1 = tempArr[i];
                            a1 = false;
                            x++;
                            continue inner1;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner1;
                    }
                    
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword3))
                        {
                            R1.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q1 = tempArr[i];
                            a1 = false;
                            x++;
                            continue inner1;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner1;
                    }
                    
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword4))
                        {
                            R1.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q1 = tempArr[i];
                            a1 = false;
                            x++;
                            continue inner1;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner1;
                    }
                }
            }
            
            inner2: for(int i = x; i < tempArr.length && a2; i ++)
            {
                x = i;
                if(d && SearchBox.getText().equalsIgnoreCase(tempArr[i].questionname))
                {
                    R2.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                    Q2 = tempArr[i];
                    a2 = false;
                    x++;
                    continue inner2;
                }
                
                if(d == false)
                {
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword1))
                        {
                            R2.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q2 = tempArr[i];
                            a2 = false;
                            x++;
                            continue inner2;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner2;
                    }
                    
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword2))
                        {
                            R2.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q2 = tempArr[i];
                            a2 = false;
                            x++;
                            continue inner2;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner2;
                    }
                    
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword3))
                        {
                            R2.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q2 = tempArr[i];
                            a2 = false;
                            x++;
                            continue inner2;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner2;
                    }
                    
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword4))
                        {
                            R2.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q2 = tempArr[i];
                            a2 = false;
                            x++;
                            continue inner2;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner2;
                    }
                }
            }
            
            inner3: for(int i = x; i < tempArr.length && a3; i ++)
            {
                x = i;
                if(d && SearchBox.getText().equalsIgnoreCase(tempArr[i].questionname))
                {
                    R3.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                    Q3 = tempArr[i];
                    a3 = false;
                    x++;
                    continue inner3;
                }
                
                if(d == false)
                {
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword1))
                        {
                            R3.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q3 = tempArr[i];
                            a3 = false;
                            x++;
                            continue inner3;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner3;
                    }
                    
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword2))
                        {
                            R3.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q3 = tempArr[i];
                            a3 = false;
                            x++;
                            continue inner3;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner3;
                    }
                    
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword3))
                        {
                            R3.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q3 = tempArr[i];
                            a3 = false;
                            x++;
                            continue inner3;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner3;
                    }
                    
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword4))
                        {
                            R3.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q3 = tempArr[i];
                            a3 = false;
                            x++;
                            continue inner3;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner3;
                    }
                }
            }
            
            inner4: for(int i = x; i < tempArr.length && a4; i ++)
            {
                x = i;
                if(d && SearchBox.getText().equalsIgnoreCase(tempArr[i].questionname))
                {
                    R4.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                    Q4 = tempArr[i];
                    a4 = false;
                    x++;
                    continue inner4;
                }
                
                if(d == false)
                {
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword1))
                        {
                            R4.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q4 = tempArr[i];
                            a4 = false;
                            x++;
                            continue inner4;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner4;
                    }
                    
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword2))
                        {
                            R4.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q4 = tempArr[i];
                            a4 = false;
                            x++;
                            continue inner4;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner4;
                    }
                    
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword3))
                        {
                            R4.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q4 = tempArr[i];
                            a4 = false;
                            x++;
                            continue inner4;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner4;
                    }
                    
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword4))
                        {
                            R4.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q4 = tempArr[i];
                            a4 = false;
                            x++;
                            continue inner4;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner4;
                    }
                }
            }
            
            inner5: for(int i = x; i < tempArr.length && a5; i ++)
            {
                x = i;
                if(d && SearchBox.getText().equalsIgnoreCase(tempArr[i].questionname))
                {
                    R5.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                    Q5 = tempArr[i];
                    a5 = false;
                    x++;
                    continue inner5;
                }
                
                if(d == false)
                {
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword1))
                        {
                            R5.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q5 = tempArr[i];
                            a5 = false;
                            x++;
                            continue inner5;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner5;
                    }
                    
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword2))
                        {
                            R5.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q5 = tempArr[i];
                            a5 = false;
                            x++;
                            continue inner5;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner5;
                    }
                    
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword3))
                        {
                            R5.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q5 = tempArr[i];
                            a5 = false;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner5;
                    }
                    
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword4))
                        {
                            R5.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q5 = tempArr[i];
                            a5 = false;
                            x++;
                            continue inner5;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner5;
                    }
                }
            }
            
            inner6: for(int i = x; i < tempArr.length && a6; i ++)
            {
                x = i;
                if(d && SearchBox.getText().equalsIgnoreCase(tempArr[i].questionname))
                {
                    R6.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                    Q6 = tempArr[i];
                    a6 = false;
                    x++;
                    continue inner6;
                }
                
                if(d == false)
                {
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword1))
                        {
                            R6.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q6 = tempArr[i];
                            a6 = false;
                            x++;
                            continue inner6;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner6;
                    }
                    
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword2))
                        {
                            R6.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q6 = tempArr[i];
                            a6 = false;
                            x++;
                            continue inner6;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner6;
                    }
                    
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword3))
                        {
                            R6.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q6 = tempArr[i];
                            a6 = false;
                            x++;
                            continue inner6;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner6;
                    }
                    
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword4))
                        {
                            R6.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q6 = tempArr[i];
                            a6 = false;
                            x++;
                            continue inner6;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner6;
                    }
                }
            }
            
            inner7: for(int i = x; i < tempArr.length && a7; i ++)
            {
                x =i;
                if(d && SearchBox.getText().equalsIgnoreCase(tempArr[i].questionname))
                {
                    R7.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                    Q7 = tempArr[i];
                    a7 = false;
                    x++;
                    continue inner7;
                }
                
                if(d == false)
                {
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword1))
                        {
                            R7.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q7 = tempArr[i];
                            a7 = false;
                            x++;
                            continue inner7;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner7;
                    }
                    
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword2))
                        {
                            R7.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q7 = tempArr[i];
                            a7 = false;
                            x++;
                            continue inner7;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner7;
                    }
                    
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword3))
                        {
                            R7.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q7 = tempArr[i];
                            a7 = false;
                            x++;
                            continue inner7;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner7;
                    }
                    
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword4))
                        {
                            R7.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q7 = tempArr[i];
                            a7 = false;
                            x++;
                            continue inner7;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner7;
                    }
                }
            }
            
            inner8: for(int i = x; i < tempArr.length && a8; i ++)
            {
                x =i;
                if(d && SearchBox.getText().equalsIgnoreCase(tempArr[i].questionname))
                {
                    R8.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                    Q8 = tempArr[i];
                    a8 = false;
                    x++;
                    continue inner8;
                }
                
                if(d == false)
                {
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword1))
                        {
                            R8.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q8 = tempArr[i];
                            a8 = false;
                            x++;
                            continue inner8;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner8;
                    }
                    
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword2))
                        {
                            R8.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q8 = tempArr[i];
                            a8 = false;
                            x++;
                            continue inner8;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner8;
                    }
                    
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword3))
                        {
                            R8.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q8 = tempArr[i];
                            a8 = false;
                            x++;
                            continue inner8;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner8;
                    }
                    
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword4))
                        {
                            R8.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q8 = tempArr[i];
                            a8 = false;
                            x++;
                            continue inner8;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner8;
                    }
                }
            }
            
            inner9: for(int i = x; i < tempArr.length && a9; i ++)
            {
                x = i;
                if(d && SearchBox.getText().equalsIgnoreCase(tempArr[i].questionname))
                {
                    R9.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                    Q9 = tempArr[i];
                    a9 = false;
                    x++;
                    continue inner9;
                }
                
                if(d == false)
                {
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword1))
                        {
                            R9.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q9 = tempArr[i];
                            a9 = false;
                            x++;
                            continue inner9;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner9;
                    }
                    
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword2))
                        {
                            R9.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q9 = tempArr[i];
                            a9 = false;
                            x++;
                            continue inner9;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner9;
                    }
                    
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword3))
                        {
                            R9.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q9 = tempArr[i];
                            a9 = false;
                            x++;
                            continue inner9;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner9;
                    }
                    
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword4))
                        {
                            R9.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q9 = tempArr[i];
                            a9 = false;
                            x++;
                            continue inner9;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner9;
                    }
                }
            }
            
            inner10: for(int i = x; i < tempArr.length && a10; i ++)
            {
                x = i;
                if(d && SearchBox.getText().equalsIgnoreCase(tempArr[i].questionname))
                {
                    R10.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                    Q10 = tempArr[i];
                    a10 = false;
                    ResultOverflow.setText("Refine your search for less Questions");
                    ResultOverflow.setVisible(true);
                    abc = true;
                    d = false;
                }
                
                if(d == false)
                {
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword1))
                        {
                            R10.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q10 = tempArr[i];
                            a10 = false;
                            ResultOverflow.setText("Refine your search for less Questions");
                            ResultOverflow.setVisible(true);
                            abc = true;
                            d = false;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner10;
                    }
                    
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword2))
                        {
                            R10.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q10 = tempArr[i];
                            a10 = false;
                            ResultOverflow.setText("Refine your search for less Questions");
                            ResultOverflow.setVisible(true);
                            abc = true;
                            d = false;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner10;
                    }
                    
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword3))
                        {
                            R10.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q10 = tempArr[i];
                            a10 = false;
                            ResultOverflow.setText("Refine your search for less Questions");
                            ResultOverflow.setVisible(true);
                            abc = true;
                            d = false;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner10;
                    }
                    
                    try
                    {
                        if(SearchBox.getText().equalsIgnoreCase(tempArr[i].keyword4))
                        {
                            R10.setText(tempArr[i].questionname + "\t" + tempArr[i].questiontext);
                            Q10 = tempArr[i];
                            a10 = false;
                            ResultOverflow.setText("Refine your search for less Questions");
                            ResultOverflow.setVisible(true);
                            abc = true;
                            d = false;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner10;
                    }
                }
            }
        }
        boolean asd = false;
        if(R1.getText().equals(""))
        {
            ResultOverflow.setText("Sorry, no results were found. :(");
            ResultOverflow.setVisible(true);
            asd = true;
        }
        CardLayout card = (CardLayout)PanCard.getLayout();
            card.show(PanCard, "Search");
            CardLayout card2 = (CardLayout)PanCard.getLayout();
            card2.show(PanCard, "Search Results");
            if(asd)
                JOptionPane.showMessageDialog(NoQuery.getTopLevelAncestor(), "Sorry, no results were found. :(", "Unlucky Mate", JOptionPane.ERROR_MESSAGE);
            if(abc)
                JOptionPane.showMessageDialog(NoQuery.getTopLevelAncestor(), "Refine your search for less Questions", "SearchBox Overflow", JOptionPane.WARNING_MESSAGE);
    }
    
    public Question emptyQ()
    {
        return new Question("Null","Null",0,"Null");
    }
    
    public boolean testcheck()
    {
        boolean a = true;
        if(KinematicsRB1.isSelected())
            a = false;
        else if(EnergyRB1.isSelected())
            a = false;
        else if(ForcesRB1.isSelected())
            a = false;
        else if(CircularMotionRB1.isSelected())
            a = false;
        else if(MomentumRB1.isSelected())
            a = false;
        else if(GravityRB1.isSelected())
            a = false;
        return a;
    }
    
    public void addkinematics()
    {
        TestQs.add(Database.VD1());
        TestQs.add(Database.VD2());
        TestQs.add(Database.VD3());
        TestQs.add(Database.VD4());
        TestQs.add(Database.VD5());
        TestQs.add(Database.Acc1());
        TestQs.add(Database.Acc2());
        TestQs.add(Database.Acc3());
        TestQs.add(Database.Acc4());
        TestQs.add(Database.HoriMot1());
        TestQs.add(Database.HoriMot2());
        TestQs.add(Database.HoriMot3());
        TestQs.add(Database.HoriMot4());
        TestQs.add(Database.DropB1());
        TestQs.add(Database.DropB2());
        TestQs.add(Database.DropB3());
        TestQs.add(Database.DropB4());
        TestQs.add(Database.DropB5());
        TestQs.add(Database.DropB6());
        TestQs.add(Database.ThrowB1());
        TestQs.add(Database.ThrowB2());
        TestQs.add(Database.ThrowB3());
        TestQs.add(Database.ThrowB4());
        TestQs.add(Database.ThrowB5());
        TestQs.add(Database.ThrowB6());
        TestQs.add(Database.LS1());
        TestQs.add(Database.LS2());
        TestQs.add(Database.LS3());
        TestQs.add(Database.LS4());
        TestQs.add(Database.LA1());
        TestQs.add(Database.LA2());
        TestQs.add(Database.LA3());
    }
    
    public void addforces()
    {
        TestQs.add(Database.Vector1());
        TestQs.add(Database.Vector2());
        TestQs.add(Database.Vector3());
        TestQs.add(Database.FLaw1());
        TestQs.add(Database.FLaw2());
        TestQs.add(Database.FLaw3());
        TestQs.add(Database.FLaw4());
        TestQs.add(Database.FSFriction1());
        TestQs.add(Database.FSFriction2());
        TestQs.add(Database.AORFriction1());
        TestQs.add(Database.AORFriction2());
        TestQs.add(Database.AORFriction3());
        TestQs.add(Database.AORFriction4());
        TestQs.add(Database.Fma1());
        TestQs.add(Database.Fma2());
        TestQs.add(Database.Fma3());
        TestQs.add(Database.AngledForces1());
        TestQs.add(Database.AngledForces2());
        TestQs.add(Database.AngledForces3());
        TestQs.add(Database.AngledForces4());
    }
    
    public void QuizMaker(boolean ans)
    {
        if(ans)
        {
            QuizAnsB1.setVisible(true);
            QuizAnsB2.setVisible(true);
            QuizAnsB3.setVisible(true);
            QuizAnsB4.setVisible(true);
            QuizAnsB5.setVisible(true);
        }
        else
        {
            QuizAnsB1.setVisible(false);
            QuizAnsB2.setVisible(false);
            QuizAnsB3.setVisible(false);
            QuizAnsB4.setVisible(false);
            QuizAnsB5.setVisible(false);
        }
        QuizAnswerVar1.setVisible(false);
        QuizAnswerVar2.setVisible(false);
        QuizAnswerVar3.setVisible(false);
        QuizAnswerVar4.setVisible(false);
        QuizAnswerVar5.setVisible(false);
        QuizUnitsVar1.setVisible(false);
        QuizUnitsVar2.setVisible(false);
        QuizUnitsVar3.setVisible(false);
        QuizUnitsVar4.setVisible(false);
        QuizUnitsVar5.setVisible(false);
        if(KinematicsRB1.isSelected())
            addkinematics();
        if(ForcesRB1.isSelected())
            addforces();
        //if(EnergyRB1.isSelected())
          //  a = false;
        
        //if(CircularMotionRB1.isSelected())
          //  a = false;
        //if(MomentumRB1.isSelected())
         //   a = false;
        //if(GravityRB1.isSelected())
            //a = false;
        int Qnum = Database.rnum(TestQs.size());
        QuizQ1 = TestQs.get(Qnum);
        TestQs.remove(Qnum);
        Qnum = Database.rnum(TestQs.size());
        QuizQ2 = TestQs.get(Qnum);
        TestQs.remove(Qnum);
        Qnum = Database.rnum(TestQs.size());
        QuizQ3 = TestQs.get(Qnum);
        TestQs.remove(Qnum);
        Qnum = Database.rnum(TestQs.size());
        QuizQ4 = TestQs.get(Qnum);
        TestQs.remove(Qnum);
        Qnum = Database.rnum(TestQs.size());
        QuizQ5 = TestQs.get(Qnum);

        Quiz1.setText(QuizQ1.questiontext);
        Quiz2.setText(QuizQ2.questiontext);
        Quiz3.setText(QuizQ3.questiontext);
        Quiz4.setText(QuizQ4.questiontext);
        Quiz5.setText(QuizQ5.questiontext);
        TestQs = blanc();
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Quiz Form");
    }
    
    public void QuestMaker(boolean ans)
    {
        if(ans)
        {
            QuizAnsB6.setVisible(true);
            QuizAnsB7.setVisible(true);
            QuizAnsB8.setVisible(true);
            QuizAnsB9.setVisible(true);
            QuizAnsB10.setVisible(true);
            QuizAnsB11.setVisible(true);
            QuizAnsB12.setVisible(true);
            QuizAnsB13.setVisible(true);
            QuizAnsB14.setVisible(true);
            QuizAnsB15.setVisible(true);
        }
        else
        {
            QuizAnsB6.setVisible(false);
            QuizAnsB7.setVisible(false);
            QuizAnsB8.setVisible(false);
            QuizAnsB9.setVisible(false);
            QuizAnsB10.setVisible(false);
            QuizAnsB11.setVisible(false);
            QuizAnsB12.setVisible(false);
            QuizAnsB13.setVisible(false);
            QuizAnsB14.setVisible(false);
            QuizAnsB15.setVisible(false);
        }
        QuizAnswerVar6.setVisible(false);
        QuizAnswerVar7.setVisible(false);
        QuizAnswerVar8.setVisible(false);
        QuizAnswerVar9.setVisible(false);
        QuizAnswerVar10.setVisible(false);
        QuizAnswerVar11.setVisible(false);
        QuizAnswerVar12.setVisible(false);
        QuizAnswerVar13.setVisible(false);
        QuizAnswerVar14.setVisible(false);
        QuizAnswerVar15.setVisible(false);
        QuizUnitsVar6.setVisible(false);
        QuizUnitsVar7.setVisible(false);
        QuizUnitsVar8.setVisible(false);
        QuizUnitsVar9.setVisible(false);
        QuizUnitsVar10.setVisible(false);
        QuizUnitsVar11.setVisible(false);
        QuizUnitsVar12.setVisible(false);
        QuizUnitsVar13.setVisible(false);
        QuizUnitsVar14.setVisible(false);
        QuizUnitsVar15.setVisible(false);
        if(KinematicsRB1.isSelected())
            addkinematics();
        if(ForcesRB1.isSelected())
            addforces();
        //if(EnergyRB1.isSelected())
          //  a = false;
        
        //if(CircularMotionRB1.isSelected())
          //  a = false;
        //if(MomentumRB1.isSelected())
         //   a = false;
        //if(GravityRB1.isSelected())
            //a = false;
        int Qnum = Database.rnum(TestQs.size());
        QuizQ1 = TestQs.get(Qnum);
        TestQs.remove(Qnum);
        Qnum = Database.rnum(TestQs.size());
        QuizQ2 = TestQs.get(Qnum);
        TestQs.remove(Qnum);
        Qnum = Database.rnum(TestQs.size());
        QuizQ3 = TestQs.get(Qnum);
        TestQs.remove(Qnum);
        Qnum = Database.rnum(TestQs.size());
        QuizQ4 = TestQs.get(Qnum);
        TestQs.remove(Qnum);
        Qnum = Database.rnum(TestQs.size());
        QuizQ5 = TestQs.get(Qnum);
        TestQs.remove(Qnum);
        Qnum = Database.rnum(TestQs.size());
        QuizQ6 = TestQs.get(Qnum);
        TestQs.remove(Qnum);
        Qnum = Database.rnum(TestQs.size());
        QuizQ7 = TestQs.get(Qnum);
        TestQs.remove(Qnum);
        Qnum = Database.rnum(TestQs.size());
        QuizQ8 = TestQs.get(Qnum);
        TestQs.remove(Qnum);
        Qnum = Database.rnum(TestQs.size());
        QuizQ9 = TestQs.get(Qnum);
        TestQs.remove(Qnum);
        Qnum = Database.rnum(TestQs.size());
        QuizQ10 = TestQs.get(Qnum);
        
        Quiz6.setText(QuizQ1.questiontext);
        Quiz7.setText(QuizQ2.questiontext);
        Quiz8.setText(QuizQ3.questiontext);
        Quiz9.setText(QuizQ4.questiontext);
        Quiz10.setText(QuizQ5.questiontext);
        Quiz11.setText(QuizQ6.questiontext);
        Quiz12.setText(QuizQ7.questiontext);
        Quiz13.setText(QuizQ8.questiontext);
        Quiz14.setText(QuizQ9.questiontext);
        Quiz15.setText(QuizQ10.questiontext);
        TestQs = blanc();
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Quest Form A");
    }
    
    public void TestMaker(boolean ans)
    {
        if(ans)
        {
            QuizAnsB16.setVisible(true);
            QuizAnsB7.setVisible(true);
            QuizAnsB8.setVisible(true);
            QuizAnsB9.setVisible(true);
            QuizAnsB20.setVisible(true);
            QuizAnsB21.setVisible(true);
            QuizAnsB22.setVisible(true);
            QuizAnsB23.setVisible(true);
            QuizAnsB24.setVisible(true);
            QuizAnsB25.setVisible(true);
            QuizAnsB26.setVisible(true);
            QuizAnsB27.setVisible(true);
            QuizAnsB28.setVisible(true);
            QuizAnsB29.setVisible(true);
            QuizAnsB30.setVisible(true);
        }
        else
        {
            QuizAnsB16.setVisible(false);
            QuizAnsB17.setVisible(false);
            QuizAnsB18.setVisible(false);
            QuizAnsB19.setVisible(false);
            QuizAnsB20.setVisible(false);
            QuizAnsB21.setVisible(false);
            QuizAnsB22.setVisible(false);
            QuizAnsB23.setVisible(false);
            QuizAnsB24.setVisible(false);
            QuizAnsB25.setVisible(false);
            QuizAnsB26.setVisible(false);
            QuizAnsB27.setVisible(false);
            QuizAnsB28.setVisible(false);
            QuizAnsB29.setVisible(false);
            QuizAnsB30.setVisible(false);
        }
        QuizAnswerVar16.setVisible(false);
        QuizAnswerVar17.setVisible(false);
        QuizAnswerVar18.setVisible(false);
        QuizAnswerVar19.setVisible(false);
        QuizAnswerVar20.setVisible(false);
        QuizAnswerVar21.setVisible(false);
        QuizAnswerVar22.setVisible(false);
        QuizAnswerVar23.setVisible(false);
        QuizAnswerVar24.setVisible(false);
        QuizAnswerVar25.setVisible(false);
        QuizAnswerVar26.setVisible(false);
        QuizAnswerVar27.setVisible(false);
        QuizAnswerVar28.setVisible(false);
        QuizAnswerVar29.setVisible(false);
        QuizAnswerVar30.setVisible(false);
        QuizUnitsVar16.setVisible(false);
        QuizUnitsVar17.setVisible(false);
        QuizUnitsVar18.setVisible(false);
        QuizUnitsVar19.setVisible(false);
        QuizUnitsVar20.setVisible(false);
        QuizUnitsVar21.setVisible(false);
        QuizUnitsVar22.setVisible(false);
        QuizUnitsVar23.setVisible(false);
        QuizUnitsVar24.setVisible(false);
        QuizUnitsVar25.setVisible(false);
        QuizUnitsVar26.setVisible(false);
        QuizUnitsVar27.setVisible(false);
        QuizUnitsVar28.setVisible(false);
        QuizUnitsVar29.setVisible(false);
        QuizUnitsVar30.setVisible(false);
        if(KinematicsRB1.isSelected())
            addkinematics();
        if(ForcesRB1.isSelected())
            addforces();
        //if(EnergyRB1.isSelected())
          //  a = false;
        
        //if(CircularMotionRB1.isSelected())
          //  a = false;
        //if(MomentumRB1.isSelected())
         //   a = false;
        //if(GravityRB1.isSelected())
            //a = false;
        int Qnum = Database.rnum(TestQs.size());
        QuizQ1 = TestQs.get(Qnum);
        TestQs.remove(Qnum);
        Qnum = Database.rnum(TestQs.size());
        QuizQ2 = TestQs.get(Qnum);
        TestQs.remove(Qnum);
        Qnum = Database.rnum(TestQs.size());
        QuizQ3 = TestQs.get(Qnum);
        TestQs.remove(Qnum);
        Qnum = Database.rnum(TestQs.size());
        QuizQ4 = TestQs.get(Qnum);
        TestQs.remove(Qnum);
        Qnum = Database.rnum(TestQs.size());
        QuizQ5 = TestQs.get(Qnum);
        TestQs.remove(Qnum);
        Qnum = Database.rnum(TestQs.size());
        QuizQ6 = TestQs.get(Qnum);
        TestQs.remove(Qnum);
        Qnum = Database.rnum(TestQs.size());
        QuizQ7 = TestQs.get(Qnum);
        TestQs.remove(Qnum);
        Qnum = Database.rnum(TestQs.size());
        QuizQ8 = TestQs.get(Qnum);
        TestQs.remove(Qnum);
        Qnum = Database.rnum(TestQs.size());
        QuizQ9 = TestQs.get(Qnum);
        TestQs.remove(Qnum);
        Qnum = Database.rnum(TestQs.size());
        QuizQ10 = TestQs.get(Qnum);
        TestQs.remove(Qnum);
        Qnum = Database.rnum(TestQs.size());
        QuizQ11 = TestQs.get(Qnum);
        TestQs.remove(Qnum);
        Qnum = Database.rnum(TestQs.size());
        QuizQ12 = TestQs.get(Qnum);
        TestQs.remove(Qnum);
        Qnum = Database.rnum(TestQs.size());
        QuizQ13 = TestQs.get(Qnum);
        TestQs.remove(Qnum);
        Qnum = Database.rnum(TestQs.size());
        QuizQ14 = TestQs.get(Qnum);
        TestQs.remove(Qnum);
        Qnum = Database.rnum(TestQs.size());
        QuizQ15 = TestQs.get(Qnum);
        
        Quiz16.setText(QuizQ1.questiontext);
        Quiz17.setText(QuizQ2.questiontext);
        Quiz18.setText(QuizQ3.questiontext);
        Quiz19.setText(QuizQ4.questiontext);
        Quiz20.setText(QuizQ5.questiontext);
        Quiz21.setText(QuizQ6.questiontext);
        Quiz22.setText(QuizQ7.questiontext);
        Quiz23.setText(QuizQ8.questiontext);
        Quiz24.setText(QuizQ9.questiontext);
        Quiz25.setText(QuizQ10.questiontext);
        Quiz26.setText(QuizQ11.questiontext);
        Quiz27.setText(QuizQ12.questiontext);
        Quiz28.setText(QuizQ13.questiontext);
        Quiz29.setText(QuizQ14.questiontext);
        Quiz30.setText(QuizQ15.questiontext);
        TestQs = blanc();
        CardLayout card = (CardLayout)PanCard.getLayout();
        card.show(PanCard, "Test Form A");
    }
    
    public ArrayList blanc()
    {
        ArrayList<Question> tempAL = new ArrayList<Question>();
        return tempAL;
    }
    
    //Advanced Search
    public void AdvSearch()
    {
        Question[] SQ1  = AdvSearchHelper1(AdvSearchBox1.getText());
        Question[] SQ2 = new Question[0];
        Question[] SQ3 = new Question[0];
        Question[] SQ4 = new Question[0];
        if(SearchCB1.getSelectedIndex() == 0 && AdvSearchBox2.getText().equals("") == false)
        {
            SQ2 = AdvSearchHelper1(AdvSearchBox2.getText());
            SQ1 = AdvSearchHelper2(SQ1, SQ2);
            if(SearchCB2.getSelectedIndex() == 0 && AdvSearchBox3.getText().equals("") == false)
            {
                SQ3 = AdvSearchHelper1(AdvSearchBox3.getText());
                SQ1 = AdvSearchHelper2(SQ1, SQ3);
                if(SearchCB3.getSelectedIndex() == 0 && AdvSearchBox4.getText().equals("") == false)
                {
                    SQ4 = AdvSearchHelper1(AdvSearchBox4.getText());
                    SQ1 = AdvSearchHelper2(SQ1, SQ4);
                    filler(SQ1);
                }
                else if(SearchCB3.getSelectedIndex() == 1 && AdvSearchBox4.getText().equals("") == false)
                {
                    filler(SQ1);
                    filler(AdvSearchHelper1(AdvSearchBox4.getText()));
                }
                else
                {
                    filler(SQ1);
                }
            }
            else if(SearchCB2.getSelectedIndex() == 1 && AdvSearchBox3.getText().equals("") == false)
            {
                filler(SQ1);
                SQ3 = AdvSearchHelper1(AdvSearchBox3.getText());
                if(SearchCB3.getSelectedIndex() == 0 && AdvSearchBox4.getText().equals("") == false)
                {
                    SQ4 = AdvSearchHelper1(AdvSearchBox4.getText());
                    SQ3 = AdvSearchHelper2(SQ3, SQ4);
                    filler(SQ3);
                }
                else if(SearchCB3.getSelectedIndex() == 1 && AdvSearchBox4.getText().equals("") == false)
                {
                    filler(SQ3);
                    filler(AdvSearchHelper1(AdvSearchBox4.getText()));
                }
                else
                filler(SQ3);
            }
            else
            {
                filler(SQ1);
            }
        }
        else if(SearchCB1.getSelectedIndex() == 1 && AdvSearchBox2.getText().equals("") == false)
        {
            filler(SQ1);
            SQ2 = AdvSearchHelper1(AdvSearchBox2.getText());
            if(SearchCB2.getSelectedIndex() == 0 && AdvSearchBox3.getText().equals("") == false)
            {
                SQ3 = AdvSearchHelper1(AdvSearchBox3.getText());
                SQ2 = AdvSearchHelper2(SQ2, SQ3);
                if(SearchCB3.getSelectedIndex() == 0 && AdvSearchBox4.getText().equals("") == false)
                {
                    SQ4 = AdvSearchHelper1(AdvSearchBox4.getText());
                    SQ2 = AdvSearchHelper2(SQ2, SQ4);
                    filler(SQ2);
                }
                else if(SearchCB3.getSelectedIndex() == 0 && AdvSearchBox4.getText().equals("") == false)
                {
                    filler(SQ2);
                    filler(AdvSearchHelper1(AdvSearchBox4.getText()));
                }
                else
                {
                    filler(SQ2);
                }
            }
            else if(SearchCB2.getSelectedIndex() == 1 && AdvSearchBox3.getText().equals("") == false)
            {
                filler(SQ2);
                SQ3 = AdvSearchHelper1(AdvSearchBox3.getText());
                if(SearchCB3.getSelectedIndex() == 0 && AdvSearchBox4.getText().equals("") == false)
                {
                    SQ4 = AdvSearchHelper1(AdvSearchBox4.getText());
                    SQ3 = AdvSearchHelper2(SQ3, SQ4);
                    filler(SQ3);
                }
                else if(SearchCB3.getSelectedIndex() == 0 && AdvSearchBox4.getText().equals("") == false)
                {
                    filler(SQ3);
                    filler(AdvSearchHelper1(AdvSearchBox4.getText()));
                }
                else
                filler(SQ3);
            }
            else
            filler(SQ2);
        }
        else
        filler(SQ1);
        
        CardLayout card2 = (CardLayout)PanCard.getLayout();
            card2.show(PanCard, "Search Results");
        if(R10.getText().equals("") == false)
        {
            ResultOverflow.setText("Refine your search for less Questions");
            ResultOverflow.setVisible(true);
            JOptionPane.showMessageDialog(NoQuery.getTopLevelAncestor(), "Refine your search for less Questions", "SearchBox Overflow", JOptionPane.WARNING_MESSAGE);
        }
        if(R1.getText().equals(""))
        {
            ResultOverflow.setText("Sorry, no results were found. :(");
            ResultOverflow.setVisible(true);
            JOptionPane.showMessageDialog(NoQuery.getTopLevelAncestor(), "Sorry, no results were found. :(", "Unlucky Mate", JOptionPane.ERROR_MESSAGE);
        }
        
    }
    
    public Question[] AdvSearchHelper1(String SearchBar)
    {
        Question[] SearchQuestions = new Question[10];
        int x = 0;
        boolean a1 = true;
        boolean a2 = true;
        boolean a3 = true;
        boolean a4 = true;
        boolean a5 = true;
        boolean a6 = true;
        boolean a7 = true;
        boolean a8 = true;
        boolean a9 = true;
        boolean a10 = true;
        boolean d = true;
        for(int i = 0; i < 10; i ++)
        {
            SearchQuestions[i] = new Question("Empty", "Empty", 1.1d, "Empty");
        }
        outer: while(d)
        {
            if(x > tempArr.length-2)
            {
                d = false;
                x = 0;
            }
            inner1: for(int i = x; i < tempArr.length && a1; i ++)
            {
                x = i;
                if(d && SearchBar.equalsIgnoreCase(tempArr[i].questionname))
                {
                    
                    SearchQuestions[0] = tempArr[i];
                    a1 = false;
                    x++;
                    continue inner1;
                }
                
                if(d == false)
                {
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword1))
                        {
                            
                            SearchQuestions[0] = tempArr[i];
                            a1 = false;
                            x++;
                            continue inner1;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner1;
                    }
                    
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword2))
                        {
                            
                            SearchQuestions[0] = tempArr[i];
                            a1 = false;
                            x++;
                            continue inner1;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner1;
                    }
                    
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword3))
                        {
                            
                            SearchQuestions[0] = tempArr[i];
                            a1 = false;
                            x++;
                            continue inner1;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner1;
                    }
                    
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword4))
                        {
                            
                            SearchQuestions[0] = tempArr[i];
                            a1 = false;
                            x++;
                            continue inner1;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner1;
                    }
                }
            }
            
            inner2: for(int i = x; i < tempArr.length && a2; i ++)
            {
                x = i;
                if(d && SearchBar.equalsIgnoreCase(tempArr[i].questionname))
                {
                    
                    SearchQuestions[1] = tempArr[i];
                    a2 = false;
                    x++;
                    continue inner2;
                }
                
                if(d == false)
                {
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword1))
                        {
                            
                            SearchQuestions[1] = tempArr[i];
                            a2 = false;
                            x++;
                            continue inner2;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner2;
                    }
                    
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword2))
                        {
                            
                            SearchQuestions[1] = tempArr[i];
                            a2 = false;
                            x++;
                            continue inner2;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner2;
                    }
                    
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword3))
                        {
                            
                            SearchQuestions[1] = tempArr[i];
                            a2 = false;
                            x++;
                            continue inner2;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner2;
                    }
                    
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword4))
                        {
                            
                            SearchQuestions[1] = tempArr[i];
                            a2 = false;
                            x++;
                            continue inner2;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner2;
                    }
                }
            }
            
            inner3: for(int i = x; i < tempArr.length && a3; i ++)
            {
                x = i;
                if(d && SearchBar.equalsIgnoreCase(tempArr[i].questionname))
                {
                    
                    SearchQuestions[2] = tempArr[i];
                    a3 = false;
                    x++;
                    continue inner3;
                }
                
                if(d == false)
                {
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword1))
                        {
                            
                            SearchQuestions[2] = tempArr[i];
                            a3 = false;
                            x++;
                            continue inner3;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner3;
                    }
                    
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword2))
                        {
                            
                            SearchQuestions[2] = tempArr[i];
                            a3 = false;
                            x++;
                            continue inner3;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner3;
                    }
                    
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword3))
                        {
                            
                            SearchQuestions[2] = tempArr[i];
                            a3 = false;
                            x++;
                            continue inner3;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner3;
                    }
                    
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword4))
                        {
                            
                            SearchQuestions[2] = tempArr[i];
                            a3 = false;
                            x++;
                            continue inner3;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner3;
                    }
                }
            }
            
            inner4: for(int i = x; i < tempArr.length && a4; i ++)
            {
                x = i;
                if(d && SearchBar.equalsIgnoreCase(tempArr[i].questionname))
                {
                    
                    SearchQuestions[3] = tempArr[i];
                    a4 = false;
                    x++;
                    continue inner4;
                }
                
                if(d == false)
                {
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword1))
                        {
                            
                            SearchQuestions[3] = tempArr[i];
                            a4 = false;
                            x++;
                            continue inner4;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner4;
                    }
                    
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword2))
                        {
                            
                            SearchQuestions[3] = tempArr[i];
                            a4 = false;
                            x++;
                            continue inner4;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner4;
                    }
                    
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword3))
                        {
                            
                            SearchQuestions[3] = tempArr[i];
                            a4 = false;
                            x++;
                            continue inner4;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner4;
                    }
                    
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword4))
                        {
                            
                            SearchQuestions[3] = tempArr[i];
                            a4 = false;
                            x++;
                            continue inner4;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner4;
                    }
                }
            }
            
            inner5: for(int i = x; i < tempArr.length && a5; i ++)
            {
                x = i;
                if(d && SearchBar.equalsIgnoreCase(tempArr[i].questionname))
                {
                    
                    SearchQuestions[4] = tempArr[i];
                    a5 = false;
                    x++;
                    continue inner5;
                }
                
                if(d == false)
                {
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword1))
                        {
                            
                            SearchQuestions[4] = tempArr[i];
                            a5 = false;
                            x++;
                            continue inner5;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner5;
                    }
                    
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword2))
                        {
                            
                            SearchQuestions[4] = tempArr[i];
                            a5 = false;
                            x++;
                            continue inner5;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner5;
                    }
                    
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword3))
                        {
                            
                            SearchQuestions[4] = tempArr[i];
                            a5 = false;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner5;
                    }
                    
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword4))
                        {
                            
                            SearchQuestions[4] = tempArr[i];
                            a5 = false;
                            x++;
                            continue inner5;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner5;
                    }
                }
            }
            
            inner6: for(int i = x; i < tempArr.length && a6; i ++)
            {
                x = i;
                if(d && SearchBar.equalsIgnoreCase(tempArr[i].questionname))
                {
                    
                    SearchQuestions[5] = tempArr[i];
                    a6 = false;
                    x++;
                    continue inner6;
                }
                
                if(d == false)
                {
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword1))
                        {
                            
                            SearchQuestions[5] = tempArr[i];
                            a6 = false;
                            x++;
                            continue inner6;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner6;
                    }
                    
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword2))
                        {
                            
                            SearchQuestions[5] = tempArr[i];
                            a6 = false;
                            x++;
                            continue inner6;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner6;
                    }
                    
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword3))
                        {
                            
                            SearchQuestions[5] = tempArr[i];
                            a6 = false;
                            x++;
                            continue inner6;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner6;
                    }
                    
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword4))
                        {
                            
                            SearchQuestions[5] = tempArr[i];
                            a6 = false;
                            x++;
                            continue inner6;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner6;
                    }
                }
            }
            
            inner7: for(int i = x; i < tempArr.length && a7; i ++)
            {
                x =i;
                if(d && SearchBar.equalsIgnoreCase(tempArr[i].questionname))
                {
                    
                    SearchQuestions[6] = tempArr[i];
                    a7 = false;
                    x++;
                    continue inner7;
                }
                
                if(d == false)
                {
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword1))
                        {
                            
                            SearchQuestions[6] = tempArr[i];
                            a7 = false;
                            x++;
                            continue inner7;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner7;
                    }
                    
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword2))
                        {
                            
                            SearchQuestions[6] = tempArr[i];
                            a7 = false;
                            x++;
                            continue inner7;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner7;
                    }
                    
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword3))
                        {
                            
                            SearchQuestions[6] = tempArr[i];
                            a7 = false;
                            x++;
                            continue inner7;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner7;
                    }
                    
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword4))
                        {
                            
                            SearchQuestions[6] = tempArr[i];
                            a7 = false;
                            x++;
                            continue inner7;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner7;
                    }
                }
            }
            
            inner8: for(int i = x; i < tempArr.length && a8; i ++)
            {
                x =i;
                if(d && SearchBar.equalsIgnoreCase(tempArr[i].questionname))
                {
                    
                    SearchQuestions[7] = tempArr[i];
                    a8 = false;
                    x++;
                    continue inner8;
                }
                
                if(d == false)
                {
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword1))
                        {
                            
                            SearchQuestions[7] = tempArr[i];
                            a8 = false;
                            x++;
                            continue inner8;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner8;
                    }
                    
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword2))
                        {
                            
                            SearchQuestions[7] = tempArr[i];
                            a8 = false;
                            x++;
                            continue inner8;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner8;
                    }
                    
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword3))
                        {
                            
                            SearchQuestions[7] = tempArr[i];
                            a8 = false;
                            x++;
                            continue inner8;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner8;
                    }
                    
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword4))
                        {
                            
                            SearchQuestions[7] = tempArr[i];
                            a8 = false;
                            x++;
                            continue inner8;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner8;
                    }
                }
            }
            
            inner9: for(int i = x; i < tempArr.length && a9; i ++)
            {
                x = i;
                if(d && SearchBar.equalsIgnoreCase(tempArr[i].questionname))
                {
                    
                    SearchQuestions[8] = tempArr[i];
                    a9 = false;
                    x++;
                    continue inner9;
                }
                
                if(d == false)
                {
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword1))
                        {
                            
                            SearchQuestions[8] = tempArr[i];
                            a9 = false;
                            x++;
                            continue inner9;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner9;
                    }
                    
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword2))
                        {
                            
                            SearchQuestions[8] = tempArr[i];
                            a9 = false;
                            x++;
                            continue inner9;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner9;
                    }
                    
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword3))
                        {
                            
                            SearchQuestions[8] = tempArr[i];
                            a9 = false;
                            x++;
                            continue inner9;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner9;
                    }
                    
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword4))
                        {
                            
                            SearchQuestions[8] = tempArr[i];
                            a9 = false;
                            x++;
                            continue inner9;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner9;
                    }
                }
            }
            
            inner10: for(int i = x; i < tempArr.length && a10; i ++)
            {
                x = i;
                if(d && SearchBar.equalsIgnoreCase(tempArr[i].questionname))
                {
                    
                    SearchQuestions[9] = tempArr[i];
                    a10 = false;
                    d = false;
                }
                
                if(d == false)
                {
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword1))
                        {
                            
                            SearchQuestions[9] = tempArr[i];
                            a10 = false;
                            d = false;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner10;
                    }
                    
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword2))
                        {
                            
                            SearchQuestions[9] = tempArr[i];
                            a10 = false;
                            d = false;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner10;
                    }
                    
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword3))
                        {
                            
                            SearchQuestions[9] = tempArr[i];
                            a10 = false;
                            d = false;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner10;
                    }
                    
                    try
                    {
                        if(SearchBar.equalsIgnoreCase(tempArr[i].keyword4))
                        {
                            
                            SearchQuestions[9] = tempArr[i];
                            a10 = false;
                            d = false;
                        }
                    }
                    catch(NullPointerException e)
                    {
                        continue inner10;
                    }
                }
            }
        }
        return SearchQuestions;
    }

    
    public Question[] AdvSearchHelper2(Question[] strs1, Question[] strs2)
    {
        Question[] temparr = new Question[10];
        for(int i = 0; i < 10; i ++)
        {
            temparr[i] = new Question("Empty", "Empty", 1.1d, "Empty");
        }
        int counter = 0;
        outer: for(Question q1: strs1)
            for(Question q2: strs2)
            {
                if(q1.questiontext.equals(q2.questiontext))
                {
                    temparr[counter] = q1;
                    counter++;
                    if(counter == 10)
                    {
                        break outer;
                    }
                    continue outer;
                }
            }
        return temparr;
    }
    
    public void filler(Question[] SQ)
    {
        String x = "Empty";
        int counter = 0;
        if(SQ[counter].questiontext.equals(x) == false && R1.getText().equals(""))
        {
            R1.setText(SQ[counter].questionname + "\t" + SQ[counter].questiontext);
            counter ++;
        }
        if(SQ[counter].questiontext.equals(x) == false && R2.getText().equals(""))
        {
            R2.setText(SQ[counter].questionname + "\t" + SQ[counter].questiontext);
            counter ++;
        }
        if(SQ[counter].questiontext.equals(x) == false && R3.getText().equals(""))
        {
            R3.setText(SQ[counter].questionname + "\t" + SQ[counter].questiontext);
            counter ++;
        }
        if(SQ[counter].questiontext.equals(x) == false && R4.getText().equals(""))
        {
            R4.setText(SQ[counter].questionname + "\t" + SQ[counter].questiontext);
            counter ++;
        }
        if(SQ[counter].questiontext.equals(x) == false && R5.getText().equals(""))
        {
            R5.setText(SQ[counter].questionname + "\t" + SQ[counter].questiontext);
            counter ++;
        }
        if(SQ[counter].questiontext.equals(x) == false && R6.getText().equals(""))
        {
            R6.setText(SQ[counter].questionname + "\t" + SQ[counter].questiontext);
            counter ++;
        }
        if(SQ[counter].questiontext.equals(x) == false && R7.getText().equals(""))
        {
            R7.setText(SQ[counter].questionname + "\t" + SQ[counter].questiontext);
            counter ++;
        }
        if(SQ[counter].questiontext.equals(x) == false && R8.getText().equals(""))
        {
            R8.setText(SQ[counter].questionname + "\t" + SQ[counter].questiontext);
            counter ++;
        }
        if(SQ[counter].questiontext.equals(x) == false && R9.getText().equals(""))
        {
            R9.setText(SQ[counter].questionname + "\t" + SQ[counter].questiontext);
            counter ++;
        }
        if(SQ[counter].questiontext.equals(x) == false && R10.getText().equals(""))
        {
            R10.setText(SQ[counter].questionname + "\t" + SQ[counter].questiontext);
            counter ++;
        }
        
    }

}
